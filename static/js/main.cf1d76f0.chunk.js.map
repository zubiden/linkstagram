{"version":3,"sources":["components/slider/Slider.module.scss","components/basic/button/IconButton.module.scss","components/basic/textarea/TextArea.module.scss","components/basic/input/Input.module.scss","components/posts/modal/ModalPost.module.scss","components/profile/edit/ProfileEdit.module.scss","components/posts/post/Post.module.scss","components/header/Header.module.scss","routes/login/Login.module.scss","components/basic/button/Button.tsx","slices/localizationSlice.ts","util/api.ts","slices/openedPostSlice.ts","slices/postsSlice.ts","slices/profileSlice.ts","util/hooks.ts","components/footer/Footer.tsx","components/basic/avatar/Avatar.tsx","components/header/Header.tsx","util/contants.ts","components/basic/button/IconButton.tsx","components/basic/modal/Modal.tsx","components/basic/textarea/TextArea.tsx","components/slider/Slider.tsx","slices/commentsSlice.ts","store.ts","util/date.ts","util/jsx.tsx","components/posts/comment/Comment.tsx","util/clipboard.js","components/posts/post/Post.tsx","components/posts/modal/ModalPost.tsx","components/posts/feed/Feed.tsx","util/uppy.ts","components/basic/file/ImageInput.tsx","components/posts/new/NewPost.tsx","components/basic/input/Input.tsx","components/profile/edit/ProfileEdit.tsx","components/profile/info/ProfileInfo.tsx","components/stories/Stories.tsx","routes/home/Home.tsx","routes/login/Login.tsx","components/posts/feed/PhotoFeed.tsx","routes/profile/Profile.tsx","App.tsx","serviceWorker.ts","index.tsx","components/basic/button/Button.module.scss","components/basic/avatar/Avatar.module.scss","components/posts/comment/Comment.module.scss","routes/home/Home.module.scss","components/footer/Footer.module.scss","components/posts/feed/Feed.module.scss","components/posts/new/NewPost.module.scss","components/basic/modal/Modal.module.scss","components/basic/file/ImageInput.module.scss","components/posts/feed/PhotoFeed.module.scss","components/profile/info/ProfileInfo.module.scss","components/stories/Stories.module.scss","routes/profile/Profile.module.scss"],"names":["module","exports","Button","color","lightBorder","square","to","className","children","smallPadding","onClick","otherArgs","history","useHistory","classNames","styles","button","ev","push","VALID_LANGUAGES","initialState","strings","code","localStorage","getItem","status","setLanguage","createAsyncThunk","thunkAPI","a","state","getState","selectTranslationStrings","Object","keys","length","selectLanguageCode","fetch","then","res","json","key","setItem","dispatch","setLanguageCode","Error","localizationSlice","createSlice","name","reducers","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","localization","API_BASE","login","data","method","body","JSON","stringify","headers","Headers","auth","get","removeItem","leaveComment","post_id","message","request","fetchComments","removeLike","setLike","fetchPost","id","fetchPosts","page","fetchUserPosts","username","fetchProfiles","fetchProfile","url","options","set","ok","text","parse","openPost","loadComments","leaveOwnComment","openedPostSlice","post","comments","postStatus","commentsStatus","closePost","setOpenedPost","rejected","selectOpenedPost","openedPost","selectOpenedComments","fetchAllPosts","setCurrentPostsUsername","notEnd","posts","currentPage","downloaded","find","refetchPost","opened","likePost","dislikePost","deleteOwnPost","removePost","createOwnPost","params","selectCurrentPostsUsername","postsSlice","loadedPosts","currentPostsUsername","filter","findIndex","selectLoadedPosts","selectPostsStatus","fetchAllProfiles","profiles","profile","fetchCurrentAccount","isError","account","updateAccount","newInfo","logout","arg","clearCurrentAccount","error","profileSlice","allProfiles","profilesFetchStatus","accountFetchStatus","resetAccountFetchStatus","selectProfiles","selectAccount","selectIsLoggedIn","selectIsLoggingIn","useAppDispatch","useDispatch","useAppSelector","useSelector","useAuthorization","loggedIn","loggingIn","func","useWindowSize","useState","width","window","innerWidth","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useLocalization","lp","replaces","count","defaultValue","undefined","isLocalizationParameters","value","found","replace","isLanguageValue","countToPluralCode","other","replacement","replaceAll","uk","en","Footer","footer","buttonRow","year","toString","GreyButton","greyButton","Avatar","size","border","clickable","style","visible","src","avatar","alt","Header","home","back","onBackClick","isLoggedIn","langCode","dropdownOptions","entries","map","label","option","header","logo","separator","onChange","dropdown","controlClassName","control","placeholderClassName","placeholder","menuClassName","menu","profile_photo_url","reserver","IS_DESKTOP","IS_SAFARI","test","navigator","userAgent","IconButton","icon","checkedColor","checked","iconButton","Modal","isOpen","onRequestClose","tabletExpand","modal","overlayClassName","overlay","TextArea","otherParams","textArea","Slider","photos","sides","roundBorders","onCenterClick","index","setIndex","secondPrev","prev","current","next","secondNext","big","showPrev","stopPropagation","Math","max","showNext","min","slider","viewBox","photo","padded","direction","left","right","position","Array","fill","_","i","Point","point","CenteredButton","SliderPhoto","image","fetchAllComments","setCurrentPostId","commentsSlice","loadedComments","currentPostId","store","configureStore","reducer","postsReducer","openedPostReducer","profileReducer","commentsReducer","localizationReducer","getRelativeDateKey","timestamp","now","Date","getTime","diff","abs","minutes","floor","hours","date","toLocaleDateString","month","day","insertNewlines","arr","split","e","flat","pop","Comment","avatarSize","comment","commenter","column","first_name","last_name","time","created_at","copyTextToClipboard","clipboard","writeText","document","createElement","top","appendChild","focus","select","execCommand","err","console","removeChild","fallbackCopyTextToClipboard","Post","sliderSides","onImageClicked","show","useContextMenu","requireAuth","author","info","more","content","description","likes_count","is_liked","share","copyLink","danger","BASE_URL","ModalPost","postId","noImages","close","likes","padding","modalPost","Comments","setComment","buttons","like","newComment","minRows","input","currentTarget","Feed","modalPostId","setModalPostId","feed","getUppy","uppy","Uppy","restrictions","maxNumberOfFiles","allowedFileTypes","maxFileSize","use","AwsS3","companionUrl","addFile","file","type","source","transformFileData","files","meta","storage","metadata","filename","mime_type","ImageInput","accept","multiple","defaultPreviewUrl","inputRef","useRef","setFiles","getFiles","forEach","removeFile","preventEvent","preventDefault","click","onDragOver","onDragEnter","onDragLeave","onDrop","from","dataTransfer","preview","filesToPhotos","join","ref","hidden","target","URL","createObjectURL","NewPost","setDescription","newPost","upload","result","successful","images","photos_attributes","failed","Input","iconColor","ProfileEdit","firstName","setFirstName","secondName","setSecondName","job_title","jobTitle","setJobTitle","profileEdit","title","topBlock","avatarWrapper","avatarText","profile_photo","ProfileInfo","own","horizontal","isNewPostOpened","setNewPostOpened","isProfileEditOpened","setProfileEditOpened","nameString","profileInfo","job","social","followers","number","smallText","following","actionButtons","bottom","Stories","stories","scroll","Home","useParams","modalPostOpened","setModalPostOpened","Number","parseInt","sticky","SubmitButton","signUp","FormikWrapperInput","field","form","touched","errors","setFieldValue","values","otherProps","Login","setSignUp","schema","Yup","shape","email","required","matches","Promise","resolve","reject","catch","password","presentation","authPane","initialValues","onSubmit","validationSchema","component","mobileSeparator","switch","inlineSwitch","PhotoFeed","photoFeed","ImageSquare","backgroundImage","OwnProfile","setProfile","setError","ex","ownProfile","App","fun","exact","path","Profile","Boolean","location","hostname","match","setVH","vh","visualViewport","documentElement","setProperty","ReactDOM","render","StrictMode","getElementById","setAppElement","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf1d76f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"Slider_slider__3A2az\",\"roundBorders\":\"Slider_roundBorders__N0UNE\",\"button\":\"Slider_button__17i9F\",\"right\":\"Slider_right__3IBug\",\"left\":\"Slider_left__1VHjc\",\"square\":\"Slider_square__2pq5e\",\"image\":\"Slider_image__29c0_\",\"big\":\"Slider_big__2_H5F\",\"prev\":\"Slider_prev__M5K3f\",\"next\":\"Slider_next__3jrG6\",\"current\":\"Slider_current__2MgGL\",\"padded\":\"Slider_padded__38C8D\",\"secondPrev\":\"Slider_secondPrev__3KNld\",\"secondNext\":\"Slider_secondNext__3sPlE\",\"position\":\"Slider_position__3QVNm\",\"point\":\"Slider_point__15Pih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"IconButton_iconButton__1icvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textArea\":\"TextArea_textArea__2zwX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3EuCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalPost\":\"ModalPost_modalPost__1L6RD\",\"slider\":\"ModalPost_slider__gPdCv\",\"noImages\":\"ModalPost_noImages__ax5Gw\",\"data\":\"ModalPost_data__2zYZ2\",\"header\":\"ModalPost_header__3ZVGN\",\"avatar\":\"ModalPost_avatar__tcw-M\",\"name\":\"ModalPost_name__n-uyA\",\"separator\":\"ModalPost_separator__YWCJ7\",\"close\":\"ModalPost_close__2Vn61\",\"buttons\":\"ModalPost_buttons__3--uR\",\"like\":\"ModalPost_like__3KuAn\",\"comments\":\"ModalPost_comments__1y2kU\",\"padding\":\"ModalPost_padding__19rl7\",\"comment\":\"ModalPost_comment__1_-Yh\",\"newComment\":\"ModalPost_newComment__1i5qe\",\"input\":\"ModalPost_input__1PuuI\",\"post\":\"ModalPost_post__2sug1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileEdit\":\"ProfileEdit_profileEdit__iDLMl\",\"header\":\"ProfileEdit_header__3Idmi\",\"title\":\"ProfileEdit_title__2TGIH\",\"logout\":\"ProfileEdit_logout__2m76b\",\"topBlock\":\"ProfileEdit_topBlock__ETWyG\",\"avatarWrapper\":\"ProfileEdit_avatarWrapper__1XsL3\",\"avatar\":\"ProfileEdit_avatar__1SRbI\",\"avatarText\":\"ProfileEdit_avatarText__2toBy\",\"name\":\"ProfileEdit_name__2mX0L\",\"input\":\"ProfileEdit_input__L2H48\",\"description\":\"ProfileEdit_description__3JWjj\",\"buttons\":\"ProfileEdit_buttons__1p7ap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1te52\",\"header\":\"Post_header__3Gzyc\",\"info\":\"Post_info__Xy-Np\",\"name\":\"Post_name__3CpU5\",\"time\":\"Post_time__3_nO7\",\"more\":\"Post_more__14-xe\",\"content\":\"Post_content__22_-o\",\"description\":\"Post_description__3kjSL\",\"footer\":\"Post_footer__3xwoU\",\"iconButton\":\"Post_iconButton__3cLRW\",\"separator\":\"Post_separator__1SbIb\",\"share\":\"Post_share__287j5\",\"danger\":\"Post_danger__2HN30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fCsm\",\"logo\":\"Header_logo__2gAbO\",\"back\":\"Header_back__1F8AG\",\"separator\":\"Header_separator__wmxr4\",\"button\":\"Header_button__1JOra\",\"dropdown\":\"Header_dropdown__39YJG\",\"control\":\"Header_control__tUaTp\",\"placeholder\":\"Header_placeholder__20Sp9\",\"menu\":\"Header_menu__1bgN5\",\"option\":\"Header_option__1oXVO\",\"reserver\":\"Header_reserver__iHJu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__ouCTB\",\"content\":\"Login_content__3YGvZ\",\"presentation\":\"Login_presentation__145vV\",\"authPane\":\"Login_authPane__IHzBx\",\"title\":\"Login_title__3VCx7\",\"input\":\"Login_input__2gh-1\",\"button\":\"Login_button__2Vpm8\",\"error\":\"Login_error__3SyBg\",\"mobileSeparator\":\"Login_mobileSeparator___RmK7\",\"switch\":\"Login_switch__4MshC\",\"inlineSwitch\":\"Login_inlineSwitch__1ywMx\"};","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"./Button.module.scss\";\n\ninterface ButtonParameters extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    color?: \"blue\" | \"black\" | \"white\"\n    lightBorder?: boolean\n    square?: boolean\n    smallPadding?: boolean\n    className?: string\n    to?: string\n    [key: string]: any\n}\n\nexport const Button: FC<ButtonParameters> = (\n    {\n        color = \"white\",\n        lightBorder = false,\n        square = false, \n        to,\n        className,\n        children,\n        smallPadding = false,\n        onClick,\n        ...otherArgs\n    }) => {\n    const history = useHistory();\n\n    return (\n        <button className={classNames({\n            [styles.button]: true,\n            [styles[color]]: true,\n            [styles.square]: square,\n            [styles.lightBorder]: lightBorder,\n            [styles.smallPadding]: smallPadding\n        }, className)}\n            onClick={ev => {\n                onClick?.(ev);\n                if (to) history.push(to);\n            }}\n            {...otherArgs}>\n            {children}\n        </button>\n    )\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { LanguageValue } from \"../types\";\n\nexport const LANGUAGE_FOLDER = \"language\";\n\nexport const VALID_LANGUAGES: { [key: string]: string } = {\n    \"uk\": \"UA\",\n    \"en\": \"EN\"\n}\n\nexport interface StringsMap {\n    [key: string]: string | LanguageValue\n}\n\nexport interface LocalizationState {\n    strings: StringsMap\n    code: string\n    status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: LocalizationState = {\n    strings: {},\n    code: localStorage.getItem(\"langCode\") || \"en\",\n    status: \"idle\",\n}\n\nexport const setLanguage = createAsyncThunk(\n    \"localization/setLanguage\",\n    async (code: string, thunkAPI) => {\n        if (code in VALID_LANGUAGES) {\n            const state = thunkAPI.getState() as RootState;\n            const strings = selectTranslationStrings(state);\n            if(Object.keys(strings).length && code === selectLanguageCode(state)) {\n                return strings; // don't make request to fetch active language\n            }\n            \n            return fetch(`${LANGUAGE_FOLDER}/${code}.json`)\n                .then(res => res.json())\n                .then(json => {\n                    let strings: StringsMap = {};\n                    for (let key in json) {\n                        strings[key] = json[key];\n                    }\n\n                    localStorage.setItem(\"langCode\", code);\n                    thunkAPI.dispatch(setLanguageCode(code));\n\n                    return strings;\n                });\n        } else {\n            throw new Error(\"Not a valid language!\");\n        }\n    }\n);\n\nconst localizationSlice = createSlice({\n    name: \"localization\",\n    initialState,\n    reducers: {\n        setLanguageCode(state, action: PayloadAction<string>) {\n            state.code = action.payload\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(setLanguage.pending, (state) => {\n            state.status = \"loading\";\n        }).addCase(setLanguage.fulfilled, (state, action) => {\n            state.status = \"idle\";\n            state.strings = action.payload;\n        })\n    },\n})\n\n// Reducer\nexport default localizationSlice.reducer;\n\n// Actions\nconst { setLanguageCode } = localizationSlice.actions;\n\n//Selectors\n\nexport const selectLanguageCode = (state: RootState) => state.localization.code;\nexport const selectTranslationStrings = (state: RootState) => state.localization.strings;","import { IComment, IImage, IPhotosAttribute, IPost, IProfile } from \"../types\";\n\nexport const API_BASE = \"https://linkstagram-api.ga\";\n\n// API-SPECIFIC TYPES\n\nexport interface ILoginError {\n    \"field-error\": string[],\n    error: string\n}\n\nexport interface ISuccess {\n    success: string\n}\n\nexport interface IError {\n    error: string\n}\n\nexport interface IRegistrationParameters {\n    username: string;\n    login: string;\n    password: string;\n}\n\nexport interface ILoginParameters {\n    login: string;\n    password: string;\n}\n\nexport interface IPostCreationParameters {\n    description?: string;\n    photos_attributes: IPhotosAttribute[];\n}\n\nexport interface IProfileUpdateParameters {\n    username?: string;\n    description?: string;\n    first_name?: string;\n    job_title?: string;\n    last_name?: string;\n    profile_photo?: IImage;\n}\n\n// AUTH\n\nexport const createAccount = (data: IRegistrationParameters): Promise<ILoginError | ISuccess> => {\n    return fetch(`${API_BASE}/create-account`, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: new Headers({\n            \"Content-Type\": \"application/json\"\n        })\n    }).then(res => {\n        const headers = res.headers;\n        const auth = headers.get(\"authorization\");\n        if (auth) {\n            localStorage.setItem(\"auth\", auth);\n        } else {\n            localStorage.removeItem(\"auth\"); // login error, clear previous auth\n        }\n        return res.json();\n    });\n}\n\nexport const login = (data: ILoginParameters): Promise<ILoginError | ISuccess> => {\n    return fetch(`${API_BASE}/login`, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: new Headers({\n            \"Content-Type\": \"application/json\"\n        })\n    }).then(res => {\n        const headers = res.headers;\n        const auth = headers.get(\"authorization\");\n        if (auth) {\n            localStorage.setItem(\"auth\", auth);\n        } else {\n            localStorage.removeItem(\"auth\"); // login error, clear previous auth\n        }\n        return res.json();\n    });\n}\n\n// COMMENTS\n\nexport const leaveComment = (post_id: number, message: string): Promise<IComment> => {\n    return request(`${API_BASE}/posts/${post_id}/comments`, \"POST\", { message });\n}\n\nexport const fetchComments = (post_id: number): Promise<IComment[]> => {\n    return request(`${API_BASE}/posts/${post_id}/comments`);\n}\n\n// ACCOUNT\n\nexport const fetchAccount = (): Promise<IProfile | IError> => {\n    return request(`${API_BASE}/account`);\n}\n\nexport const editAccount = (account: IProfileUpdateParameters): Promise<IProfile | IError> => {\n    return request(`${API_BASE}/account`, \"PATCH\", { account });\n}\n\n// LIKES\n\nexport const removeLike = (post_id: number): Promise<{} | IError> => {\n    return request(`${API_BASE}/posts/${post_id}/like`, \"DELETE\");\n}\n\nexport const setLike = (post_id: number): Promise<{} | IError> => {\n    return request(`${API_BASE}/posts/${post_id}/like`, \"POST\");\n}\n\n// POSTS\n\nexport const createPost = (post: IPostCreationParameters): Promise<IPost> => {\n    return request(`${API_BASE}/posts`, \"POST\", { post });\n}\n\nexport const deletePost = (id: number): Promise<ISuccess | IError> => {\n    return request(`${API_BASE}/posts/${id}`, \"DELETE\");\n}\n\nexport const fetchPost = (id: number): Promise<IPost> => {\n    return request(`${API_BASE}/posts/${id}`);\n}\n\nexport const fetchPosts = (page: number = 1): Promise<IPost[]> => {\n    return request(`${API_BASE}/posts?page=${page}`);\n}\n\nexport const fetchUserPosts = (username: string, page: number = 1): Promise<IPost[]> => {\n    return request(`${API_BASE}/profiles/${username}/posts?page=${page}`);\n}\n\n// PROFILES\n\nexport const fetchProfiles = (page: number = 1): Promise<IProfile[]> => {\n    return request(`${API_BASE}/profiles?page=${page}`);\n}\n\nexport const fetchProfile = (username: string): Promise<IProfile> => {\n    return request(`${API_BASE}/profiles/${username}`);\n}\n\n// UTIL\n\nconst request = (url: string, method: \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\" = \"GET\", data: any = null): Promise<any> => {\n    let options: RequestInit = {\n        method\n    };\n\n    options.headers = new Headers({\n        \"Content-Type\": \"application/json\"\n    })\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    const auth = localStorage.getItem(\"auth\");\n    if (auth) {\n        options.headers.set(\"Authorization\", \"Bearer \" + auth);\n    }\n    return fetch(url, options).then(res => {\n        if(!res.ok) throw Error();\n        return res.text()\n    }).then(text => {\n        if (text.length === 0) return {}\n        return JSON.parse(text);\n    });\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { IComment, IPost } from \"../types\";\nimport { fetchComments, fetchPost, leaveComment } from \"../util/api\";\n\nexport interface OpenedPostState {\n    post: IPost | null;\n    comments: IComment[]\n    postStatus: \"idle\" | \"loading\" | \"failed\";\n    commentsStatus: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: OpenedPostState = {\n    post: null,\n    comments: [],\n    postStatus: \"idle\",\n    commentsStatus: \"idle\"\n}\n\nexport const openPost = createAsyncThunk(\n    \"openedPost/openPost\",\n    async (post_id: number, thunkAPI) => {\n        return fetchPost(post_id).then(json => {\n            // load comments after post\n            thunkAPI.dispatch(loadComments(json.id));\n            return json;\n        })\n    }\n);\n\nexport const loadComments = createAsyncThunk(\n    \"openedPost/loadComments\",\n    async (post_id: number, thunkAPI) => {\n        return fetchComments(post_id);\n    }\n);\n\nexport const leaveOwnComment = createAsyncThunk(\n    \"openedPost/leaveComment\",\n    async ({post_id, message}: {post_id: number, message: string}, thunkAPI) => {\n        if(!message) return;\n        await leaveComment(post_id, message);\n        thunkAPI.dispatch(loadComments(post_id));\n    }\n);\n\nconst openedPostSlice = createSlice({\n    name: \"openedPost\",\n    initialState,\n    reducers: {\n        closePost(state) {\n            state.post = null;\n            state.comments = [];\n        },\n        setOpenedPost(state, action: PayloadAction<IPost>) {\n            state.post = action.payload\n            state.postStatus = \"idle\"\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n        .addCase(openPost.pending, (state) => {\n            state.postStatus = \"loading\";\n            state.post = null;\n        }).addCase(openPost.fulfilled, (state, action) => {\n            state.postStatus = \"idle\";\n            state.post = action.payload;\n        }).addCase(openPost.rejected, (state) => {\n            state.postStatus = \"failed\";\n        })\n        .addCase(loadComments.pending, (state) => {\n            state.commentsStatus = \"loading\";\n            state.comments = [];\n        }).addCase(loadComments.fulfilled, (state, action) => {\n            state.commentsStatus = \"idle\";\n            state.comments = action.payload;\n        }).addCase(loadComments.rejected, (state) => {\n            state.commentsStatus = \"failed\";\n        })\n    },\n})\n\n// Reducer\nexport default openedPostSlice.reducer;\n\n// Actions\nexport const {closePost, setOpenedPost } = openedPostSlice.actions;\n\n//Selectors\nexport const selectOpenedPost = (state: RootState) => state.openedPost.post;\nexport const selectOpenedComments = (state: RootState) => state.openedPost.comments;\nexport const selectOpenedPostStatus = (state: RootState) => state.openedPost.postStatus;\nexport const selectOpenedCommentsStatus = (state: RootState) => state.openedPost.commentsStatus;","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { IPost } from \"../types\";\nimport { createPost, deletePost, fetchPost, fetchPosts, fetchUserPosts, IPostCreationParameters, removeLike, setLike } from \"../util/api\";\nimport { selectOpenedPost, setOpenedPost } from \"./openedPostSlice\";\n\nexport interface PostsState {\n    loadedPosts: IPost[];\n    currentPostsUsername: string | null;\n    status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: PostsState = {\n    loadedPosts: [],\n    currentPostsUsername: null,\n    status: \"idle\",\n}\n\nexport const fetchAllPosts = createAsyncThunk(\n    \"posts/fetchAllPosts\",\n    async (username: string | null | undefined, thunkAPI) => {\n        thunkAPI.dispatch(setCurrentPostsUsername(username || null));\n        // DANGER! Possibly, a lot of requests if Linkstagram decides to get several million new posts\n        // TODO load posts on demand\n        let notEnd = true;\n        let posts: IPost[] = [];\n        let currentPage = 1;\n        while(notEnd) {\n            const downloaded = await (!!username ? fetchUserPosts(username, currentPage) : fetchPosts(currentPage));\n            if(downloaded.length && !posts.find(post => post.id === downloaded[0].id)) {\n                posts.push(...downloaded);\n            } else {\n                notEnd = false;\n            }\n            currentPage++;\n        }\n        return posts;  \n\n    }\n);\n\nexport const refetchPost = createAsyncThunk(\n    \"posts/fetchPost\",\n    async (post_id: number, thunkAPI) => {\n        const post = await fetchPost(post_id);\n        // update opened post on refetch\n        const opened = selectOpenedPost(thunkAPI.getState() as RootState);\n        if(opened?.id === post.id) thunkAPI.dispatch(setOpenedPost(post));\n\n        return post;\n    }\n);\n\nexport const likePost = createAsyncThunk(\n    \"posts/like\",\n    async (post_id: number, thunkAPI) => {\n        await setLike(post_id);\n        thunkAPI.dispatch(refetchPost(post_id));\n    }\n);\n\nexport const dislikePost = createAsyncThunk(\n    \"posts/dislike\",\n    async (post_id: number, thunkAPI) => {\n        await removeLike(post_id);\n        thunkAPI.dispatch(refetchPost(post_id));\n    }\n);\n\nexport const deleteOwnPost = createAsyncThunk(\n    \"posts/delete\",\n    async (post_id: number, thunkAPI) => {\n        await deletePost(post_id);\n        thunkAPI.dispatch(removePost(post_id));\n    }\n);\n\nexport const createOwnPost = createAsyncThunk(\n    \"posts/post\",\n    async (params: IPostCreationParameters, thunkAPI) => {\n        await createPost(params);\n\n        // TODO: refractor?\n        thunkAPI.dispatch(fetchAllPosts(selectCurrentPostsUsername(thunkAPI.getState() as RootState)));\n    }\n);\n\nconst postsSlice = createSlice({\n    name: \"posts\",\n    initialState,\n    reducers: {\n        setCurrentPostsUsername(state, action: PayloadAction<string | null>) {\n            state.currentPostsUsername = action.payload\n        },\n        removePost(state, action: PayloadAction<number>) {\n            state.loadedPosts = state.loadedPosts.filter(post => post.id !== action.payload);\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n        .addCase(fetchAllPosts.pending, (state) => {\n            state.status = \"loading\";\n            state.loadedPosts = [];\n        }).addCase(fetchAllPosts.fulfilled, (state, action) => {\n            state.status = \"idle\";\n            state.loadedPosts = action.payload;\n        }).addCase(fetchAllPosts.rejected, (state) => {\n            state.status = \"failed\";\n        })\n        .addCase(refetchPost.fulfilled, (state, action) => {\n            const id = state.loadedPosts.findIndex(post => post.id === action.payload.id);\n            if(id !== -1) { // post is currently in state\n                state.loadedPosts[id] = action.payload;\n            }\n        })\n    },\n})\n\n// Reducer\nexport default postsSlice.reducer;\n\n// Actions\nconst { setCurrentPostsUsername, removePost } = postsSlice.actions;\n\n//Selectors\n\nexport const selectLoadedPosts = (state: RootState) => state.posts.loadedPosts;\nexport const selectPostsStatus = (state: RootState) => state.posts.status;\nexport const selectCurrentPostsUsername = (state: RootState) => state.posts.currentPostsUsername;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { IProfile } from \"../types\";\nimport { editAccount, fetchAccount, fetchProfiles, IError, IProfileUpdateParameters } from \"../util/api\";\nimport { fetchAllPosts, selectCurrentPostsUsername } from \"./postsSlice\";\n\nexport interface ProfileState {\n    account: IProfile | null;\n    allProfiles: IProfile[]\n    profilesFetchStatus: \"idle\" | \"loading\" | \"failed\";\n    accountFetchStatus: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: ProfileState = {\n    account: null,\n    allProfiles: [],\n    profilesFetchStatus: \"idle\",\n    accountFetchStatus: \"idle\"\n}\n\nexport const fetchAllProfiles = createAsyncThunk(\n    \"profile/fetchAllProfiles\",\n    async () => {\n        // DANGER! Possibly, a lot of requests if Linkstagram decides to get several million new users\n        // but probably the best way to do this as of right now\n        let notEnd = true;\n        let profiles: IProfile[] = [];\n        let currentPage = 1;\n        while(notEnd) {\n            const downloaded = await fetchProfiles(currentPage);\n\n            if(downloaded.length && !profiles.find(profile => profile.username === downloaded[0].username)) {\n                profiles.push(...downloaded);\n            } else {\n                notEnd = false;\n            }\n            currentPage++;\n        }\n        return profiles;\n    }\n);\n\nexport const fetchCurrentAccount = createAsyncThunk(\n    \"profile/fetchAccount\",\n    async () => {\n        const account = await fetchAccount();\n        if(isError(account)) {\n            return null;\n        } else {\n            return account;\n        }\n    }\n);\n\nexport const updateAccount = createAsyncThunk(\n    \"profile/updateAccount\",\n    async (newInfo: IProfileUpdateParameters, thunkAPI) => {\n        const res = await editAccount(newInfo);\n        if(isError(res)) {\n            throw Error(\"Failed to update account\")\n        } else {\n            thunkAPI.dispatch(fetchAllPosts(selectCurrentPostsUsername(thunkAPI.getState() as RootState)));\n            return res;\n        }\n    }\n);\n\nexport const logout = createAsyncThunk(\n    \"profile/logount\",\n    async (arg, thunkAPI) => {\n        localStorage.removeItem(\"auth\");\n        thunkAPI.dispatch(clearCurrentAccount());\n        thunkAPI.dispatch(fetchAllPosts()); // refetch posts to remove likes\n    }\n);\n\nfunction isError(res: any): res is IError {\n    return !!(res as IError).error;\n}\n\nconst profileSlice = createSlice({\n    name: \"profile\",\n    initialState,\n    reducers: {\n        clearCurrentAccount(state) {\n            state.account = null;\n        },\n\n        resetAccountFetchStatus(state) {\n            state.accountFetchStatus = \"idle\";\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n        // profiles\n        .addCase(fetchAllProfiles.pending, (state) => {\n            state.profilesFetchStatus = \"loading\";\n        }).addCase(fetchAllProfiles.fulfilled, (state, action) => {\n            state.profilesFetchStatus = \"idle\";\n            state.allProfiles = action.payload;\n        }).addCase(fetchAllProfiles.rejected, (state) => {\n            state.profilesFetchStatus = \"failed\";\n            state.allProfiles = [];\n        })\n        // account\n        .addCase(fetchCurrentAccount.pending, (state) => {\n            state.accountFetchStatus = \"loading\";\n        }).addCase(fetchCurrentAccount.fulfilled, (state, action) => {\n            state.accountFetchStatus = \"idle\";\n            state.account = action.payload;\n        }).addCase(fetchCurrentAccount.rejected, (state) => {\n            state.accountFetchStatus = \"failed\";\n            state.account = null;\n        })\n        .addCase(updateAccount.fulfilled, (state, action) => {\n            state.account = action.payload\n        })\n    },\n})\n\n// Reducer\nexport default profileSlice.reducer;\n\n// Actions\nexport const { clearCurrentAccount, resetAccountFetchStatus } = profileSlice.actions;\n\n// Selectors\nexport const selectProfiles = (state: RootState) => state.profile.allProfiles;\nexport const selectProfilesFetchStatus = (state: RootState) => state.profile.profilesFetchStatus;\nexport const selectAccount = (state: RootState) => state.profile.account;\nexport const selectAccountFetchStatus = (state: RootState) => state.profile.accountFetchStatus;\nexport const selectIsLoggedIn = (state: RootState) => !!state.profile.account;\nexport const selectIsLoggingIn = (state: RootState) => state.profile.accountFetchStatus === \"loading\";\n","import { en, PluralCategory, uk } from \"make-plural\";\nimport { EffectCallback, useEffect, useState } from \"react\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { selectLanguageCode, selectTranslationStrings } from '../slices/localizationSlice';\nimport { selectIsLoggedIn, selectIsLoggingIn } from \"../slices/profileSlice\";\nimport type { AppDispatch, RootState } from '../store';\nimport { LanguageValue, LocalizationParameters } from '../types';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\nexport const useMountEffect = (fun: EffectCallback) => useEffect(fun, []);\n\nexport const useAuthorization = () => {\n    const loggedIn = useAppSelector(selectIsLoggedIn);\n    const loggingIn = useAppSelector(selectIsLoggingIn);\n    const history = useHistory();\n\n    return (func?: Function) => {\n        if (loggingIn) return; // no account is available at this moment\n        if (loggedIn) {\n            func?.()\n        } else {\n            history.push(\"/login\");\n        }\n    }\n}\n\nexport const useWindowSize = () => {\n    const [windowSize, setWindowSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    return windowSize;\n}\n\nexport const useLocalization = () => {\n    const strings = useAppSelector(selectTranslationStrings);\n    const code = useAppSelector(selectLanguageCode);\n\n    const lp = (key: LocalizationParameters | string = \"NO_TRANSLATION_KEY_PROVIDED\", replaces: { [key: string]: string } = {}, count: number = 1, defaultValue: string | undefined = undefined): string => {\n        if (isLocalizationParameters(key)) return lp(key.key, key.replaces, key.count, key.defaultValue);\n        let value = strings[key];\n        if (!value) {\n            return defaultValue || key;\n        }\n\n        let found = key;\n        if (isLanguageValue(value)) {\n            found = value[countToPluralCode(code, count)] || value.other;\n        } else {\n            found = value;\n        }\n\n        for (let replace in replaces) {\n            let replacement = replaces[replace];\n            found = found.replaceAll(`{${replace}}`, replacement);\n        }\n        return found;\n    }\n\n    return lp;\n}\n\nconst countToPluralCode = (code: string, count: number): PluralCategory => {\n    const plurals: { [key: string]: (n: number | string, ord?: boolean) => PluralCategory } = {\n        \"uk\": uk,\n        \"en\": en\n    }\n    return plurals[code](count);\n}\n\n// TODO autogenerate guards based on fields and accept any\n// move from hooks\nexport const isLocalizationParameters = (key: LocalizationParameters | string): key is LocalizationParameters => {\n    return (key as string).length === undefined;\n}\n\nexport const isLanguageValue = (value: LanguageValue | string): value is LanguageValue => {\n    return (value as string).length === undefined;\n}","import { FC } from \"react\";\nimport { useLocalization } from \"../../util/hooks\";\nimport styles from \"./Footer.module.scss\";\n\nconst CURRENT_YEAR = 2021;\n\nexport const Footer: FC = () => {\n    const lp = useLocalization();\n\n    return (\n        <footer className={styles.footer}>\n            <div className={styles.buttonRow}>\n                <GreyButton text={lp(\"footer_about\")}/>\n                <GreyButton text={lp(\"footer_help\")}/>\n                <GreyButton text={lp(\"footer_privacy\")}/>\n                <GreyButton text={lp(\"footer_terms\")}/>\n                <GreyButton text={lp(\"footer_locations\")}/>\n                <GreyButton text={lp(\"footer_language\")}/>\n            </div>\n            <div className={styles.buttonRow}>\n                <GreyButton text={lp(\"footer_copyright\", {year: CURRENT_YEAR.toString()})}/>\n            </div>\n        </footer>\n    )\n}\n\nconst GreyButton: FC<{text: string}> = ({text}) => {\n    return <div className={styles.greyButton}>{text}</div>\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"./Avatar.module.scss\";\n\ninterface AvatarParameters extends React.HTMLAttributes<HTMLDivElement> {\n    url?: string,\n    size?: string,\n    border?: boolean\n    className?: string\n    to?: string\n    clickable?: boolean\n}\n\nconst PLACEHOLDER = \"images/placeholder.png\";\n\nexport const Avatar: FC<AvatarParameters> = ({url, size = \"4em\", border = false, clickable, to, className, onClick, ...otherArgs}) => {\n    url = url || PLACEHOLDER; // url can be null\n    clickable = clickable || !!to || !!onClick;\n    const history = useHistory();\n    return (\n        <div className={classNames({\n            [styles.square]: true,\n            [styles.clickable]: clickable\n        }, className)} style={{width: size}} onClick={ev => {\n            onClick?.(ev);\n            if (to) history.push(to);\n        }} {...otherArgs}>\n            <div className={classNames({\n                [styles.border]: true,\n                [styles.visible]: border\n            })}>\n                <img src={url} className={styles.avatar} alt=\"Avatar\"/>\n            </div>\n        </div>\n    )\n}","import { FC, MouseEventHandler } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport { Link } from \"react-router-dom\";\nimport { selectLanguageCode, setLanguage, VALID_LANGUAGES } from \"../../slices/localizationSlice\";\nimport { selectAccount, selectIsLoggedIn } from \"../../slices/profileSlice\";\nimport { IProfile } from \"../../types\";\nimport { useAppDispatch, useAppSelector, useLocalization } from \"../../util/hooks\";\nimport { Avatar } from \"./../basic/avatar/Avatar\";\nimport { Button } from \"./../basic/button/Button\";\nimport styles from \"./Header.module.scss\";\n\ntype HeaderParameters = {\n    home?: boolean\n    profile?: boolean\n    login?: boolean\n    back?: boolean\n    onBackClick?: MouseEventHandler<HTMLElement>\n}\n\nexport const Header: FC<HeaderParameters> = ({home = false, profile = false, login = false, back = false, onBackClick}) => {\n    const dispatch = useAppDispatch();\n    const lp = useLocalization();\n\n    const isLoggedIn = useAppSelector(selectIsLoggedIn);\n    const account = useAppSelector(selectAccount) as IProfile;\n    const langCode = useAppSelector(selectLanguageCode);\n\n    const dropdownOptions = Object.entries(VALID_LANGUAGES).map(([key, value]) => ({value: key, label: value, className: styles.option}));\n\n    return (\n        <>\n        <header className={styles.header}>\n            { back ? <i className={`icon icon-arrow ${styles.back}`} onClick={onBackClick}/> : <Link to=\"/\" className={styles.logo}>Linkstagram</Link>}\n            <div className={styles.separator}/>\n            {home && <Button color=\"black\" className={styles.button} to=\"/\">{lp(\"header_home\")}</Button>}\n            <Dropdown \n                options={dropdownOptions} \n                value={VALID_LANGUAGES[langCode]} \n                onChange={option => dispatch(setLanguage(option.value))}\n                className={styles.dropdown}\n                controlClassName={styles.control}\n                placeholderClassName={styles.placeholder}\n                menuClassName={styles.menu}\n            />\n            {login && !isLoggedIn && <Button color=\"black\" className={styles.button} to=\"/login\">{lp(\"general_login\")}</Button>}\n            {profile && isLoggedIn && <Avatar url={account.profile_photo_url} size=\"2.5em\" to=\"/profile\"/>}\n        </header>\n        <div className={styles.reserver}/>\n        </>\n    )\n}","\nexport const TABLET_WIDTH = 512;\nexport const DESKTOP_WIDTH = 1014;\n\nexport const IS_DESKTOP = () => window.innerWidth >= DESKTOP_WIDTH;\nexport const IS_TABLET = () => window.innerWidth >= TABLET_WIDTH && window.innerWidth < DESKTOP_WIDTH;\nexport const IS_MOBILE = () => window.innerWidth < TABLET_WIDTH;\n\nexport const IS_SAFARI = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); //browsers usually don't change at runtime\n\nexport const BASE_URL = \"https://zubiden.github.io/linkstagram\";","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport styles from \"./IconButton.module.scss\";\n\ninterface IconButtonParameters extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    icon: string\n    checked?: boolean\n    checkedColor?: \"grey\" | \"red\"\n    text?: string\n    className?: string\n}\n\nexport const IconButton: FC<IconButtonParameters> = (\n    {\n        icon,\n        text,\n        checkedColor = \"red\",\n        checked = false,\n        className,\n        ...otherArgs\n    }) => {\n\n    return (\n        <button className={classNames({\n            [styles.iconButton]: true,\n        }, className)} {...otherArgs}>\n            <i className={classNames({\n                \"icon\": true,\n                [`icon-${icon}`]: true,\n                [checkedColor]: checked\n            })}/>\n            <span>{text}</span>\n        </button>\n    )\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport ReactModal from \"react-modal\";\nimport styles from \"./Modal.module.scss\";\n\ntype ModalParameters = {\n    isOpen: boolean\n    className?: string\n    tabletExpand?: boolean\n    onRequestClose?(event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>): void\n}\n\nexport const Modal: FC<ModalParameters> = ({isOpen, onRequestClose, className, tabletExpand = false, children}) => {\n    return (\n        <ReactModal \n            className={classNames({\n                [styles.modal]: true,\n                [styles.tabletExpand]: tabletExpand\n            }, className)} \n            overlayClassName={styles.overlay} \n            isOpen={isOpen} \n            onRequestClose={onRequestClose}\n        >\n            {children}\n        </ReactModal>\n    )\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport TextareaAutosize, { TextareaAutosizeProps } from 'react-textarea-autosize';\nimport styles from \"./TextArea.module.scss\";\n\ninterface TextAreaParameters extends TextareaAutosizeProps{\n    label?: string\n    placeholder?: string\n    className?: string\n    [key: string]: any\n}\n\nexport const TextArea: FC<TextAreaParameters> = ({label, placeholder, className, ...otherParams}) => {\n    return (\n        <label className={classNames({\n            [styles.textArea]: true\n            }, className)}\n        >\n            {label}\n            <TextareaAutosize placeholder={placeholder} {...otherParams}/>\n        </label>\n    )\n}","import classNames from \"classnames\";\nimport { FC, MouseEventHandler, useEffect, useState } from \"react\";\nimport { IPhoto } from \"../../types\";\nimport styles from \"./Slider.module.scss\";\n\ntype SliderProps = {\n    photos: IPhoto[]\n    onCenterClick?: MouseEventHandler<HTMLElement>\n    className?: string\n    sides?: boolean\n    roundBorders?: boolean\n}\n\nexport const Slider: FC<SliderProps> = ({ photos, sides = false, roundBorders, onCenterClick, className }) => {\n    const [index, setIndex] = useState(0);\n\n    const secondPrev = (index === photos.length - 1) ? photos[index - 2] : null;\n    const prev = (index > 0) ? photos[index - 1] : null;\n    const current = photos[index];\n    const next = (index < (photos.length - 1)) ? photos[index + 1] : null;\n    const secondNext = (index === 0 && photos.length > 2) ? photos[index + 2] : null;\n\n    const big = !sides || (!prev && !next);\n\n    const showPrev: MouseEventHandler<HTMLElement> = ev => {\n        ev.stopPropagation();\n        setIndex(Math.max(index - 1, 0));\n    }\n    const showNext: MouseEventHandler<HTMLElement> = ev => {\n        ev.stopPropagation();\n        setIndex(Math.min(index + 1, photos.length - 1));\n    }\n\n    useEffect(() => {\n        setIndex(0); // reset index on photos change\n    }, [photos])\n\n    return (\n        <div className={classNames({\n            [styles.slider]: true,\n            [styles.roundBorders]: roundBorders,\n        }, className)}>\n            <svg viewBox={`0 0 1 ${big ? 1 : 0.8}`}></svg>\n            {sides && secondPrev && <SliderPhoto photo={secondPrev} className={styles.secondPrev} onClick={showPrev} />}\n            {sides && prev && <SliderPhoto photo={prev} className={classNames({\n                [styles.prev]: true,\n                [styles.padded]: secondPrev\n            })} onClick={showPrev} />}\n\n            {prev && <CenteredButton direction=\"left\" onClick={showPrev} />}\n\n            {current && <SliderPhoto photo={current} className={classNames({\n                [styles.current]: true,\n                [styles.left]: secondNext,\n                [styles.right]: secondPrev,\n                [styles.big]: big\n            })} onClick={onCenterClick} />}\n\n            {next && <CenteredButton direction=\"right\" onClick={showNext} />}\n\n            {sides && next && <SliderPhoto photo={next} className={classNames({\n                [styles.next]: true,\n                [styles.padded]: secondNext\n            })} onClick={showNext} />}\n            {sides && secondNext && <SliderPhoto photo={secondNext} className={styles.secondNext} onClick={showNext} />}\n            {!sides && photos.length > 1 && <div className={styles.position}>\n                {new Array(photos.length).fill(null).map((_, i) => <Point current={i === index} onClick={ev => {\n                    ev.stopPropagation();\n                    setIndex(i)\n                }} />)}\n            </div>}\n        </div>\n    )\n}\n\nconst Point: FC<{ current?: boolean, onClick?: MouseEventHandler<HTMLElement> }> = ({ current, onClick }) => {\n    return (\n        <div className={classNames({\n            [styles.point]: true,\n            [styles.current]: current\n        })} onClick={onClick} />\n    )\n}\n\nconst CenteredButton: FC<{ direction: \"right\" | \"left\", onClick?: MouseEventHandler<HTMLElement> }> = ({ direction, onClick }) => {\n    return (\n        <div className={classNames({\n            [styles.button]: true,\n            [styles[direction]]: true\n        })} onClick={onClick}>\n            <i className=\"icon icon-arrow\" />\n        </div>\n    )\n}\n\nconst SliderPhoto: FC<{ photo: IPhoto, className?: string, onClick?: MouseEventHandler<HTMLElement> }> = ({ photo, className, onClick }) => {\n    return (\n        <div className={classNames(styles.square, className)} onClick={onClick}>\n            <svg viewBox=\"0 0 1 1\"></svg>\n            <img className={styles.image} src={photo.url} alt=\"Post content\" />\n        </div>\n    )\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { IComment } from \"../types\";\nimport { fetchComments } from \"../util/api\";\n\nexport interface CommentsState {\n    loadedComments: IComment[];\n    currentPostId: number\n    status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: CommentsState = {\n    loadedComments: [],\n    currentPostId: -1,\n    status: \"idle\",\n}\n\nexport const fetchAllComments = createAsyncThunk(\n    \"comments/fetchAllPosts\",\n    async (post_id: number, thunkAPI) => {\n        thunkAPI.dispatch(setCurrentPostId(post_id));\n        return fetchComments(post_id);\n    }\n  );\n\nconst commentsSlice = createSlice({\n    name: \"comments\",\n    initialState,\n    reducers: {\n        setCurrentPostId(state, action: PayloadAction<number>) {\n            state.currentPostId = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchAllComments.pending, (state) => {\n            state.status = \"loading\";\n            state.loadedComments = [];\n        }).addCase(fetchAllComments.fulfilled, (state, action) => {\n            state.status = \"idle\";\n            state.loadedComments = action.payload;\n        }).addCase(fetchAllComments.rejected, (state) => {\n            state.status = \"failed\";\n        });\n    },\n})\n\n// Reducer\nexport default commentsSlice.reducer;\n\n// Actions\nconst { setCurrentPostId } = commentsSlice.actions;\n\n//Selectors\n\nexport const selectLoadedComments = (state: RootState) => state.comments.loadedComments;\nexport const selectCommentsStatus = (state: RootState) => state.comments.status;\nexport const selectCurrentCommentsPostId = (state: RootState) => state.comments.currentPostId;","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\nimport commentsReducer from \"./slices/commentsSlice\";\nimport localizationReducer from \"./slices/localizationSlice\";\nimport openedPostReducer from \"./slices/openedPostSlice\";\nimport postsReducer from \"./slices/postsSlice\";\nimport profileReducer from \"./slices/profileSlice\";\n\nconst store = configureStore({\n    reducer: {\n        posts: postsReducer,\n        openedPost: openedPostReducer,\n        profile: profileReducer,\n        comments: commentsReducer,\n        localization: localizationReducer,\n    },\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport default store;","import { selectLanguageCode } from \"../slices/localizationSlice\";\nimport store from \"../store\";\nimport { LocalizationParameters } from \"../types\";\n\nexport const getRelativeDateKey = (timestamp: number | string, now?: number): LocalizationParameters => {\n    if(typeof timestamp === \"string\") timestamp = new Date(timestamp.replace(/-/g, \"/\")).getTime()/1000; // Safari can't read standard format\n    now = now || Date.now() / 1000;\n    const diff = Math.abs(now - timestamp)\n\n    if (diff < 60) {\n        return {\n            key: \"date_now\"\n        }\n    }\n\n    if (diff < 3600) {\n        const minutes = Math.floor(diff / 60);\n\n        return {\n            key: \"date_minutes\",\n            count: minutes,\n            replaces: {\n                count: minutes.toString()\n            }\n        }\n    }\n\n    if (diff < 86400) {\n        const hours = Math.floor(diff / 3600);\n        return {\n            key: \"date_hours\",\n            count: hours,\n            replaces: {\n                count: hours.toString()\n            }\n        }\n    }\n\n    let date = new Date(timestamp*1000).toLocaleDateString(selectLanguageCode(store.getState()), {year: \"numeric\", month: \"long\", day: \"2-digit\"});\n    return {\n        key: \"date_date\",\n        replaces: {\n            date: date\n        }\n    }\n\n}\n","\nexport const insertNewlines = (text: string): (string | JSX.Element)[] => {\n    const arr = text.split(\"\\n\").map((e, i) => [e, <br key={i}/>]).flat(1);\n    arr.pop(); // remove last br\n    return arr;\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport { IComment } from \"../../../types\";\nimport { getRelativeDateKey } from \"../../../util/date\";\nimport { useLocalization } from \"../../../util/hooks\";\nimport { insertNewlines } from \"../../../util/jsx\";\nimport { Avatar } from \"../../basic/avatar/Avatar\";\nimport styles from \"./Comment.module.scss\";\n\ntype CommentParams = {\n    comment: IComment\n    className?: string\n    avatarSize?: string\n}\n\nexport const Comment: FC<CommentParams> = ({avatarSize=\"2.5rem\", comment, className}) => {\n    const lp = useLocalization();\n\n    return (\n        <div className={classNames([styles.comment, className])}>\n            <Avatar url={comment.commenter.profile_photo_url} size={avatarSize}/>\n            <div className={styles.column}>\n                <div className={styles.name}>\n                    {`${comment.commenter.first_name || \"\"} ${comment.commenter.last_name || \"\"}`}\n                </div>\n                <div className={styles.message}>\n                    {insertNewlines(comment.message)}\n                </div>\n                <div className={styles.time}>\n                    {lp(getRelativeDateKey(comment.created_at))}\n                </div>\n            </div>\n        </div>\n    )\n}","function fallbackCopyTextToClipboard(text) {\n    var textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n\n    // Avoid scrolling to bottom\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    textArea.style.position = \"fixed\";\n\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    try {\n        document.execCommand('copy');\n    } catch (err) {\n        console.error('Failed to copy text to clipboard!', err);\n    }\n\n    document.body.removeChild(textArea);\n}\n\nexport function copyTextToClipboard(text) {\n    if (navigator.clipboard) {\n        navigator.clipboard.writeText(text);\n    } else {\n        fallbackCopyTextToClipboard(text);\n    }\n\n}\n\nexport function copyBlobToClipboard(blob) {\n\tif(!navigator.clipboard) return false;\n\n\tconst type = blob.type;\n\tif(type.includes(\"jpg\") || type.includes(\"jpeg\")) {\n\t\treturn convertToPng(blob).then(copyBlobToClipboard);\n\t}\n\n    return navigator.clipboard.write([\n        // eslint-disable-next-line no-undef\n        new ClipboardItem({\n            [blob.type]: blob\n        })\n    ]);\n}\n\nconst createImage = (options) => {\n  options = options || {};\n  const img = document.createElement(\"img\");\n  if (options.src) {\n    img.src = options.src;\n  }\n  return img;\n};\n\nfunction convertToPng(imgBlob) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst imageUrl = window.URL.createObjectURL(imgBlob);\n\t\t  const canvas = document.createElement(\"canvas\");\n\t\t  const ctx = canvas.getContext(\"2d\");\n\t\t  const imageEl = createImage({ src: imageUrl });\n\t\t  imageEl.onload = (e) => {\n\t\t    canvas.width = e.target.width;\n\t\t    canvas.height = e.target.height;\n\t\t    ctx.drawImage(e.target, 0, 0, e.target.width, e.target.height);\n\t\t    canvas.toBlob(resolve, \"image/png\", 1);\n\t\t  }; \n\t})\n}\n\nexport async function blobToByteArray(blob) {\n    const buffer = await blob.arrayBuffer();\n    const view = new Uint8Array(buffer);\n    return Array.from(view);\n}","import { FC, MouseEventHandler } from \"react\";\nimport { Item, Menu, useContextMenu } from 'react-contexify';\nimport 'react-contexify/dist/ReactContexify.css';\nimport { useHistory } from \"react-router-dom\";\nimport { deleteOwnPost, dislikePost, likePost } from \"../../../slices/postsSlice\";\nimport { selectAccount } from \"../../../slices/profileSlice\";\nimport { IPost } from \"../../../types\";\nimport { copyTextToClipboard } from \"../../../util/clipboard\";\nimport { BASE_URL } from \"../../../util/contants\";\nimport { getRelativeDateKey } from \"../../../util/date\";\nimport { useAppDispatch, useAppSelector, useAuthorization, useLocalization } from \"../../../util/hooks\";\nimport { insertNewlines } from \"../../../util/jsx\";\nimport { Avatar } from \"../../basic/avatar/Avatar\";\nimport { IconButton } from \"../../basic/button/IconButton\";\nimport { Slider } from \"../../slider/Slider\";\nimport styles from \"./Post.module.scss\";\n\ntype PostProps = {\n    post: IPost\n    sliderSides?: boolean\n    onImageClicked?: MouseEventHandler<HTMLElement>\n}\n\nexport const Post: FC<PostProps> = ({ post, sliderSides, onImageClicked }) => {\n    const lp = useLocalization();\n    const history = useHistory();\n    const dispatch = useAppDispatch();\n\n    const { show } = useContextMenu({\n        id: post.id,\n    });\n\n    const account = useAppSelector(selectAccount);\n    const requireAuth = useAuthorization();\n\n    return (\n        <div className={styles.post}>\n            <div className={styles.header}>\n                <Avatar url={post.author.profile_photo_url} size={\"2.5em\"} to={`/profile/${post.author.username}`} />\n                <div className={styles.info}>\n                    <div className={styles.name}>\n                        {`${post.author.first_name || \"\"} ${post.author.last_name || \"\"}`}\n                    </div>\n                    <div className={styles.time}>\n                        {lp(getRelativeDateKey(post.created_at))}\n                    </div>\n                </div>\n                <div className={styles.more} onClick={ev => show(ev)}>\n                    <i className=\"icon icon-more\" />\n                </div>\n            </div>\n            <div className={styles.content}>\n                {post.photos.length ? <Slider photos={post.photos} onCenterClick={onImageClicked} sides={sliderSides} roundBorders/> : lp(\"post_no_images\")}\n                {post.description && <div className={styles.description}>{insertNewlines(post.description)}</div>}\n            </div>\n            <div className={styles.footer}>\n                <IconButton\n                    className={styles.iconButton}\n                    icon=\"like\" text={post.likes_count.toString()}\n                    checked={post.is_liked}\n                    onClick={() => requireAuth(() => dispatch(post.is_liked ? dislikePost(post.id) : likePost(post.id)))}\n                />\n                <IconButton className={styles.iconButton} icon=\"comments\" text=\"0\" onClick={() => history.push(`/${post.id}`)} />\n                <div className={styles.separator} />\n                <div className={styles.share} onClick={() => copyLink(post.id)}>{lp(\"post_share\")} <i className=\"icon icon-arrow\" /></div>\n            </div>\n\n            <Menu id={post.id}>\n                <Item onClick={() => copyLink(post.id)}>{lp(\"post_copy_link\")}</Item>\n                {account?.username === post.author.username && \n                    <Item className={styles.danger} onClick={() => dispatch(deleteOwnPost(post.id))}>{lp(\"post_delete\")}</Item>}\n            </Menu>\n        </div>\n    )\n}\n\nconst copyLink = (id: number) => {\n    copyTextToClipboard(BASE_URL + \"#/\" + id)\n}\n","import classNames from \"classnames\";\nimport { FC, useEffect, useState } from \"react\";\nimport { closePost, leaveOwnComment, openPost, selectOpenedComments, selectOpenedPost } from \"../../../slices/openedPostSlice\";\nimport { dislikePost, likePost, selectPostsStatus } from \"../../../slices/postsSlice\";\nimport { IComment, IPost } from \"../../../types\";\nimport { IS_DESKTOP } from \"../../../util/contants\";\nimport { useAppDispatch, useAppSelector, useAuthorization, useLocalization, useWindowSize } from \"../../../util/hooks\";\nimport { Avatar } from \"../../basic/avatar/Avatar\";\nimport { IconButton } from \"../../basic/button/IconButton\";\nimport { Modal } from \"../../basic/modal/Modal\";\nimport { TextArea } from \"../../basic/textarea/TextArea\";\nimport { Header } from \"../../header/Header\";\nimport { Slider } from \"../../slider/Slider\";\nimport { Comment } from \"../comment/Comment\";\nimport { Post } from \"../post/Post\";\nimport styles from \"./ModalPost.module.scss\";\n\ntype ModalPostParams = {\n    opened?: boolean\n    postId?: number\n    onRequestClose?(event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>): void\n}\n\nexport const ModalPost: FC<ModalPostParams> = ({ postId = -1, opened = false, onRequestClose }) => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n    useWindowSize();\n\n    const post = useAppSelector(selectOpenedPost);\n    const postStatus = useAppSelector(selectPostsStatus);\n    const comments = useAppSelector(selectOpenedComments);\n\n    useEffect(() => {\n        if (postId >= 0) {\n            dispatch(openPost(postId));\n        } else {\n            dispatch(closePost()); // don't keep last post loaded in store\n        }\n    }, [dispatch, postId]);\n\n    let content;\n\n    if (!post) {\n        if (postStatus === \"loading\") {\n            content = lp(\"general_loading\");\n        } else {\n            content = lp(\"general_error_loading\");\n        }\n    } else {\n        // designer decided that mobile will use standard post with comments, but not desktop\n        if (!IS_DESKTOP()) {\n            content = (\n                <>\n                    <Header back onBackClick={onRequestClose} />\n                    <Post post={post} sliderSides />\n                    <Comments post={post} comments={comments} />\n                </>\n            )\n        } else {\n            content = (\n                <>\n                    {post.photos.length ?\n                        <Slider photos={post.photos} className={styles.slider} />\n                        : <div className={styles.noImages}>{lp(\"post_no_images\")}</div>}\n                    <div className={styles.data}>\n                        <div className={styles.header}>\n                            <Avatar className={styles.avatar} url={post.author.profile_photo_url} size=\"3rem\" />\n                            <div className={styles.name}>\n                                {`${post.author.first_name || \"\"} ${post.author.last_name || \"\"}`}\n                            </div>\n                            <div className={styles.separator} />\n                            <i className={`icon icon-cross ${styles.close}`} onClick={onRequestClose} />\n                        </div>\n                        <Comments post={post} comments={comments} likes padding />\n                    </div>\n                </>\n            )\n        }\n    }\n\n    return (\n        <Modal isOpen={opened} className={styles.modalPost} onRequestClose={onRequestClose} tabletExpand>\n            {content}\n        </Modal>\n    )\n}\n\ntype CommentsProps = {\n    comments: IComment[]\n    post: IPost\n    likes?: boolean\n    padding?: boolean\n}\n\nconst Comments: FC<CommentsProps> = ({ comments, post, likes = false, padding = false }) => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n    const requireAuth = useAuthorization();\n\n    const [comment, setComment] = useState(\"\");\n\n    return (\n        <>\n            <div className={classNames({\n                [styles.comments]: true,\n                [styles.padding]: padding\n            })}>\n                {comments.length ? comments.map(comment => <Comment avatarSize=\"3rem\" className={styles.comment} comment={comment} key={comment.id} />) : lp(\"post_no_comments\")}\n            </div>\n            {likes && <div className={styles.buttons}>\n                <IconButton\n                    icon=\"like\"\n                    text={post.likes_count.toString()}\n                    className={styles.like}\n                    checked={post.is_liked}\n                    onClick={() => requireAuth(() => post.is_liked ? dispatch(dislikePost(post.id)) : dispatch(likePost(post.id)))}\n                />\n            </div>}\n            <div className={styles.newComment}>\n                <TextArea\n                    minRows={1}\n                    className={styles.input}\n                    placeholder={lp(\"post_add_comment\")}\n                    value={comment}\n                    onChange={ev => setComment(ev.currentTarget.value)}\n                />\n                <button className={styles.post} onClick={() => requireAuth(() => {\n                    dispatch(leaveOwnComment({ post_id: post.id, message: comment }));\n                    setComment(\"\");\n                })}>{lp(\"post_post_comment\")}</button>\n            </div>\n        </>\n    )\n}","import { FC, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetchAllPosts, selectLoadedPosts, selectPostsStatus } from \"../../../slices/postsSlice\";\nimport { useAppDispatch, useLocalization } from \"../../../util/hooks\";\nimport { ModalPost } from \"../modal/ModalPost\";\nimport { Post } from \"../post/Post\";\nimport styles from \"./Feed.module.scss\";\n\ntype FeedParameters = {\n    username?: string\n}\n\nexport const Feed: FC<FeedParameters> = ({ username }) => {\n    const dispatch = useAppDispatch();\n    const lp = useLocalization();\n\n    useEffect(() => {\n        dispatch(fetchAllPosts(username));\n    }, [username, dispatch]);\n\n    const [modalPostId, setModalPostId] = useState(-1);\n\n    const posts = useSelector(selectLoadedPosts);\n    const status = useSelector(selectPostsStatus);\n\n    let content;\n\n    if (status === \"idle\") {\n        if(posts.length) {\n            content = posts.map(post => <Post key={post.id} post={post} onImageClicked={() => {\n                setModalPostId(post.id)\n            }}/>);\n        } else {\n            content = <div className={styles.text}>{lp(\"feed_no_posts\")}</div>;\n        }\n    } else if (status === \"loading\") {\n        content = <div className={styles.text}>{lp(\"general_loading\")}</div>;\n    } else {\n        content = <div className={styles.text}>{lp(\"general_error_loading\")}</div>;\n    }\n\n    return (\n        <div className={styles.feed}>\n            {content}\n            <ModalPost opened={modalPostId >= 0} postId={modalPostId} onRequestClose={() => setModalPostId(-1)}/>\n        </div>\n    )\n}","import AwsS3 from \"@uppy/aws-s3\"\nimport Uppy from \"@uppy/core\"\nimport { IImage } from \"../types\"\nimport { API_BASE } from \"./api\"\n\nexport const getUppy = () => {\n    const uppy = Uppy<Uppy.StrictTypes>({\n        restrictions: {\n            maxNumberOfFiles: 10,\n            allowedFileTypes: [\"image/png\", \"image/jpg\", \"image/jpeg\"],\n            maxFileSize: 5 * 1024 * 1024 // 5MB\n        },\n    })\n\n    uppy.use(AwsS3, {\n        companionUrl: API_BASE,\n    });\n\n    return uppy;\n}\n\nexport const addFile = (uppy: Uppy.Uppy, file: File) => {\n    return uppy.addFile({\n        name: file.name,\n        type: file.type,\n        data: file,\n        source: 'Local'\n    })\n}\n\nexport const uploadFiles = async (files: File[]) => {\n    const uppy = getUppy();\n    files.forEach(file => addFile(uppy, file));\n\n    const result = await uppy.upload();\n    if(result.failed.length) {\n        return result.failed;\n    }\n    if(result.successful.length) {\n        return transformFileData(result.successful);\n    }\n    return [];\n}\n\nexport const transformFileData = (files: Uppy.UploadedUppyFile<any, any>[]): IImage[] => {\n    return files.map(file => {\n        const key: string = (file.meta as any).key;\n        const [storage, id] = key.split(\"/\");\n        const params: IImage = {\n            id: id,\n            storage: storage,\n            metadata: {\n                filename: file.meta.name,\n                size: file.data.size,\n                mime_type: file.data.type\n            }\n        }\n        return params;\n    });\n}","import Uppy from \"@uppy/core\";\nimport classNames from \"classnames\";\nimport React, { FC, SyntheticEvent, useEffect, useRef, useState } from \"react\";\nimport { IPhoto } from \"../../../types\";\nimport { addFile } from \"../../../util/uppy\";\nimport { Slider } from \"../../slider/Slider\";\nimport styles from \"./ImageInput.module.scss\";\n\ninterface ImageInputProps {\n    uppy: Uppy.Uppy\n    accept?: string[]\n    multiple?: boolean\n    text?: string\n    className?: string\n    getFiles?: Function\n    defaultPreviewUrl?: string\n}\n\nexport const ImageInput: FC<ImageInputProps> = ({ uppy, accept = [\"image/*\"], multiple = false, text, defaultPreviewUrl, className }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [files, setFiles] = useState<File[]>([]);\n\n    useEffect(() => {\n        // clear and re-add files on change\n        uppy.getFiles().forEach(file => uppy.removeFile(file.id));\n        files.forEach(file => addFile(uppy, file));\n    }, [files, uppy]);\n\n    const preventEvent = (ev: SyntheticEvent) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n    }\n\n    return (\n        <div className={classNames({\n            [styles.file]: true\n        }, className)}\n            onClick={() => inputRef.current?.click()}\n            onDragOver={preventEvent}\n            onDragEnter={preventEvent}\n            onDragLeave={preventEvent}\n            onDrop={ev => {\n                ev.preventDefault();\n                setFiles(Array.from(ev.dataTransfer.files))\n            }}\n        >\n            <div className={styles.preview}>\n                {files.length ? <Slider photos={filesToPhotos(files)} className={styles.slider}/> : \n                    defaultPreviewUrl ? <img src={defaultPreviewUrl} alt=\"Preview\"/> : text}\n            </div>\n            <input type=\"file\" accept={accept.join(\",\")} multiple={multiple} ref={inputRef} hidden onChange={ev => {\n                if (ev.target.files?.length) {\n                    setFiles(Array.from(ev.target.files))\n                }\n            }\n            } />\n        </div>\n    )\n}\n\nconst filesToPhotos = (files: File[]): IPhoto[] => {\n    return files.map((file, i) => ({id: i, url: URL.createObjectURL(file)}));\n}","import { FC, useEffect, useState } from \"react\";\nimport { createOwnPost } from '../../../slices/postsSlice';\nimport { useAppDispatch, useLocalization } from \"../../../util/hooks\";\nimport { getUppy, transformFileData } from '../../../util/uppy';\nimport { Button } from \"../../basic/button/Button\";\nimport { ImageInput } from \"../../basic/file/ImageInput\";\nimport { Modal } from '../../basic/modal/Modal';\nimport { TextArea } from \"../../basic/textarea/TextArea\";\nimport styles from \"./NewPost.module.scss\";\n\ntype NewPostParameters = {\n    opened?: boolean\n    onRequestClose?(event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>): void\n}\n\nconst uppy = getUppy();\n\nexport const NewPost: FC<NewPostParameters> = ({ opened = false, onRequestClose }) => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n\n    const [description, setDescription] = useState(\"\");\n\n    useEffect(() => {\n        if (!opened) {\n            setDescription(\"\");\n        }\n    }, [opened])\n\n    return (\n        <Modal className={styles.newPost} isOpen={opened} onRequestClose={onRequestClose}>\n            <ImageInput \n                text={lp(\"post_new_file\")} \n                className={styles.input} \n                uppy={uppy}\n                multiple\n                accept={[\"image/png\", \"image/jpg\", \"image/jpeg\"]}\n            />\n            <TextArea\n                className={styles.description}\n                minRows={3}\n                placeholder={lp(\"post_new_description_placeholder\")}\n                label={lp(\"post_new_description\")}\n                onChange={ev => setDescription(ev.currentTarget.value)}\n                value={description}\n            />\n            <div className={styles.buttons}>\n                <Button lightBorder onClick={onRequestClose}>{lp(\"general_cancel\")}</Button>\n                <Button color=\"blue\" onClick={async ev => {\n                    const result = await uppy.upload()\n                    // TODO handle errors, move this code into util\n                    if (result.successful.length) {\n                        const images = transformFileData(result.successful);\n                        dispatch(createOwnPost({\n                            description,\n                            photos_attributes: images.map(image => ({ image }))\n                        }))\n                        onRequestClose?.(ev);\n                    } else if (result.successful.length === 0 && result.failed.length === 0) {\n                        if (description) {\n                            dispatch(createOwnPost({\n                                description,\n                                photos_attributes: []\n                            }))\n                            onRequestClose?.(ev);\n                        }\n                    }\n                }}>{lp(\"post_new_post\")}</Button>\n            </div>\n        </Modal>\n    )\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport styles from \"./Input.module.scss\";\n\nexport interface InputParameters extends React.InputHTMLAttributes<HTMLInputElement> {\n    label?: string\n    placeholder?: string\n    icon?: string\n    iconColor?: string\n    className?: string\n    [key: string]: any\n}\n\nexport const Input: FC<InputParameters> = ({label, placeholder, icon, iconColor, className, ...otherParams}) => {\n    return (\n        <label className={classNames({\n            [styles.input]: true\n            }, className)}>\n            {label}\n            <input placeholder={placeholder} {...otherParams}/>\n        </label>\n    )\n}","import classNames from \"classnames\";\nimport { FC, useState } from \"react\";\nimport { logout, selectAccount, updateAccount } from \"../../../slices/profileSlice\";\nimport { IProfileUpdateParameters } from \"../../../util/api\";\nimport { useAppDispatch, useAppSelector, useLocalization } from \"../../../util/hooks\";\nimport { getUppy, transformFileData } from \"../../../util/uppy\";\nimport { Button } from \"../../basic/button/Button\";\nimport { ImageInput } from \"../../basic/file/ImageInput\";\nimport { Input } from \"../../basic/input/Input\";\nimport { Modal } from \"../../basic/modal/Modal\";\nimport { TextArea } from \"../../basic/textarea/TextArea\";\nimport styles from \"./ProfileEdit.module.scss\";\n\ntype ProfileEditParameters = {\n    opened?: boolean\n    onRequestClose?(event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>): void\n}\n\nconst uppy = getUppy();\n\nexport const ProfileEdit: FC<ProfileEditParameters> = ({ opened = false, onRequestClose }) => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n\n    const account = useAppSelector(selectAccount);\n\n    const [firstName, setFirstName] = useState(account?.first_name);\n    const [secondName, setSecondName] = useState(account?.last_name);\n    const [jobTitle, setJobTitle] = useState(account?.job_title);\n    const [description, setDescription] = useState(account?.description);\n\n    if (!account) {\n        return (\n            <Modal className={styles.profileEdit} isOpen={opened} onRequestClose={onRequestClose}>\n                NO ACCOUNT!!!\n            </Modal>\n        )\n    }\n\n    return (\n        <Modal className={styles.profileEdit} isOpen={opened} onRequestClose={onRequestClose}>\n            <div className={styles.header}>\n                <div className={styles.title}>\n                    {lp(\"profile_edit_title\")}\n                </div>\n                <div className={styles.logout} onClick={ev => {\n                    dispatch(logout());\n                    onRequestClose?.(ev);\n                }}>\n                    {lp(\"general_logout\")}\n                </div>\n            </div>\n            <div className={styles.topBlock}>\n                <div className={styles.avatarWrapper}>\n                    <ImageInput className={styles.avatar} uppy={uppy} defaultPreviewUrl={account.profile_photo_url}/>\n                    <div className={styles.avatarText}>{lp(\"profile_edit_photo\")}</div>\n                </div>\n                <div className={styles.name}>\n                    <Input\n                        className={styles.input}\n                        label={lp(\"profile_edit_first_name\")}\n                        placeholder={lp(\"profile_edit_first_name_placeholder\")}\n                        value={firstName}\n                        onChange={ev => setFirstName(ev.currentTarget.value)}\n                    />\n                    <Input\n                        className={styles.input}\n                        label={lp(\"profile_edit_second_name\")}\n                        placeholder={lp(\"profile_edit_second_name_placeholder\")}\n                        value={secondName}\n                        onChange={ev => setSecondName(ev.currentTarget.value)}\n                    />\n                </div>\n            </div>\n            <Input\n                className={styles.input}\n                label={lp(\"profile_edit_job_title\")}\n                placeholder={lp(\"profile_edit_job_title_placeholder\")}\n                value={jobTitle}\n                onChange={ev => setJobTitle(ev.currentTarget.value)}\n            />\n            <TextArea\n                className={classNames(styles.input, styles.description)}\n                label={lp(\"profile_edit_description\")}\n                placeholder={lp(\"profile_edit_description_placeholder\")}\n                value={description}\n                onChange={ev => setDescription(ev.currentTarget.value)}\n            />\n\n            <div className={styles.buttons}>\n                <Button lightBorder onClick={onRequestClose}>{lp(\"general_cancel\")}</Button>\n                <Button color=\"blue\" onClick={async ev => {\n                    const params: IProfileUpdateParameters = {...account};\n                    params.first_name = firstName;\n                    params.last_name = secondName;\n                    params.job_title = jobTitle;\n                    params.description = description;\n                    \n                    if(uppy.getFiles().length) {\n                        const result = await uppy.upload();\n                        if(result.successful.length) {\n                            params.profile_photo = transformFileData(result.successful)[0]\n                        }\n\n                        // TODO handle errors\n                    }\n\n                    dispatch(updateAccount(params));\n                    onRequestClose?.(ev);\n                }}>{lp(\"general_save\")}</Button>\n            </div>\n        </Modal>\n    )\n}","import classNames from \"classnames\";\nimport { FC, useState } from \"react\";\nimport { IProfile } from \"../../../types\";\nimport { useAuthorization, useLocalization } from \"../../../util/hooks\";\nimport { insertNewlines } from \"../../../util/jsx\";\nimport { Avatar } from \"../../basic/avatar/Avatar\";\nimport { Button } from \"../../basic/button/Button\";\nimport { NewPost } from \"../../posts/new/NewPost\";\nimport { ProfileEdit } from \"../edit/ProfileEdit\";\nimport styles from \"./ProfileInfo.module.scss\";\n\ntype ProfileInfoProps = {\n    profile: IProfile\n    own?: boolean\n    horizontal?: boolean\n}\n\nexport const ProfileInfo: FC<ProfileInfoProps> = ({profile, own = false, horizontal = false}) => {\n    const lp = useLocalization();\n    const requireAuth = useAuthorization();\n\n    const [isNewPostOpened, setNewPostOpened] = useState(false);\n    const [isProfileEditOpened, setProfileEditOpened] = useState(false);\n\n    const nameString = `${profile.first_name || \"\"} ${profile.last_name || \"\"}`;\n    if(horizontal) {\n        return (\n        <div className={classNames([styles.profileInfo, styles.horizontal])}>\n            <Avatar url={profile.profile_photo_url} border size=\"7.25em\"/>\n            <div className={styles.info}>\n                <div className={styles.name}>\n                    {nameString}\n                </div>\n                <div className={styles.job}>\n                    {profile.job_title || \"\"}\n                </div>\n                <div className={styles.description}>\n                    {insertNewlines(profile.description || \"\")}\n                </div>\n            </div>\n            <div className={styles.separator}/>\n            <div className={styles.right}>\n                <div className={styles.social}>\n                    <div className={styles.followers}>\n                        <div className={styles.number}>{profile.followers}</div>\n                        <div className={styles.smallText}>{lp(\"profile_followers\", {}, profile.followers)}</div>\n                    </div>\n                    \n                    <div className={styles.following}>\n                        <div className={styles.number}>{profile.following}</div>\n                        <div className={styles.smallText}>{lp(\"profile_following\")}</div>\n                    </div>\n                </div>\n                {own && <div className={styles.actionButtons}>\n                    <Button smallPadding lightBorder onClick={() => requireAuth(() => setProfileEditOpened(true))}>{lp(\"profile_edit\")}</Button>\n                    <Button smallPadding color=\"blue\" onClick={() => requireAuth(() => setNewPostOpened(true))}>{lp(\"post_new\")}</Button>\n                </div>}\n            </div>\n            <NewPost opened={isNewPostOpened} onRequestClose={() => setNewPostOpened(false)}/>\n            <ProfileEdit opened={isProfileEditOpened} onRequestClose={() => setProfileEditOpened(false)} />\n        </div>\n        )\n    }\n\n    return (\n        <div className={styles.profileInfo}>\n            <div className={styles.top}>\n                <div className={styles.followers}>\n                    <div className={styles.number}>{profile.followers}</div>\n                    <div className={styles.smallText}>{lp(\"profile_followers\", {}, profile.followers)}</div>\n                </div>\n                <Avatar url={profile.profile_photo_url} border size=\"5em\"/>\n                <div className={styles.following}>\n                    <div className={styles.number}>{profile.following}</div>\n                    <div className={styles.smallText}>{lp(\"profile_following\")}</div>\n                </div>\n            </div>\n            <div className={styles.bottom}>\n                <div className={styles.info}>\n                    {nameString} {profile.job_title ? `- ${profile.job_title || \"\"}` : \"\"}\n                </div>\n                <div className={styles.description}>\n                    {insertNewlines(profile.description || \"\")}\n                </div>\n                {own && <div className={styles.actionButtons}>\n                    <Button smallPadding onClick={() => requireAuth(() => setProfileEditOpened(true))}>{lp(\"profile_edit\")}</Button>\n                    <Button smallPadding color=\"blue\" onClick={() => requireAuth(() => setNewPostOpened(true))}>{lp(\"post_new\")}</Button>\n                </div>}\n            </div>\n            <NewPost opened={isNewPostOpened} onRequestClose={() => setNewPostOpened(false)}/>\n            <ProfileEdit opened={isProfileEditOpened} onRequestClose={() => setProfileEditOpened(false)} />\n        </div>\n    )\n}","import { FC, useEffect } from \"react\";\nimport { fetchAllProfiles, selectProfiles } from \"../../slices/profileSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../util/hooks\";\nimport { Avatar } from \"../basic/avatar/Avatar\";\nimport styles from \"./Stories.module.scss\";\n\nexport const Stories: FC = () => {\n\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(fetchAllProfiles());\n    }, [dispatch]);\n\n    const profiles = useAppSelector(selectProfiles);\n\n    return (\n        <div className={styles.stories}>\n            <div className={styles.scroll}>\n                {profiles.filter(profile => profile.profile_photo_url).map(profile => <Avatar\n                    key={profile.username}\n                    url={profile.profile_photo_url}\n                    size={\"4em\"}\n                    to={`/profile/${profile.username}`}\n                    border />)}\n            </div>\n        </div>\n    )\n}","import { FC, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Button } from \"../../components/basic/button/Button\";\nimport { Footer } from \"../../components/footer/Footer\";\nimport { Header } from \"../../components/header/Header\";\nimport { Feed } from \"../../components/posts/feed/Feed\";\nimport { ModalPost } from \"../../components/posts/modal/ModalPost\";\nimport { ProfileInfo } from \"../../components/profile/info/ProfileInfo\";\nimport { Stories } from \"../../components/stories/Stories\";\nimport { selectAccount, selectIsLoggedIn } from \"../../slices/profileSlice\";\nimport { IProfile } from \"../../types\";\nimport { useAppSelector, useLocalization } from \"../../util/hooks\";\nimport styles from \"./Home.module.scss\";\n\nconst Home: FC = () => {\n    const lp = useLocalization();\n    const history = useHistory();\n    const {id} = useParams<{id: string}>();\n\n    const [modalPostOpened, setModalPostOpened] = useState(false);\n\n    const isLoggedIn = useAppSelector(selectIsLoggedIn);\n    const account = useAppSelector(selectAccount) as IProfile;\n\n    useEffect(() => {\n        if(Number.parseInt(id)) {\n            setModalPostOpened(true);\n        } else {\n            setModalPostOpened(false);\n        }\n    }, [id]);\n\n    return (\n        <div className={styles.home}>\n            <Header profile login/>\n            <div className={styles.content}>\n                <div className={styles.left}>\n                    <Stories/>\n                    <Feed/>\n                </div>\n                <div className={styles.right}>\n                    <div className={styles.sticky}>\n                        { isLoggedIn ? <ProfileInfo profile={account} own/> :<Button color=\"black\" to=\"/login\">{lp(\"general_login\")}</Button>}\n                        <Footer/>\n                    </div>\n                </div>\n            </div>\n            <ModalPost opened={modalPostOpened} postId={Number.parseInt(id) || -1} onRequestClose={() => history.push(\"/\")}/>\n        </div>\n    )\n}\n\nexport default Home;","import { Field, FieldProps, Form, Formik } from \"formik\";\nimport { FC, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Button } from \"../../components/basic/button/Button\";\nimport { Input, InputParameters } from \"../../components/basic/input/Input\";\nimport { Header } from \"../../components/header/Header\";\nimport { fetchCurrentAccount, selectIsLoggedIn } from \"../../slices/profileSlice\";\nimport { createAccount, fetchProfile, login } from \"../../util/api\";\nimport { IS_DESKTOP } from \"../../util/contants\";\nimport { useAppDispatch, useAppSelector, useLocalization } from \"../../util/hooks\";\nimport styles from \"./Login.module.scss\";\n\ntype FormValues = {\n    email: string\n    username: string\n    password: string\n}\n\nconst Login: FC = () => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n\n    const isLoggedIn = useAppSelector(selectIsLoggedIn);\n\n    const [signUp, setSignUp] = useState(false);\n\n    const schema = Yup.object().shape({\n        email: Yup.string()\n                    .email(lp(\"login_validation_email_invalid\"))\n                    .required(lp(\"login_validation_required\")),\n        username: signUp ? Yup.string()\n                    .min(3, lp(\"login_validation_min_length\", {count: \"3\"}, 3))\n                    .max(20, lp(\"login_validation_max_length\", {count: \"20\"}, 20))\n                    .matches(/^[a-zA-Z0-9._-]*$/, \"Use alphabet, numbers and _ -\")\n                    .test(\"isTaken\", lp(\"login_validation_username_taken\"), value => { // test if username is taken\n                        if(!value) return true;\n                        return new Promise((resolve, reject) => {\n                            fetchProfile(value).then((json) => {\n                                resolve(false)\n                            }).catch(() => {\n                                resolve(true)\n                            })\n                        })\n                    })\n                    .required(lp(\"login_validation_required\")): Yup.string(),\n        password: Yup.string()\n                    .min(6, lp(\"login_validation_min_length\", {count: \"6\"}, 6))\n                    .required(lp(\"login_validation_required\"))\n    });\n\n    if(isLoggedIn) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div className={styles.login}>\n            <Header />\n            <div className={styles.content}>\n                <div className={styles.presentation}>\n                    Photos go wroom\n                </div>\n                <div className={styles.authPane}>\n                    <div className={styles.title}>{lp(signUp ? \"login_sign_up\" : \"login_login\")}</div>\n\n                    <Formik\n                        initialValues={{\n                            email: \"\",\n                            username: \"\",\n                            password: \"\"\n                        }}\n                        onSubmit={async (values: FormValues) => {\n                            if(signUp) {\n                                createAccount({login: values.email, password: values.password, username: values.username})\n                                    .then(() => dispatch(fetchCurrentAccount()))\n                            } else {\n                                login({login: values.email, password: values.password})\n                                    .then(() => dispatch(fetchCurrentAccount()))\n                            }\n                        }}\n                        validationSchema={schema}\n                    >\n                        <Form>\n                            <Field\n                                name=\"email\"\n                                type=\"email\"\n                                component={FormikWrapperInput}\n                                label={lp(\"login_field_email_label\")}\n                                placeholder={lp(\"login_field_email_placeholder\")}\n                            />\n                            {signUp && <Field\n                                name=\"username\"\n                                component={FormikWrapperInput}\n                                label={lp(\"login_field_username_label\")}\n                                placeholder={lp(\"login_field_username_placeholder\")}\n                            />}\n                            <Field\n                                name=\"password\"\n                                component={FormikWrapperInput}\n                                type=\"password\"\n                                label={lp(\"login_field_password_label\")}\n                                placeholder={lp(\"login_field_password_placeholder\")}\n                            />\n                            <div className={styles.mobileSeparator}/>\n                            {/* Designer is shuffling buttons */}\n                            {IS_DESKTOP() && <SubmitButton signUp={signUp}/>}\n                            <div className={styles.switch}>\n                                {lp(signUp ? \"login_have_account\" : \"login_no_account\")}\n                                <span className={styles.inlineSwitch} onClick={() => setSignUp(!signUp)}>\n                                    {lp(signUp ? \"login_login\" : \"login_sign_up\")}\n                                </span>\n                            </div>\n                            {!IS_DESKTOP() && <SubmitButton signUp={signUp}/>}\n                        </Form>\n                    </Formik>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst SubmitButton: FC<{signUp: boolean}> = ({signUp = false}) => {\n    const lp = useLocalization();\n    return (\n        <Button className={styles.button} color=\"blue\" type=\"submit\">\n            {lp(signUp ? \"login_sign_up_button\" : \"login_login_button\")}\n        </Button>\n    )\n}\n\nconst FormikWrapperInput: FC<InputParameters & FieldProps> = ({ field, form: { touched, errors, setFieldValue, values }, ...otherProps }) => {\n    return (\n        <div className={styles.input}>\n            <Input onChange={e => setFieldValue(field.name, e.currentTarget.value)} name={field.name} value={values[field.name]} {...otherProps} />\n            {touched[field.name] && errors[field.name] && <div className={styles.error}>{errors[field.name]}</div>}\n        </div>\n    )\n}\n\nexport default Login;","import { FC, MouseEventHandler, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetchAllPosts, selectLoadedPosts, selectPostsStatus } from \"../../../slices/postsSlice\";\nimport { useAppDispatch, useLocalization } from \"../../../util/hooks\";\nimport { ModalPost } from \"../modal/ModalPost\";\nimport styles from \"./PhotoFeed.module.scss\";\n\ntype PhotoFeedParameters = {\n    username?: string\n}\n\nexport const PhotoFeed: FC<PhotoFeedParameters> = ({username}) => {\n    const dispatch = useAppDispatch();\n    const lp = useLocalization();\n\n    useEffect(() => {\n        dispatch(fetchAllPosts(username));\n    }, [username, dispatch]);\n    \n    const [modalPostId, setModalPostId] = useState(-1);\n\n    const posts = useSelector(selectLoadedPosts);\n    const status = useSelector(selectPostsStatus);\n\n    let content;\n    if (status === \"idle\") {\n        if(posts.length) {\n            content = posts.map(post => post.photos.map(photo => <ImageSquare key={photo.id} url={photo.url} onClick={() => setModalPostId(post.id)}/>)).flat(1);\n        } else {\n            content = <div className={styles.text}>{lp(\"feed_no_posts\")}</div>;\n        }\n    } else if (status === \"loading\") {\n        content = lp(\"general_loading\");\n    } else {\n        content = lp(\"general_error_loading\");\n    }\n\n    return (\n        <div className={styles.photoFeed}>\n            {content}\n            <ModalPost opened={modalPostId >= 0} postId={modalPostId} onRequestClose={() => setModalPostId(-1)}/>\n        </div>\n    )\n}\n\nconst ImageSquare: FC<{url: string, onClick?: MouseEventHandler<HTMLElement>}> = ({url, onClick}) => {\n    return <div className={styles.square} onClick={onClick} style={{backgroundImage: `url(${url})`}}/>\n}","import { FC, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport { Header } from \"../../components/header/Header\";\nimport { PhotoFeed } from \"../../components/posts/feed/PhotoFeed\";\nimport { ProfileInfo } from \"../../components/profile/info/ProfileInfo\";\nimport { selectAccount } from \"../../slices/profileSlice\";\nimport { IProfile } from \"../../types\";\nimport { fetchProfile } from \"../../util/api\";\nimport { IS_DESKTOP } from \"../../util/contants\";\nimport { useAppSelector, useWindowSize } from \"../../util/hooks\";\nimport styles from \"./Profile.module.scss\";\n\nconst OwnProfile: FC = () => {\n    let { username } = useParams<{username: string}>();\n    const account = useAppSelector(selectAccount) as IProfile;\n    useWindowSize(); //update on resize\n\n    const [profile, setProfile] = useState<IProfile | null>(null);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        if (username) {\n            if(!profile || profile.username !== username) fetchProfile(username).then(json => setProfile(json)).catch(ex => setError(\"Failed to get profile\"));\n        } else {\n            setProfile(account);\n        }\n    }, [username, account, profile]);\n\n    if (!username && !localStorage.getItem(\"auth\")) {\n        return <Redirect to=\"/login\" />\n    }\n\n    const own = !!profile && account?.username === profile.username;\n\n    return (\n        <div className={styles.ownProfile}>\n            <Header home profile={!own}/>\n            <div className={styles.content}>\n                {error ? error : !profile ? \"Failed to load profile\" :\n                    <>\n                        <ProfileInfo profile={profile} own={own} horizontal={IS_DESKTOP()} />\n                        <PhotoFeed username={profile.username} />\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default OwnProfile;","import { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"./routes/home/Home\";\nimport Login from \"./routes/login/Login\";\nimport Profile from \"./routes/profile/Profile\";\nimport { selectLanguageCode, setLanguage } from \"./slices/localizationSlice\";\nimport { fetchCurrentAccount } from \"./slices/profileSlice\";\nimport { useAppDispatch, useAppSelector, useMountEffect } from \"./util/hooks\";\n\n\nfunction App() {\n    const dispatch = useAppDispatch();\n    const code = useAppSelector(selectLanguageCode);\n\n    // on first render\n    useMountEffect(() => {\n        dispatch(setLanguage(code));\n\n        if(localStorage.getItem(\"auth\")) dispatch(fetchCurrentAccount());\n    });\n\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/login\">\n                    <Login />\n                </Route>\n                <Route exact path=\"/profile/:username\">\n                    <Profile />\n                </Route>\n                <Route exact path=\"/profile\">\n                    <Profile />\n                </Route>\n                <Route exact path=\"/:id\">\n                    <Home />\n                </Route>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route>\n                    <Redirect to=\"/\" />\n                </Route>\n            </Switch>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport \"./css/global.scss\";\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { IS_SAFARI } from './util/contants';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('app')\n);\n\nModal.setAppElement('#app');\n\n// vh on mobile is kinda funky\nsetVH();\nwindow.addEventListener('resize', () => {\n    setVH();\n});\n\nfunction setVH() {\n    const vh = IS_SAFARI ? window.visualViewport.height :  window.innerHeight;\n    document.documentElement.style.setProperty('--vh100', `${vh-1}px`);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Iv7O1\",\"square\":\"Button_square__24Qg9\",\"smallPadding\":\"Button_smallPadding__1s_AW\",\"white\":\"Button_white__E8Wbq\",\"blue\":\"Button_blue__1Yy1O\",\"black\":\"Button_black__obrtp\",\"lightBorder\":\"Button_lightBorder__pQOr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Avatar_square__BGVCN\",\"clickable\":\"Avatar_clickable__9RUE4\",\"border\":\"Avatar_border__1fx0F\",\"visible\":\"Avatar_visible__2JtjS\",\"avatar\":\"Avatar_avatar__JOSFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__1oC7d\",\"column\":\"Comment_column__3_p8X\",\"name\":\"Comment_name__1yMvS\",\"message\":\"Comment_message__ZB4Zo\",\"time\":\"Comment_time__U8Dri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__8bgC6\",\"content\":\"Home_content__3Qx40\",\"left\":\"Home_left__2wJ4m\",\"right\":\"Home_right__3Vd87\",\"sticky\":\"Home_sticky__2N9Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__miWNG\",\"buttonRow\":\"Footer_buttonRow__eb9fI\",\"greyButton\":\"Footer_greyButton__1OzgT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"Feed_feed__3hto0\",\"text\":\"Feed_text__3JgoK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__2t2ka\",\"input\":\"NewPost_input__O7B-h\",\"description\":\"NewPost_description__1_5So\",\"buttons\":\"NewPost_buttons__2rXn9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__pTwNa\",\"modal\":\"Modal_modal__16s7U\",\"tabletExpand\":\"Modal_tabletExpand__3DpAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file\":\"ImageInput_file__2jY1F\",\"preview\":\"ImageInput_preview__3egAg\",\"slider\":\"ImageInput_slider__vwkRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoFeed\":\"PhotoFeed_photoFeed__1hn3a\",\"square\":\"PhotoFeed_square__1VW1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__cLKJa\",\"top\":\"ProfileInfo_top__3o043\",\"followers\":\"ProfileInfo_followers__2Nu_-\",\"following\":\"ProfileInfo_following__2ttTb\",\"number\":\"ProfileInfo_number__Lj_2R\",\"smallText\":\"ProfileInfo_smallText__XuTrR\",\"bottom\":\"ProfileInfo_bottom__1S_qc\",\"info\":\"ProfileInfo_info__3zEMb\",\"description\":\"ProfileInfo_description__1hzwZ\",\"actionButtons\":\"ProfileInfo_actionButtons__1207A\",\"horizontal\":\"ProfileInfo_horizontal__1TlCv\",\"name\":\"ProfileInfo_name__2Nwq-\",\"job\":\"ProfileInfo_job__b60_r\",\"separator\":\"ProfileInfo_separator__2VEdK\",\"right\":\"ProfileInfo_right__1dEse\",\"social\":\"ProfileInfo_social__17pXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stories\":\"Stories_stories__3gVf3\",\"scroll\":\"Stories_scroll__2hIlC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ownProfile\":\"Profile_ownProfile__2Inxr\",\"content\":\"Profile_content__1JwYV\"};"],"sourceRoot":""}