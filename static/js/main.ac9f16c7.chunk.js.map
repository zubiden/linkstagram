{"version":3,"sources":["components/posts/post/Post.module.scss","components/basic/textarea/TextArea.module.scss","components/basic/input/Input.module.scss","components/stories/StoriesSlider.module.scss","components/profile/edit/ProfileEdit.module.scss","components/header/Header.module.scss","routes/login/Login.module.scss","components/basic/button/Button.tsx","slices/localizationSlice.ts","util/api.ts","slices/postsSlice.ts","slices/profileSlice.ts","util/hooks.ts","components/footer/Footer.tsx","components/basic/avatar/Avatar.tsx","components/header/Header.tsx","slices/commentsSlice.ts","store.ts","util/date.ts","util/jsx.tsx","components/posts/post/Post.tsx","components/posts/feed/Feed.tsx","util/uppy.tsx","components/basic/file/ImageInput.tsx","components/basic/modal/Modal.tsx","components/basic/textarea/TextArea.tsx","components/posts/new/NewPost.tsx","components/basic/input/Input.tsx","components/profile/edit/ProfileEdit.tsx","components/profile/info/ProfileInfo.tsx","components/stories/StoriesSlider.tsx","routes/home/Home.tsx","util/contants.tsx","routes/login/Login.tsx","components/posts/feed/PhotoFeed.tsx","routes/profile/Profile.tsx","App.tsx","serviceWorker.ts","index.tsx","components/profile/info/ProfileInfo.module.scss","components/basic/button/Button.module.scss","components/basic/avatar/Avatar.module.scss","components/posts/feed/Feed.module.scss","routes/home/Home.module.scss","components/footer/Footer.module.scss","components/posts/new/NewPost.module.scss","components/posts/feed/PhotoFeed.module.scss","components/basic/file/ImageInput.module.scss","components/basic/modal/Modal.module.scss","routes/profile/Profile.module.scss"],"names":["module","exports","Button","color","lightBorder","square","to","className","children","smallPadding","onClick","otherArgs","history","useHistory","classNames","styles","button","ev","push","VALID_LANGUAGES","initialState","strings","code","localStorage","getItem","status","setLanguage","createAsyncThunk","thunkAPI","a","state","getState","selectTranslationStrings","Object","keys","length","selectLanguageCode","fetch","then","res","json","key","setItem","dispatch","setLanguageCode","Error","localizationSlice","createSlice","name","reducers","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","localization","API_BASE","login","data","method","body","JSON","stringify","headers","Headers","auth","get","removeItem","fetchComments","post_id","request","removeLike","setLike","fetchPosts","page","fetchUserPosts","username","fetchProfiles","fetchProfile","url","options","set","ok","text","parse","fetchAllPosts","setCurrentPostsUsername","notEnd","posts","currentPage","downloaded","find","post","id","refetchPost","likePost","dislikePost","deleteOwnPost","removePost","createOwnPost","params","selectCurrentPostsUsername","postsSlice","loadedPosts","currentPostsUsername","filter","rejected","findIndex","selectLoadedPosts","selectPostsStatus","fetchAllProfiles","profiles","profile","fetchCurrentAccount","account","error","updateAccount","newInfo","logout","arg","clearCurrentAccount","profileSlice","allProfiles","profilesFetchStatus","accountFetchStatus","resetAccountFetchStatus","selectProfiles","selectAccount","selectIsLoggedIn","selectIsLoggingIn","useAppDispatch","useDispatch","useAppSelector","useSelector","useAuthorization","loggedIn","loggingIn","func","useLocalization","lp","replaces","count","defaultValue","undefined","isLocalizationParameters","value","found","replace","isLanguageValue","countToPluralCode","other","replacement","replaceAll","uk","en","Footer","footer","buttonRow","year","toString","GreyButton","greyButton","Avatar","size","border","clickable","style","width","visible","src","avatar","alt","Header","home","isLoggedIn","langCode","dropdownOptions","entries","map","label","option","header","logo","separator","onChange","dropdown","controlClassName","control","placeholderClassName","placeholder","menuClassName","menu","profile_photo_url","reserver","fetchAllComments","setCurrentPostId","commentsSlice","loadedComments","currentPostId","store","configureStore","reducer","postsReducer","profileReducer","comments","commentsReducer","localizationReducer","getRelativeDateKey","timestamp","now","Date","getTime","diff","Math","abs","minutes","floor","hours","date","toLocaleDateString","month","day","insertNewlines","arr","split","e","i","flat","pop","Post","requireAuth","author","info","first_name","last_name","time","created_at","more","content","photos","image","description","icon","likes_count","liked","is_liked","share","IconText","iconText","Feed","useEffect","feed","postList","getUppy","uppy","Uppy","restrictions","maxNumberOfFiles","allowedFileTypes","maxFileSize","use","AwsS3","companionUrl","addFile","file","type","source","transformFileData","files","meta","storage","metadata","filename","mime_type","ImageInput","accept","defaultPreviewUrl","inputRef","useRef","useState","setFiles","getFiles","forEach","removeFile","preventEvent","preventDefault","stopPropagation","current","click","onDragOver","onDragEnter","onDragLeave","onDrop","Array","from","dataTransfer","preview","URL","createObjectURL","join","ref","hidden","target","Modal","isOpen","onRequestClose","modal","overlayClassName","overlay","TextArea","otherParams","textArea","NewPost","opened","setDescription","newPost","input","minRows","currentTarget","buttons","upload","result","successful","images","photos_attributes","failed","Input","iconColor","ProfileEdit","firstName","setFirstName","secondName","setSecondName","job_title","jobTitle","setJobTitle","profileEdit","title","topBlock","avatarWrapper","avatarText","profile_photo","ProfileInfo","own","horizontal","isNewPostOpened","setNewPostOpened","isProfileEditOpened","setProfileEditOpened","nameString","profileInfo","job","right","social","followers","number","smallText","following","actionButtons","top","bottom","StoriesSlider","slider","Home","left","sticky","IS_DESKTOP","window","innerWidth","IS_SAFARI","test","navigator","userAgent","SubmitButton","signUp","FormikWrapperInput","field","form","touched","errors","setFieldValue","values","otherProps","Login","setSignUp","schema","Yup","shape","email","required","min","max","matches","Promise","resolve","reject","catch","password","presentation","authPane","initialValues","onSubmit","validationSchema","component","mobileSeparator","switch","inlineSwitch","PhotoFeed","photo","photoFeed","ImageSquare","backgroundImage","OwnProfile","useParams","height","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","setProfile","setError","ex","ownProfile","App","fun","exact","path","Profile","Boolean","location","hostname","match","setVH","vh","visualViewport","document","documentElement","setProperty","ReactDOM","render","StrictMode","getElementById","setAppElement","serviceWorker","ready","registration","unregister","console","message"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,OAAS,qBAAqB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,sBAAsB,OAAS,qBAAqB,MAAQ,oBAAoB,YAAc,0BAA0B,OAAS,qBAAqB,SAAW,uBAAuB,MAAQ,oBAAoB,KAAO,mBAAmB,UAAY,wBAAwB,MAAQ,sB,oBCAtdD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,OAAS,gC,mBCA3BD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,4BAA4B,MAAQ,2BAA2B,OAAS,4BAA4B,SAAW,8BAA8B,cAAgB,mCAAmC,OAAS,4BAA4B,WAAa,gCAAgC,KAAO,0BAA0B,MAAQ,2BAA2B,YAAc,iCAAiC,QAAU,+B,mBCAzdD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,UAAY,0BAA0B,OAAS,uBAAuB,SAAW,yBAAyB,QAAU,wBAAwB,YAAc,4BAA4B,KAAO,qBAAqB,OAAS,uBAAuB,SAAW,2B,mBCA3UD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,aAAe,4BAA4B,SAAW,wBAAwB,MAAQ,qBAAqB,MAAQ,qBAAqB,OAAS,sBAAsB,MAAQ,qBAAqB,gBAAkB,+BAA+B,OAAS,sBAAsB,aAAe,8B,2MCctWC,EAA+B,SAAC,GAWlC,IAAD,MATFC,aASE,MATM,QASN,MARFC,mBAQE,aAPFC,cAOE,SANFC,EAME,EANFA,GACAC,EAKE,EALFA,UACAC,EAIE,EAJFA,SAIE,IAHFC,oBAGE,SAFFC,EAEE,EAFFA,QACGC,EACD,qGACAC,EAAUC,cAEhB,OACI,gDAAQN,UAAWO,KAAU,mBACxBC,IAAOC,QAAS,GADQ,cAExBD,IAAOZ,IAAS,GAFQ,cAGxBY,IAAOV,OAASA,GAHQ,cAIxBU,IAAOX,YAAcA,GAJG,cAKxBW,IAAON,aAAeA,GALE,GAM1BF,GACCG,QAAS,SAAAO,GACE,OAAPP,QAAO,IAAPA,KAAUO,GACNX,GAAIM,EAAQM,KAAKZ,KAErBK,GAXR,aAYKH,M,6CCpCAW,EAA6C,CACtD,GAAM,KACN,GAAM,MAaJC,EAAkC,CACpCC,QAAS,GACTC,KAAMC,aAAaC,QAAQ,aAAe,KAC1CC,OAAQ,QAGCC,EAAcC,YACvB,2BADuC,uCAEvC,WAAOL,EAAcM,GAArB,iBAAAC,EAAA,2DACQP,KAAQH,GADhB,mBAEcW,EAAQF,EAASG,WACjBV,EAAUW,EAAyBF,IACtCG,OAAOC,KAAKb,GAASc,QAAUb,IAASc,EAAmBN,GAJtE,yCAKmBT,GALnB,gCAQegB,MAAM,GAAD,OAjCO,WAiCP,YAAuBf,EAAvB,UACPgB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACF,IAAInB,EAAsB,GAC1B,IAAK,IAAIoB,KAAOD,EACZnB,EAAQoB,GAAOD,EAAKC,GAMxB,OAHAlB,aAAamB,QAAQ,WAAYpB,GACjCM,EAASe,SAASC,EAAgBtB,IAE3BD,MAnBvB,aAsBc,IAAIwB,MAAM,yBAtBxB,2CAFuC,yDA6BrCC,EAAoBC,YAAY,CAClCC,KAAM,eACN5B,eACA6B,SAAU,CACNL,gBADM,SACUd,EAAOoB,GACnBpB,EAAMR,KAAO4B,EAAOC,UAG5BC,cAAe,SAACC,GACZA,EAAQC,QAAQ5B,EAAY6B,SAAS,SAACzB,GAClCA,EAAML,OAAS,aAChB6B,QAAQ5B,EAAY8B,WAAW,SAAC1B,EAAOoB,GACtCpB,EAAML,OAAS,OACfK,EAAMT,QAAU6B,EAAOC,cAMpBL,IAAf,QAGQF,EAAoBE,EAAkBW,QAAtCb,gBAIKR,EAAqB,SAACN,GAAD,OAAsBA,EAAM4B,aAAapC,MAC9DU,EAA2B,SAACF,GAAD,OAAsBA,EAAM4B,aAAarC,S,QCjFpEsC,EAAW,6BA+DXC,EAAQ,SAACC,GAClB,OAAOxB,MAAM,GAAD,OAAIsB,EAAJ,UAAsB,CAC9BG,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,IAAIC,QAAQ,CACjB,eAAgB,uBAErB7B,MAAK,SAAAC,GACJ,IACM6B,EADU7B,EAAI2B,QACCG,IAAI,iBAMzB,OALID,EACA7C,aAAamB,QAAQ,OAAQ0B,GAE7B7C,aAAa+C,WAAW,QAErB/B,EAAIC,WAUN+B,EAAgB,SAACC,GAC1B,OAAOC,EAAQ,GAAD,OAAId,EAAJ,kBAAsBa,EAAtB,eAeLE,EAAa,SAACF,GACvB,OAAOC,EAAQ,GAAD,OAAId,EAAJ,kBAAsBa,EAAtB,SAAsC,WAG3CG,EAAU,SAACH,GACpB,OAAOC,EAAQ,GAAD,OAAId,EAAJ,kBAAsBa,EAAtB,SAAsC,SAiB3CI,EAAa,WAAyC,IAAxCC,EAAuC,uDAAxB,EACtC,OAAOJ,EAAQ,GAAD,OAAId,EAAJ,uBAA2BkB,KAGhCC,EAAiB,SAACC,GAA0D,IAAxCF,EAAuC,uDAAxB,EAC5D,OAAOJ,EAAQ,GAAD,OAAId,EAAJ,qBAAyBoB,EAAzB,uBAAgDF,KAKrDG,EAAgB,WAA4C,IAA3CH,EAA0C,uDAA3B,EACzC,OAAOJ,EAAQ,GAAD,OAAId,EAAJ,0BAA8BkB,KAGnCI,EAAe,SAACF,GACzB,OAAON,EAAQ,GAAD,OAAId,EAAJ,qBAAyBoB,KAKrCN,EAAU,SAACS,GAAsG,IAAzFpB,EAAwF,uDAA1C,MAAOD,EAAmC,uDAAvB,KACvFsB,EAAuB,CACvBrB,UAGJqB,EAAQjB,QAAU,IAAIC,QAAQ,CAC1B,eAAgB,qBAGhBN,IACAsB,EAAQpB,KAAOC,KAAKC,UAAUJ,IAGlC,IAAMO,EAAO7C,aAAaC,QAAQ,QAIlC,OAHI4C,GACAe,EAAQjB,QAAQkB,IAAI,gBAAiB,UAAYhB,GAE9C/B,MAAM6C,EAAKC,GAAS7C,MAAK,SAAAC,GAC5B,IAAIA,EAAI8C,GAAI,MAAMxC,QAClB,OAAON,EAAI+C,UACZhD,MAAK,SAAAgD,GACJ,OAAoB,IAAhBA,EAAKnD,OAAqB,GACvB6B,KAAKuB,MAAMD,OCzJbE,EAAgB7D,YACzB,sBADyC,uCAEzC,WAAOoD,EAAqCnD,GAA5C,qBAAAC,EAAA,sDACID,EAASe,SAAS8C,GAAwBV,GAAY,OAElDW,GAAS,EACTC,EAAiB,GACjBC,EAAc,EALtB,IAAA/D,EAAA,kCAAAA,EAAA,sEAOoCkD,EAAWD,EAAeC,EAAUa,GAAehB,EAAWgB,GAPlG,QAOcC,EAPd,QAQsB1D,SAAWwD,EAAMG,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOH,EAAW,GAAGG,MAClEL,EAAMzE,KAAN,MAAAyE,EAAK,YAASE,IAEdH,GAAS,EAEbE,IAbR,qDAMUF,EANV,yGAeWC,GAfX,4CAFyC,yDAsBhCM,EAActE,YACvB,kBADuC,uCAEvC,WAAO6C,EAAiB5C,GAAxB,SAAAC,EAAA,gFDmFsBmE,EClFDxB,EDmFdC,EAAQ,GAAD,OAAId,EAAJ,kBAAsBqC,MCpFpC,iCDmFqB,IAACA,ICnFtB,OAFuC,yDAO9BE,EAAWvE,YACpB,aADoC,uCAEpC,WAAO6C,EAAiB5C,GAAxB,SAAAC,EAAA,sEACU8C,EAAQH,GADlB,OAEI5C,EAASe,SAASsD,EAAYzB,IAFlC,2CAFoC,yDAQ3B2B,EAAcxE,YACvB,gBADuC,uCAEvC,WAAO6C,EAAiB5C,GAAxB,SAAAC,EAAA,sEACU6C,EAAWF,GADrB,OAEI5C,EAASe,SAASsD,EAAYzB,IAFlC,2CAFuC,yDAQ9B4B,EAAgBzE,YACzB,eADyC,uCAEzC,WAAO6C,EAAiB5C,GAAxB,SAAAC,EAAA,sEDwDuBmE,ECvDFxB,EDwDdC,EAAQ,GAAD,OAAId,EAAJ,kBAAsBqC,GAAM,UCzD1C,OAEIpE,EAASe,SAAS0D,GAAW7B,IAFjC,iCDwDsB,IAACwB,ICxDvB,OAFyC,yDAQhCM,EAAgB3E,YACzB,aADyC,uCAEzC,WAAO4E,EAAiC3E,GAAxC,SAAAC,EAAA,sED4CuBkE,EC3CFQ,ED4Cd9B,EAAQ,GAAD,OAAId,EAAJ,UAAsB,OAAQ,CAAEoC,SC7C9C,OAIInE,EAASe,SAAS6C,EAAcgB,GAA2B5E,EAASG,cAJxE,iCD4CsB,IAACgE,IC5CvB,OAFyC,yDAUvCU,EAAa1D,YAAY,CAC3BC,KAAM,QACN5B,aAvE6B,CAC7BsF,YAAa,GACbC,qBAAsB,KACtBlF,OAAQ,QAqERwB,SAAU,CACNwC,wBADM,SACkB3D,EAAOoB,GAC3BpB,EAAM6E,qBAAuBzD,EAAOC,SAExCkD,WAJM,SAIKvE,EAAOoB,GACdpB,EAAM4E,YAAc5E,EAAM4E,YAAYE,QAAO,SAAAb,GAAI,OAAIA,EAAKC,KAAO9C,EAAOC,aAGhFC,cAAe,SAACC,GACZA,EACCC,QAAQkC,EAAcjC,SAAS,SAACzB,GAC7BA,EAAML,OAAS,UACfK,EAAM4E,YAAc,MACrBpD,QAAQkC,EAAchC,WAAW,SAAC1B,EAAOoB,GACxCpB,EAAML,OAAS,OACfK,EAAM4E,YAAcxD,EAAOC,WAC5BG,QAAQkC,EAAcqB,UAAU,SAAC/E,GAChCA,EAAML,OAAS,YAElB6B,QAAQ2C,EAAYzC,WAAW,SAAC1B,EAAOoB,GACpC,IAAM8C,EAAKlE,EAAM4E,YAAYI,WAAU,SAAAf,GAAI,OAAIA,EAAKC,KAAO9C,EAAOC,QAAQ6C,OAC/D,IAARA,IACClE,EAAM4E,YAAYV,GAAM9C,EAAOC,eAOhCsD,IAAf,Q,GAGgDA,EAAWhD,QAAnDgC,G,GAAAA,wBAAyBY,G,GAAAA,WAIpBU,GAAoB,SAACjF,GAAD,OAAsBA,EAAM6D,MAAMe,aACtDM,GAAoB,SAAClF,GAAD,OAAsBA,EAAM6D,MAAMlE,QACtD+E,GAA6B,SAAC1E,GAAD,OAAsBA,EAAM6D,MAAMgB,sBCrG/DM,GAAmBtF,YAC5B,2BAD4C,sBAE5C,kCAAAE,EAAA,sDAEQ6D,GAAS,EACTwB,EAAuB,GACvBtB,EAAc,EAJtB,IAAA/D,EAAA,kCAAAA,EAAA,sEAMiCmD,EAAcY,GAN/C,QAMcC,EANd,QAQsB1D,SAAW+E,EAASpB,MAAK,SAAAqB,GAAO,OAAIA,EAAQpC,WAAac,EAAW,GAAGd,YACjFmC,EAAShG,KAAT,MAAAgG,EAAQ,YAASrB,IAEjBH,GAAS,EAEbE,IAbR,qDAKUF,EALV,yGAeWwB,GAfX,4CAmBSE,GAAsBzF,YAC/B,uBAD+C,sBAE/C,4BAAAE,EAAA,sEFsDO4C,EAAQ,GAAD,OAAId,EAAJ,aEtDd,UACU0D,EADV,QAEeA,EA+BUC,MAjCzB,yCAGe,MAHf,gCAKeD,GALf,4CAUSE,GAAgB5F,YACzB,wBADyC,uCAEzC,WAAO6F,EAAmC5F,GAA1C,eAAAC,EAAA,sEF6CwBwF,EE5CUG,EF6C3B/C,EAAQ,GAAD,OAAId,EAAJ,YAAwB,QAAS,CAAE0D,YE9CjD,YAEO,UADG9E,EADV,+BAGcM,MAAM,4BAHpB,cAKQjB,EAASe,SAAS6C,EAAcgB,GAA2B5E,EAASG,cAL5E,kBAMeQ,GANf,iCF6CuB,IAAC8E,IE7CxB,OAFyC,yDAahCI,GAAS9F,YAClB,kBADkC,uCAElC,WAAO+F,EAAK9F,GAAZ,SAAAC,EAAA,sDACIN,aAAa+C,WAAW,QACxB1C,EAASe,SAASgF,MAClB/F,EAASe,SAAS6C,KAHtB,2CAFkC,yDAatC,IAAMoC,GAAe7E,YAAY,CAC7BC,KAAM,UACN5B,aApE+B,CAC/BiG,QAAS,KACTQ,YAAa,GACbC,oBAAqB,OACrBC,mBAAoB,QAiEpB9E,SAAU,CACN0E,oBADM,SACc7F,GAChBA,EAAMuF,QAAU,MAGpBW,wBALM,SAKkBlG,GACpBA,EAAMiG,mBAAqB,SAGnC3E,cAAe,SAACC,GACZA,EAECC,QAAQ2D,GAAiB1D,SAAS,SAACzB,GAChCA,EAAMgG,oBAAsB,aAC7BxE,QAAQ2D,GAAiBzD,WAAW,SAAC1B,EAAOoB,GAC3CpB,EAAMgG,oBAAsB,OAC5BhG,EAAM+F,YAAc3E,EAAOC,WAC5BG,QAAQ2D,GAAiBJ,UAAU,SAAC/E,GACnCA,EAAMgG,oBAAsB,SAC5BhG,EAAM+F,YAAc,MAGvBvE,QAAQ8D,GAAoB7D,SAAS,SAACzB,GACnCA,EAAMiG,mBAAqB,aAC5BzE,QAAQ8D,GAAoB5D,WAAW,SAAC1B,EAAOoB,GAC9CpB,EAAMiG,mBAAqB,OAC3BjG,EAAMuF,QAAUnE,EAAOC,WACxBG,QAAQ8D,GAAoBP,UAAU,SAAC/E,GACtCA,EAAMiG,mBAAqB,SAC3BjG,EAAMuF,QAAU,KAChB9F,aAAa+C,WAAW,WAE3BhB,QAAQiE,GAAc/D,WAAW,SAAC1B,EAAOoB,GACtCpB,EAAMuF,QAAUnE,EAAOC,cAMpByE,MAAf,Q,GAGgEA,GAAanE,QAA9DkE,G,GAAAA,oBAGFM,I,GAHuBD,wBAGN,SAAClG,GAAD,OAAsBA,EAAMqF,QAAQU,cAErDK,GAAgB,SAACpG,GAAD,OAAsBA,EAAMqF,QAAQE,SAEpDc,GAAmB,SAACrG,GAAD,QAAwBA,EAAMqF,QAAQE,SACzDe,GAAoB,SAACtG,GAAD,MAA2D,YAArCA,EAAMqF,QAAQY,oBC1HxDM,GAAiB,kBAAMC,eACvBC,GAAkDC,IAKlDC,GAAmB,WAC5B,IAAMC,EAAWH,GAAeJ,IAC1BQ,EAAYJ,GAAeH,IAC3BxH,EAAUC,cAEhB,OAAO,SAAC+H,GACAD,IACAD,EACI,OAAJE,QAAI,IAAJA,OAEAhI,EAAQM,KAAK,aAwBZ2H,GAAkB,WAC3B,IAAMxH,EAAUkH,GAAevG,GACzBV,EAAOiH,GAAenG,GAuB5B,OArBW,SAAL0G,IAAmM,IAA7LrG,EAA4L,uDAArJ,8BAA+BsG,EAAsH,uDAAhF,GAAIC,EAA4E,uDAA5D,EAAGC,EAAyD,4DAAtBC,EAC9K,GAAIC,GAAyB1G,GAAM,OAAOqG,EAAGrG,EAAIA,IAAKA,EAAIsG,SAAUtG,EAAIuG,MAAOvG,EAAIwG,cACnF,IAAIG,EAAQ/H,EAAQoB,GACpB,IAAK2G,EACD,OAAOH,GAAgBxG,EAG3B,IAAI4G,EAAQ5G,EAOZ,IAAK,IAAI6G,KALLD,EADAE,GAAgBH,GACRA,EAAMI,GAAkBlI,EAAM0H,KAAWI,EAAMK,MAE/CL,EAGQL,EAAU,CAC1B,IAAIW,EAAcX,EAASO,GAC3BD,EAAQA,EAAMM,WAAN,WAAqBL,EAArB,KAAiCI,GAE7C,OAAOL,IAMTG,GAAoB,SAAClI,EAAc0H,GAKrC,MAJ0F,CACtF,GAAMY,IACN,GAAMC,KAEKvI,GAAM0H,IAGZG,GAA2B,SAAC1G,GACrC,YAAkCyG,IAA1BzG,EAAeN,QAGdoH,GAAkB,SAACH,GAC5B,YAAoCF,IAA5BE,EAAiBjH,Q,oBCrFhB2H,GAAa,WACtB,IAAMhB,EAAKD,KAEX,OACI,yBAAQtI,UAAWQ,KAAOgJ,OAA1B,UACI,sBAAKxJ,UAAWQ,KAAOiJ,UAAvB,UACI,cAAC,GAAD,CAAY1E,KAAMwD,EAAG,kBACrB,cAAC,GAAD,CAAYxD,KAAMwD,EAAG,iBACrB,cAAC,GAAD,CAAYxD,KAAMwD,EAAG,oBACrB,cAAC,GAAD,CAAYxD,KAAMwD,EAAG,kBACrB,cAAC,GAAD,CAAYxD,KAAMwD,EAAG,sBACrB,cAAC,GAAD,CAAYxD,KAAMwD,EAAG,wBAEzB,qBAAKvI,UAAWQ,KAAOiJ,UAAvB,SACI,cAAC,GAAD,CAAY1E,KAAMwD,EAAG,mBAAoB,CAACmB,KAhBrC,MAgBwDC,qBAMvEC,GAAiC,SAAC,GAAY,IAAX7E,EAAU,EAAVA,KACrC,OAAO,qBAAK/E,UAAWQ,KAAOqJ,WAAvB,SAAoC9E,K,yCCXlC+E,GAA+B,SAAC,GAA0F,IAAD,IAAxFnF,EAAwF,EAAxFA,IAAwF,IAAnFoF,YAAmF,MAA5E,MAA4E,MAArEC,cAAqE,SAArDC,EAAqD,EAArDA,UAAWlK,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,UAAWG,EAA2B,EAA3BA,QAAYC,EAAe,8EAClIuE,EAAMA,GAHU,yBAIhBsF,EAAYA,KAAelK,KAAQI,EACnC,IAAME,EAAUC,cAChB,OACI,6CAAKN,UAAWO,KAAU,mBACrBC,KAAOV,QAAS,GADK,cAErBU,KAAOyJ,UAAYA,GAFE,IAGtBC,MAAO,CAACC,MAAOJ,GAAO5J,QAAS,SAAAO,GACxB,OAAPP,QAAO,IAAPA,KAAUO,GACNX,GAAIM,EAAQM,KAAKZ,KAClBK,GANP,aAOI,qBAAKJ,UAAWO,KAAU,mBACrBC,KAAOwJ,QAAS,GADK,cAErBxJ,KAAO4J,QAAUJ,GAFI,GAGvBhK,GAHH,SAII,qBAAKqK,IAAK1F,EAAK3E,UAAWQ,KAAO8J,OAAQC,IAAI,iB,oBCfhDC,GAA+B,SAAC,GAAoD,IAAD,IAAlDC,YAAkD,aAApC7D,eAAoC,aAAnBvD,aAAmB,SACtFjB,EAAW0F,KACXS,EAAKD,KAELoC,EAAa1C,GAAeJ,IAC5Bd,EAAUkB,GAAeL,IACzBgD,EAAW3C,GAAenG,GAE1B+I,EAAkBlJ,OAAOmJ,QAAQjK,GAAiBkK,KAAI,yCAAmB,CAACjC,MAApB,KAAgCkC,MAAhC,KAA8C/K,UAAWQ,KAAOwK,WAE5H,OACI,qCACA,yBAAQhL,UAAWQ,KAAOyK,OAA1B,UACI,cAAC,IAAD,CAAMlL,GAAG,IAAIC,UAAWQ,KAAO0K,KAA/B,yBACA,qBAAKlL,UAAWQ,KAAO2K,YACtBV,GAAQ,cAAC,EAAD,CAAQ7K,MAAM,QAAQI,UAAWQ,KAAOC,OAAQV,GAAG,IAAnD,SAAwDwI,EAAG,iBACpE,cAAC,KAAD,CACI3D,QAASgG,EACT/B,MAAOjI,EAAgB+J,GACvBS,SAAU,SAAAJ,GAAM,OAAI5I,EAASjB,EAAY6J,EAAOnC,SAChD7I,UAAWQ,KAAO6K,SAClBC,iBAAkB9K,KAAO+K,QACzBC,qBAAsBhL,KAAOiL,YAC7BC,cAAelL,KAAOmL,OAEzBtI,IAAUqH,GAAc,cAAC,EAAD,CAAQ9K,MAAM,QAAQI,UAAWQ,KAAOC,OAAQV,GAAG,SAAnD,SAA6DwI,EAAG,mBACxF3B,GAAW8D,GAAc,cAAC,GAAD,CAAQ/F,IAAKmC,EAAQ8E,kBAAmB7B,KAAK,QAAQhK,GAAG,gBAEtF,qBAAKC,UAAWQ,KAAOqL,eC5BlBC,GAAmB1K,YAC5B,yBAD4C,uCAE5C,WAAO6C,EAAiB5C,GAAxB,SAAAC,EAAA,6DACID,EAASe,SAAS2J,GAAiB9H,IADvC,kBAEWD,EAAcC,IAFzB,2CAF4C,yDAQ1C+H,GAAgBxJ,YAAY,CAC9BC,KAAM,WACN5B,aAhBgC,CAChCoL,eAAgB,GAChBC,eAAgB,EAChBhL,OAAQ,QAcRwB,SAAU,CACNqJ,iBADM,SACWxK,EAAOoB,GACpBpB,EAAM2K,cAAgBvJ,EAAOC,UAGrCC,cAAe,SAACC,GACZA,EAAQC,QAAQ+I,GAAiB9I,SAAS,SAACzB,GACvCA,EAAML,OAAS,UACfK,EAAM0K,eAAiB,MACxBlJ,QAAQ+I,GAAiB7I,WAAW,SAAC1B,EAAOoB,GAC3CpB,EAAML,OAAS,OACfK,EAAM0K,eAAiBtJ,EAAOC,WAC/BG,QAAQ+I,GAAiBxF,UAAU,SAAC/E,GACnCA,EAAML,OAAS,eAMZ8K,MAAf,QAGQD,GAAqBC,GAAc9I,QAAnC6I,iBC1BOI,GAlBDC,YAAe,CACzBC,QAAS,CACLjH,MAAOkH,EACP1F,QAAS2F,GACTC,SAAUC,GACVtJ,aAAcuJ,KCPTC,GAAqB,SAACC,EAA4BC,GACnC,kBAAdD,IAAwBA,EAAY,IAAIE,KAAKF,EAAU7D,QAAQ,KAAM,MAAMgE,UAAU,KAC/F,IAAMC,EAAOC,KAAKC,IAAIL,EAAMD,GAE5B,GAAII,EAAO,GACP,MAAO,CACH9K,IAAK,YAIb,GAAI8K,EAAO,KAAM,CACb,IAAMG,EAAUF,KAAKG,MAAMJ,EAAO,IAElC,MAAO,CACH9K,IAAK,eACLuG,MAAO0E,EACP3E,SAAU,CACNC,MAAO0E,EAAQxD,aAK3B,GAAIqD,EAAO,MAAO,CACd,IAAMK,EAAQJ,KAAKG,MAAMJ,EAAO,MAChC,MAAO,CACH9K,IAAK,aACLuG,MAAO4E,EACP7E,SAAU,CACNC,MAAO4E,EAAM1D,aAMzB,MAAO,CACHzH,IAAK,YACLsG,SAAU,CACN8E,KAJG,IAAIR,KAAe,IAAVF,GAAgBW,mBAAmB1L,EAAmBsK,GAAM3K,YAAa,CAACkI,KAAM,UAAW8D,MAAO,OAAQC,IAAK,eCpC1HC,GAAiB,SAAC3I,GAC3B,IAAM4I,EAAM5I,EAAK6I,MAAM,MAAM9C,KAAI,SAAC+C,EAAGC,GAAJ,MAAU,CAACD,EAAG,sBAASC,OAAOC,KAAK,GAEpE,OADAJ,EAAIK,MACGL,G,oBCWEM,GAAsB,SAAC,GAAY,IAAXzI,EAAU,EAAVA,KAC3B+C,EAAKD,KACLlG,EAAW0F,KAEXhB,EAAUkB,GAAeL,IACzBuG,EAAchG,KAEpB,OACI,sBAAKlI,UAAWQ,KAAOgF,KAAvB,UACI,sBAAKxF,UAAWQ,KAAOyK,OAAvB,UACI,cAAC,GAAD,CAAQtG,IAAKa,EAAK2I,OAAOvC,kBAAmB7B,KAAM,QAAShK,GAAE,mBAAcyF,EAAK2I,OAAO3J,YACvF,sBAAKxE,UAAWQ,KAAO4N,KAAvB,UACI,qBAAKpO,UAAWQ,KAAOiC,KAAvB,mBACS+C,EAAK2I,OAAOE,YAAc,GADnC,YACyC7I,EAAK2I,OAAOG,WAAa,MAElE,qBAAKtO,UAAWQ,KAAO+N,KAAvB,SACKhG,EAAGoE,GAAmBnH,EAAKgJ,WAAY1B,KAAKD,aAGrD,qBAAK7M,UAAWQ,KAAOiO,KAAOtO,QAAS,YACzB,OAAP2G,QAAO,IAAPA,OAAA,EAAAA,EAAStC,YAAagB,EAAK2I,OAAO3J,UACjCpC,EAASyD,EAAcL,EAAKC,MAFpC,SAKI,mBAAGzF,UAAU,wBAGrB,sBAAKA,UAAWQ,KAAOkO,QAAvB,YACOlJ,EAAKmJ,OAAO/M,QAAU,qBAAK5B,UAAWQ,KAAOV,OAAvB,SACrB,qBAAKuK,IAAK7E,EAAKmJ,OAAO,GAAGhK,IAAK3E,UAAWQ,KAAOoO,MAAOrE,IAAI,mBAE9D/E,EAAKqJ,aAAe,qBAAK7O,UAAWQ,KAAOqO,YAAvB,SAAqCnB,GAAelI,EAAKqJ,kBAElF,sBAAK7O,UAAWQ,KAAOgJ,OAAvB,UACI,cAAC,GAAD,CAAUsF,KAAK,OAAO/J,KAAMS,EAAKuJ,YAAYpF,WAAYqF,MAAOxJ,EAAKyJ,SAAU9O,QAAS,kBAAM+N,GAAY,kBAAM9L,EAASoD,EAAKyJ,SAAWrJ,EAAYJ,EAAKC,IAAME,EAASH,EAAKC,WAC9K,cAAC,GAAD,CAAUqJ,KAAK,WAAW/J,KAAK,MAC/B,qBAAK/E,UAAWQ,KAAO2K,YACvB,sBAAKnL,UAAWQ,KAAO0O,MAAvB,UAA+B3G,EAAG,cAAlC,IAAiD,mBAAGvI,UAAU,8BAaxEmP,GAAmC,SAAC,GAA0C,IAAD,EAAxCL,EAAwC,EAAxCA,KAAM/J,EAAkC,EAAlCA,KAAkC,IAA5BiK,aAA4B,SAAb7O,EAAa,EAAbA,QAClE,OACI,uBAAMH,UAAWQ,KAAO4O,SAAUjP,QAASA,EAA3C,UACI,mBAAGH,UAAWO,KAAU,GACpB,MAAQ,GADY,6BAEXuO,IAAS,GAFE,cAGnBtO,KAAOwO,MAAQA,GAHI,MAMxB,sBAAMhP,UAAWQ,KAAOuE,KAAxB,SAA+BA,Q,oBC/D9BsK,GAA2B,SAAC,GAAkB,IAAhB7K,EAAe,EAAfA,SACjCpC,EAAW0F,KACXS,EAAKD,KAEXgH,qBAAU,WACNlN,EAAS6C,EAAcT,MACxB,CAACA,EAAUpC,IAEd,IAGIsM,EAHEtJ,EAAQ6C,YAAYzB,IACpBtF,EAAS+G,YAAYxB,IAgB3B,OAVQiI,EAFO,SAAXxN,EACGkE,EAAMxD,OACKwD,EAAM0F,KAAI,SAAAtF,GAAI,OAAI,cAAC,GAAD,CAAoBA,KAAMA,GAAfA,EAAKC,OAElC,qBAAKzF,UAAWQ,KAAOuE,KAAvB,SAA8BwD,EAAG,mBAE7B,YAAXrH,EACG,qBAAKlB,UAAWQ,KAAOuE,KAAvB,SAA8BwD,EAAG,qBAEjC,qBAAKvI,UAAWQ,KAAOuE,KAAvB,SAA8BwD,EAAG,2BAI3C,qBAAKvI,UAAWQ,KAAO+O,KAAvB,SACI,qBAAKvP,UAAWQ,KAAOgP,SAAvB,SACKd,O,yCClCJe,GAAU,WACnB,IAAMC,EAAOC,KAAuB,CAChCC,aAAc,CACVC,iBAAkB,EAClBC,iBAAkB,CAAC,YAAa,YAAa,cAC7CC,YAAa,WAQrB,OAJAL,EAAKM,IAAIC,KAAO,CACZC,aAAc9M,IAGXsM,GAGES,GAAU,SAACT,EAAiBU,GACrC,OAAOV,EAAKS,QAAQ,CAChB1N,KAAM2N,EAAK3N,KACX4N,KAAMD,EAAKC,KACX/M,KAAM8M,EACNE,OAAQ,WAkBHC,GAAoB,SAACC,GAC9B,OAAOA,EAAM1F,KAAI,SAAAsF,GACb,IADqB,EACAA,EAAKK,KAAavO,IACb0L,MAAM,KAFX,mBAEd8C,EAFc,KAYrB,MATuB,CACnBjL,GAJiB,KAKjBiL,QAASA,EACTC,SAAU,CACNC,SAAUR,EAAKK,KAAKhO,KACpBsH,KAAMqG,EAAK9M,KAAKyG,KAChB8G,UAAWT,EAAK9M,KAAK+M,W,oBCvCxBS,GAAkC,SAAC,GAA+D,IAA7DpB,EAA4D,EAA5DA,KAA4D,IAAtDqB,cAAsD,MAA7C,GAA6C,EAAzChM,EAAyC,EAAzCA,KAAMiM,EAAmC,EAAnCA,kBAAmBhR,EAAgB,EAAhBA,UACpFiR,EAAWC,iBAAyB,MADgE,EAEhFC,mBAAiB,IAF+D,mBAEnGX,EAFmG,KAE5FY,EAF4F,KAI1G9B,qBAAU,WAENI,EAAK2B,WAAWC,SAAQ,SAAAlB,GAAI,OAAIV,EAAK6B,WAAWnB,EAAK3K,OACrD+K,EAAMc,SAAQ,SAAAlB,GAAI,OAAID,GAAQT,EAAMU,QACrC,CAACI,EAAOd,IAEX,IAAM8B,EAAe,SAAC9Q,GAClBA,EAAG+Q,iBACH/Q,EAAGgR,mBAGP,OACI,sBAAK1R,UAAWO,IAAW,eACtBC,KAAO4P,MAAO,GAChBpQ,GACCG,QAAS,kCAAM8Q,EAASU,eAAf,aAAM,EAAkBC,SACjCC,WAAYL,EACZM,YAAaN,EACbO,YAAaP,EACbQ,OAAQ,SAAAtR,GACJA,EAAG+Q,iBACHL,EAASa,MAAMC,KAAKxR,EAAGyR,aAAa3B,SAT5C,UAYI,qBAAKxQ,UAAWQ,KAAO4R,QAAvB,SACK5B,EAAM5O,OACH4O,EAAM1F,KAAI,SAAAsF,GAAI,OAAI,qBAAK/F,IAAKgI,IAAIC,gBAAgBlC,GAAO7F,IAAI,eACzDyG,EACE,qBAAK3G,IAAK2G,EAAmBzG,IAAI,YAC3BxF,IAElB,uBAAOsL,KAAK,OAAOU,OAAQA,EAAOwB,KAAK,KAAMC,IAAKvB,EAAUwB,QAAM,EAACrH,SAAU,SAAA1K,GAAO,IAAD,GAC/E,UAAIA,EAAGgS,OAAOlC,aAAd,aAAI,EAAiB5O,SACjBwP,EAASa,MAAMC,KAAKxR,EAAGgS,OAAOlC,e,oBCzCrCmC,GAA6B,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,eAAgB7S,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SAC3E,OACI,cAAC,IAAD,CAAYD,UAAWO,IAAWC,KAAOsS,MAAO9S,GAAY+S,iBAAkBvS,KAAOwS,QAASJ,OAAQA,EAAQC,eAAgBA,EAA9H,SACK5S,K,+BCFAgT,GAAmC,SAAC,GAAqD,IAApDlI,EAAmD,EAAnDA,MAAOU,EAA4C,EAA5CA,YAAazL,EAA+B,EAA/BA,UAAckT,EAAiB,mDACjG,OACI,wBAAOlT,UAAWO,IAAW,eACxBC,KAAO2S,UAAW,GAChBnT,GAFP,UAIK+K,EACD,cAAC,KAAD,aAAkBU,YAAaA,GAAiByH,Q,oBCJtDxD,GAAOD,KAEA2D,GAAiC,SAAC,GAAwC,IAAD,IAArCC,cAAqC,SAArBR,EAAqB,EAArBA,eACvDtK,EAAKD,KACLlG,EAAW0F,KAFiE,EAI5CqJ,mBAAS,IAJmC,mBAI3EtC,EAJ2E,KAI9DyE,EAJ8D,KAYlF,OANAhE,qBAAU,WACD+D,GACDC,EAAe,MAEpB,CAACD,IAGA,eAAC,GAAD,CAAOrT,UAAWQ,KAAO+S,QAASX,OAAQS,EAAQR,eAAgBA,EAAlE,UACI,cAAC,GAAD,CAAY9N,KAAMwD,EAAG,iBAAkBvI,UAAWQ,KAAOgT,MAAO9D,KAAMA,KACtE,cAAC,GAAD,CACI1P,UAAWQ,KAAOqO,YAClB4E,QAAS,EACThI,YAAalD,EAAG,oCAChBwC,MAAOxC,EAAG,wBACV6C,SAAU,SAAA1K,GAAE,OAAI4S,EAAe5S,EAAGgT,cAAc7K,QAChDA,MAAOgG,IAEX,sBAAK7O,UAAWQ,KAAOmT,QAAvB,UACI,cAAC,EAAD,CAAQ9T,aAAW,EAACM,QAAS0S,EAA7B,SAA8CtK,EAAG,oBACjD,cAAC,EAAD,CAAQ3I,MAAM,OAAOO,QAAO,uCAAE,WAAMO,GAAN,iBAAAY,EAAA,sEACLoO,GAAKkE,SADA,QACpBC,EADoB,QAGfC,WAAWlS,QACZmS,EAASxD,GAAkBsD,EAAOC,YACxC1R,EAAS2D,EAAc,CACnB8I,cACAmF,kBAAmBD,EAAOjJ,KAAI,SAAA8D,GAAK,MAAK,CAAEA,eAEhC,OAAdiE,QAAc,IAAdA,KAAiBnS,IACmB,IAA7BmT,EAAOC,WAAWlS,QAAyC,IAAzBiS,EAAOI,OAAOrS,QACnDiN,IACAzM,EAAS2D,EAAc,CACnB8I,cACAmF,kBAAmB,MAET,OAAdnB,QAAc,IAAdA,KAAiBnS,IAhBC,2CAAF,sDAA5B,SAmBI6H,EAAG,0B,qBChDV2L,GAA6B,SAAC,GAAsE,IAArEnJ,EAAoE,EAApEA,MAAOU,EAA6D,EAA7DA,YAA8BzL,GAA+B,EAAhD8O,KAAgD,EAA1CqF,UAA0C,EAA/BnU,WAAckT,EAAiB,sEAC5G,OACI,wBAAOlT,UAAWO,IAAW,eACxBC,KAAOgT,OAAQ,GACbxT,GAFP,UAGK+K,EACD,mCAAOU,YAAaA,GAAiByH,Q,oBCD3CxD,GAAOD,KAEA2E,GAAyC,SAAC,GAAwC,IAAD,IAArCf,cAAqC,SAArBR,EAAqB,EAArBA,eAC/DtK,EAAKD,KACLlG,EAAW0F,KAEXhB,EAAUkB,GAAeL,IAJ2D,EAMxDwJ,mBAAQ,OAACrK,QAAD,IAACA,OAAD,EAACA,EAASuH,YANsC,mBAMnFgG,EANmF,KAMxEC,EANwE,OAOtDnD,mBAAQ,OAACrK,QAAD,IAACA,OAAD,EAACA,EAASwH,WAPoC,mBAOnFiG,EAPmF,KAOvEC,EAPuE,OAQ1DrD,mBAAQ,OAACrK,QAAD,IAACA,OAAD,EAACA,EAAS2N,WARwC,mBAQnFC,EARmF,KAQzEC,EARyE,OASpDxD,mBAAQ,OAACrK,QAAD,IAACA,OAAD,EAACA,EAAS+H,aATkC,mBASnFA,EATmF,KAStEyE,EATsE,KAW1F,OAAKxM,EASD,eAAC,GAAD,CAAO9G,UAAWQ,KAAOoU,YAAahC,OAAQS,EAAQR,eAAgBA,EAAtE,UACI,sBAAK7S,UAAWQ,KAAOyK,OAAvB,UACI,qBAAKjL,UAAWQ,KAAOqU,MAAvB,SACKtM,EAAG,wBAER,qBAAKvI,UAAWQ,KAAO0G,OAAQ/G,QAAS,SAAAO,GACpC0B,EAAS8E,MACK,OAAd2L,QAAc,IAAdA,KAAiBnS,IAFrB,SAIK6H,EAAG,uBAGZ,sBAAKvI,UAAWQ,KAAOsU,SAAvB,UACI,sBAAK9U,UAAWQ,KAAOuU,cAAvB,UACI,cAAC,GAAD,CAAY/U,UAAWQ,KAAO8J,OAAQoF,KAAMA,GAAMsB,kBAAmBlK,EAAQ8E,oBAC7E,qBAAK5L,UAAWQ,KAAOwU,WAAvB,SAAoCzM,EAAG,2BAE3C,sBAAKvI,UAAWQ,KAAOiC,KAAvB,UACI,cAAC,GAAD,CACIzC,UAAWQ,KAAOgT,MAClBzI,MAAOxC,EAAG,2BACVkD,YAAalD,EAAG,uCAChBM,MAAOwL,EACPjJ,SAAU,SAAA1K,GAAE,OAAI4T,EAAa5T,EAAGgT,cAAc7K,UAElD,cAAC,GAAD,CACI7I,UAAWQ,KAAOgT,MAClBzI,MAAOxC,EAAG,4BACVkD,YAAalD,EAAG,wCAChBM,MAAO0L,EACPnJ,SAAU,SAAA1K,GAAE,OAAI8T,EAAc9T,EAAGgT,cAAc7K,gBAI3D,cAAC,GAAD,CACI7I,UAAWQ,KAAOgT,MAClBzI,MAAOxC,EAAG,0BACVkD,YAAalD,EAAG,sCAChBM,MAAO6L,EACPtJ,SAAU,SAAA1K,GAAE,OAAIiU,EAAYjU,EAAGgT,cAAc7K,UAEjD,cAAC,GAAD,CACI7I,UAAWO,IAAWC,KAAOgT,MAAOhT,KAAOqO,aAC3C9D,MAAOxC,EAAG,4BACVkD,YAAalD,EAAG,wCAChBM,MAAOgG,EACPzD,SAAU,SAAA1K,GAAE,OAAI4S,EAAe5S,EAAGgT,cAAc7K,UAGpD,sBAAK7I,UAAWQ,KAAOmT,QAAvB,UACI,cAAC,EAAD,CAAQ9T,aAAW,EAACM,QAAS0S,EAA7B,SAA8CtK,EAAG,oBACjD,cAAC,EAAD,CAAQ3I,MAAM,OAAOO,QAAO,uCAAE,WAAMO,GAAN,iBAAAY,EAAA,0DACpB0E,EADoB,eACmBc,IACtCuH,WAAagG,EACpBrO,EAAOsI,UAAYiG,EACnBvO,EAAOyO,UAAYC,EACnB1O,EAAO6I,YAAcA,GAElBa,GAAK2B,WAAWzP,OAPO,iCAQD8N,GAAKkE,SARJ,QAQhBC,EARgB,QASZC,WAAWlS,SACjBoE,EAAOiP,cAAgB1E,GAAkBsD,EAAOC,YAAY,IAV1C,QAgB1B1R,EAAS4E,GAAchB,IACT,OAAd6M,QAAc,IAAdA,KAAiBnS,GAjBS,4CAAF,sDAA5B,SAkBI6H,EAAG,wBA5EX,cAAC,GAAD,CAAOvI,UAAWQ,KAAOoU,YAAahC,OAAQS,EAAQR,eAAgBA,EAAtE,4B,mBChBCqC,GAAoC,SAAC,GAAgD,IAA/CtO,EAA8C,EAA9CA,QAA8C,IAArCuO,WAAqC,aAAxBC,kBAAwB,SACvF7M,EAAKD,KACL4F,EAAchG,KAFyE,EAIjDiJ,oBAAS,GAJwC,mBAItFkE,EAJsF,KAIrEC,EAJqE,OAKzCnE,oBAAS,GALgC,mBAKtFoE,EALsF,KAKjEC,EALiE,KAOvFC,EAAU,UAAM7O,EAAQyH,YAAc,GAA5B,YAAkCzH,EAAQ0H,WAAa,IACvE,OAAG8G,EAEC,sBAAKpV,UAAWO,IAAW,CAACC,KAAOkV,YAAalV,KAAO4U,aAAvD,UACI,cAAC,GAAD,CAAQzQ,IAAKiC,EAAQgF,kBAAmB5B,QAAM,EAACD,KAAK,WACpD,sBAAK/J,UAAWQ,KAAO4N,KAAvB,UACI,qBAAKpO,UAAWQ,KAAOiC,KAAvB,SACKgT,IAEL,qBAAKzV,UAAWQ,KAAOmV,IAAvB,SACK/O,EAAQ6N,WAAa,KAE1B,qBAAKzU,UAAWQ,KAAOqO,YAAvB,SACKnB,GAAe9G,EAAQiI,aAAe,SAG/C,qBAAK7O,UAAWQ,KAAO2K,YACvB,sBAAKnL,UAAWQ,KAAOoV,MAAvB,UACI,sBAAK5V,UAAWQ,KAAOqV,OAAvB,UACI,sBAAK7V,UAAWQ,KAAOsV,UAAvB,UACI,qBAAK9V,UAAWQ,KAAOuV,OAAvB,SAAgCnP,EAAQkP,YACxC,qBAAK9V,UAAWQ,KAAOwV,UAAvB,SAAmCzN,EAAG,oBAAqB,GAAI3B,EAAQkP,gBAG3E,sBAAK9V,UAAWQ,KAAOyV,UAAvB,UACI,qBAAKjW,UAAWQ,KAAOuV,OAAvB,SAAgCnP,EAAQqP,YACxC,qBAAKjW,UAAWQ,KAAOwV,UAAvB,SAAmCzN,EAAG,6BAG7C4M,GAAO,sBAAKnV,UAAWQ,KAAO0V,cAAvB,UACJ,cAAC,EAAD,CAAQhW,cAAY,EAACL,aAAW,EAACM,QAAS,kBAAM+N,GAAY,kBAAMsH,GAAqB,OAAvF,SAAgGjN,EAAG,kBACnG,cAAC,EAAD,CAAQrI,cAAY,EAACN,MAAM,OAAOO,QAAS,kBAAM+N,GAAY,kBAAMoH,GAAiB,OAApF,SAA6F/M,EAAG,oBAGxG,cAAC,GAAD,CAAS8K,OAAQgC,EAAiBxC,eAAgB,kBAAMyC,GAAiB,MACzE,cAAC,GAAD,CAAajC,OAAQkC,EAAqB1C,eAAgB,kBAAM2C,GAAqB,SAMzF,sBAAKxV,UAAWQ,KAAOkV,YAAvB,UACI,sBAAK1V,UAAWQ,KAAO2V,IAAvB,UACI,sBAAKnW,UAAWQ,KAAOsV,UAAvB,UACI,qBAAK9V,UAAWQ,KAAOuV,OAAvB,SAAgCnP,EAAQkP,YACxC,qBAAK9V,UAAWQ,KAAOwV,UAAvB,SAAmCzN,EAAG,oBAAqB,GAAI3B,EAAQkP,gBAE3E,cAAC,GAAD,CAAQnR,IAAKiC,EAAQgF,kBAAmB5B,QAAM,EAACD,KAAK,QACpD,sBAAK/J,UAAWQ,KAAOyV,UAAvB,UACI,qBAAKjW,UAAWQ,KAAOuV,OAAvB,SAAgCnP,EAAQqP,YACxC,qBAAKjW,UAAWQ,KAAOwV,UAAvB,SAAmCzN,EAAG,6BAG9C,sBAAKvI,UAAWQ,KAAO4V,OAAvB,UACI,sBAAKpW,UAAWQ,KAAO4N,KAAvB,UACKqH,EADL,IACkB7O,EAAQ6N,UAAR,YAAyB7N,EAAQ6N,WAAa,IAAO,MAEvE,qBAAKzU,UAAWQ,KAAOqO,YAAvB,SACKnB,GAAe9G,EAAQiI,aAAe,MAE1CsG,GAAO,sBAAKnV,UAAWQ,KAAO0V,cAAvB,UACJ,cAAC,EAAD,CAAQhW,cAAY,EAACC,QAAS,kBAAM+N,GAAY,kBAAMsH,GAAqB,OAA3E,SAAoFjN,EAAG,kBACvF,cAAC,EAAD,CAAQrI,cAAY,EAACN,MAAM,OAAOO,QAAS,kBAAM+N,GAAY,kBAAMoH,GAAiB,OAApF,SAA6F/M,EAAG,oBAGxG,cAAC,GAAD,CAAS8K,OAAQgC,EAAiBxC,eAAgB,kBAAMyC,GAAiB,MACzE,cAAC,GAAD,CAAajC,OAAQkC,EAAqB1C,eAAgB,kBAAM2C,GAAqB,U,qBCpFpFa,GAAoB,WAE7B,IAAMjU,EAAW0F,KAEjBwH,qBAAU,WACNlN,EAASsE,QACV,CAACtE,IAEJ,IAAMuE,EAAWqB,GAAeN,IAEhC,OACI,qBAAK1H,UAAWQ,KAAO8V,OAAvB,SACK3P,EAASN,QAAO,SAAAO,GAAO,OAAIA,EAAQgF,qBAAmBd,KAAI,SAAAlE,GAAO,OAAI,cAAC,GAAD,CAE1CjC,IAAKiC,EAAQgF,kBACb7B,KAAM,MACNhK,GAAE,mBAAc6G,EAAQpC,UACxBwF,QAAM,GAJDpD,EAAQpC,gB,oBCiBtC+R,GAxBE,WACb,IAAMhO,EAAKD,KAELoC,EAAa1C,GAAeJ,IAC5Bd,EAAUkB,GAAeL,IAC/B,OACI,sBAAK3H,UAAWQ,KAAOiK,KAAvB,UACI,cAAC,GAAD,CAAQ7D,SAAO,EAACvD,OAAK,IACrB,sBAAKrD,UAAWQ,KAAOkO,QAAvB,UACI,sBAAK1O,UAAWQ,KAAOgW,KAAvB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,OAEJ,qBAAKxW,UAAWQ,KAAOoV,MAAvB,SACI,sBAAK5V,UAAWQ,KAAOiW,OAAvB,UACM/L,EAAa,cAAC,GAAD,CAAa9D,QAASE,EAASqO,KAAG,IAAI,cAAC,EAAD,CAAQvV,MAAM,QAAQG,GAAG,SAAzB,SAAmCwI,EAAG,mBAC3F,cAAC,GAAD,gB,kBCxBXmO,GAAa,kBAAMC,OAAOC,YAFV,MAMhBC,GAAY,iCAAiCC,KAAKC,UAAUC,W,oBCiHnEC,GAAsC,SAAC,GAAsB,IAAD,IAApBC,cAAoB,SACxD3O,EAAKD,KACX,OACI,cAAC,EAAD,CAAQtI,UAAWQ,KAAOC,OAAQb,MAAM,OAAOyQ,KAAK,SAApD,SACK9H,EAAG2O,EAAS,uBAAyB,yBAK5CC,GAAuD,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,MAA6E,IAAtEC,KAAQC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,OAAaC,EAAiB,gCACzI,OACI,sBAAK1X,UAAWQ,KAAOgT,MAAvB,UACI,cAAC,GAAD,aAAOpI,SAAU,SAAAyC,GAAC,OAAI2J,EAAcJ,EAAM3U,KAAMoL,EAAE6F,cAAc7K,QAAQpG,KAAM2U,EAAM3U,KAAMoG,MAAO4O,EAAOL,EAAM3U,OAAWiV,IACxHJ,EAAQF,EAAM3U,OAAS8U,EAAOH,EAAM3U,OAAS,qBAAKzC,UAAWQ,KAAOuG,MAAvB,SAA+BwQ,EAAOH,EAAM3U,YAKvFkV,GAxHG,WACd,IAAMpP,EAAKD,KACLlG,EAAW0F,KAEX4C,EAAa1C,GAAeJ,IAJd,EAMQuJ,oBAAS,GANjB,mBAMb+F,EANa,KAMLU,EANK,KAQdC,EAASC,OAAaC,MAAM,CAC9BC,MAAOF,OACME,MAAMzP,EAAG,mCACT0P,SAAS1P,EAAG,8BACzB/D,SAAU0S,EAASY,OACNI,IAAI,EAAG3P,EAAG,8BAA+B,CAACE,MAAO,KAAM,IACvD0P,IAAI,GAAI5P,EAAG,8BAA+B,CAACE,MAAO,MAAO,KACzD2P,QAAQ,oBAAqB,iCAC7BtB,KAAK,UAAWvO,EAAG,oCAAoC,SAAAM,GACpD,OAAIA,GACG,IAAIwP,SAAQ,SAACC,EAASC,GACzB7T,EAAamE,GAAO9G,MAAK,SAACE,GACtBqW,GAAQ,MACTE,OAAM,WACLF,GAAQ,YAInBL,SAAS1P,EAAG,8BAA+BuP,OACxDW,SAAUX,OACGI,IAAI,EAAG3P,EAAG,8BAA+B,CAACE,MAAO,KAAM,IACvDwP,SAAS1P,EAAG,gCAG7B,OAAGmC,EACQ,cAAC,IAAD,CAAU3K,GAAG,MAIpB,sBAAKC,UAAWQ,KAAO6C,MAAvB,UACI,cAAC,GAAD,IACA,sBAAKrD,UAAWQ,KAAOkO,QAAvB,UACI,qBAAK1O,UAAWQ,KAAOkY,aAAvB,6BAGA,sBAAK1Y,UAAWQ,KAAOmY,SAAvB,UACI,qBAAK3Y,UAAWQ,KAAOqU,MAAvB,SAA+BtM,EAAG2O,EAAS,gBAAkB,iBAE7D,cAAC,KAAD,CACI0B,cAAe,CACXZ,MAAO,GACPxT,SAAU,GACViU,SAAU,IAEdI,SAAQ,uCAAE,WAAOpB,GAAP,SAAAnW,EAAA,sDACH4V,GxB1BD5T,EwB2BgB,CAACD,MAAOoU,EAAOO,MAAOS,SAAUhB,EAAOgB,SAAUjU,SAAUiT,EAAOjT,UxB1BrG1C,MAAM,GAAD,OAAIsB,EAAJ,mBAA+B,CACvCG,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,IAAIC,QAAQ,CACjB,eAAgB,uBAErB7B,MAAK,SAAAC,GACJ,IACM6B,EADU7B,EAAI2B,QACCG,IAAI,iBAMzB,OALID,EACA7C,aAAamB,QAAQ,OAAQ0B,GAE7B7C,aAAa+C,WAAW,QAErB/B,EAAIC,WwBakBF,MAAK,kBAAMK,EAASyE,SAEzBxD,EAAM,CAACA,MAAOoU,EAAOO,MAAOS,SAAUhB,EAAOgB,WACxC1W,MAAK,kBAAMK,EAASyE,SANvB,iCxBzBL,IAACvD,IwByBI,OAAF,sDASRwV,iBAAkBjB,EAftB,SAiBI,eAAC,KAAD,WACI,cAAC,KAAD,CACIpV,KAAK,QACL4N,KAAK,QACL0I,UAAW5B,GACXpM,MAAOxC,EAAG,2BACVkD,YAAalD,EAAG,mCAEnB2O,GAAU,cAAC,KAAD,CACPzU,KAAK,WACLsW,UAAW5B,GACXpM,MAAOxC,EAAG,8BACVkD,YAAalD,EAAG,sCAEpB,cAAC,KAAD,CACI9F,KAAK,WACLsW,UAAW5B,GACX9G,KAAK,WACLtF,MAAOxC,EAAG,8BACVkD,YAAalD,EAAG,sCAEpB,qBAAKvI,UAAWQ,KAAOwY,kBAEtBtC,MAAgB,cAAC,GAAD,CAAcQ,OAAQA,IACvC,sBAAKlX,UAAWQ,KAAOyY,OAAvB,UACK1Q,EAAG2O,EAAS,qBAAuB,oBACpC,sBAAMlX,UAAWQ,KAAO0Y,aAAc/Y,QAAS,kBAAMyX,GAAWV,IAAhE,SACK3O,EAAG2O,EAAS,cAAgB,uBAGnCR,MAAgB,cAAC,GAAD,CAAcQ,OAAQA,mB,oBCtGvDiC,GAAqC,SAAC,GAAgB,IAAf3U,EAAc,EAAdA,SAC1CpC,EAAW0F,KACXS,EAAKD,KAEXgH,qBAAU,WACNlN,EAAS6C,EAAcT,MACxB,CAACA,EAAUpC,IAEd,IAGIsM,EAHEtJ,EAAQ6C,YAAYzB,IACpBtF,EAAS+G,YAAYxB,IAe3B,OAVQiI,EAFO,SAAXxN,EACGkE,EAAMxD,OACKwD,EAAM0F,KAAI,SAAAtF,GAAI,OAAIA,EAAKmJ,UAAQZ,KAAK,GAAGjD,KAAI,SAAAsO,GAAK,OAAI,cAAC,GAAD,CAA4BzU,IAAKyU,EAAMzU,KAArByU,EAAM3T,OAE5E,qBAAKzF,UAAWQ,KAAOuE,KAAvB,SAA8BwD,EAAG,mBAGrCA,EADQ,YAAXrH,EACM,kBAEA,yBAIb,qBAAKlB,UAAWQ,KAAO6Y,UAAvB,SACK3K,KAKP4K,GAAiC,SAAC,GAAW,IAAV3U,EAAS,EAATA,IACrC,OAAO,qBAAK3E,UAAWQ,KAAOV,OAAQoK,MAAO,CAACqP,gBAAgB,OAAD,OAAS5U,EAAT,S,oBCQlD6U,GArCQ,WAAO,IACpBhV,EAAaiV,cAAbjV,SACAsC,EAAUkB,GAAeL,KvBgBN,WAAO,IAAD,EACKwJ,mBAAS,CACzChH,MAAOwM,OAAOC,WACd8C,OAAQ/C,OAAOgD,cAHY,mBACxBC,EADwB,KACZC,EADY,KAK/BvK,qBAAU,WACN,SAASwK,IACLD,EAAc,CACV1P,MAAOwM,OAAOC,WACd8C,OAAQ/C,OAAOgD,cAKvB,OAFAhD,OAAOoD,iBAAiB,SAAUD,GAClCA,IACO,kBAAMnD,OAAOqD,oBAAoB,SAAUF,MACnD,IuB9BHG,GAHyB,MAKK9I,mBAA0B,MAL/B,mBAKlBvK,EALkB,KAKTsT,EALS,OAMC/I,mBAAS,IANV,mBAMlBpK,EANkB,KAMXoT,EANW,KAgBzB,GARA7K,qBAAU,WACF9K,EACIoC,GAAWA,EAAQpC,WAAaA,GAAUE,EAAaF,GAAUzC,MAAK,SAAAE,GAAI,OAAIiY,EAAWjY,MAAOuW,OAAM,SAAA4B,GAAE,OAAID,EAAS,4BAEzHD,EAAWpT,KAEhB,CAACtC,EAAUsC,EAASF,KAElBpC,IAAaxD,aAAaC,QAAQ,QACnC,OAAO,cAAC,IAAD,CAAUlB,GAAG,WAGxB,IAAMoV,IAAQvO,IAAkB,OAAPE,QAAO,IAAPA,OAAA,EAAAA,EAAStC,YAAaoC,EAAQpC,SAEvD,OACI,sBAAKxE,UAAWQ,KAAO6Z,WAAvB,UACI,cAAC,GAAD,CAAQ5P,MAAI,EAAC7D,SAAUuO,IACvB,qBAAKnV,UAAWQ,KAAOkO,QAAvB,SACK3H,IAAiBH,EACd,qCACI,cAAC,GAAD,CAAaA,QAASA,EAASuO,IAAKA,EAAKC,WAAYsB,OACrD,cAAC,GAAD,CAAWlS,SAAUoC,EAAQpC,cAHT,gCCI7B8V,OAlCf,WACI,IxBI2BC,EwBJrBnY,EAAW0F,KACX/G,EAAOiH,GAAenG,GAS5B,OxBN2B0Y,EwBAZ,WACXnY,EAASjB,EAAYJ,IAElBC,aAAaC,QAAQ,SAASmB,EAASyE,OxBHKyI,oBAAUiL,EAAK,IwBO9D,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBAAlB,SACI,cAACC,GAAD,MAEJ,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAlB,SACI,cAACC,GAAD,MAEJ,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,UACI,cAAC,IAAD,CAAU1a,GAAG,c,OCxBb4a,QACW,cAA7BhE,OAAOiE,SAASC,UAEe,UAA7BlE,OAAOiE,SAASC,UAEhBlE,OAAOiE,SAASC,SAASC,MACvB,2DCSN,SAASC,KACL,IAAMC,EAAKnE,GAAYF,OAAOsE,eAAevB,OAAU/C,OAAOgD,YAC9DuB,SAASC,gBAAgBjR,MAAMkR,YAAY,UAA3C,UAAyDJ,EAAG,EAA5D,OAnBJK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUpP,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGR+O,SAASM,eAAe,QAG5B7I,IAAM8I,cAAc,QAGpBV,KACApE,OAAOoD,iBAAiB,UAAU,WAC9BgB,QDgHE,kBAAmBhE,WACrBA,UAAU2E,cAAcC,MACrB5Z,MAAK,SAAC6Z,GACLA,EAAaC,gBAEdrD,OAAM,SAACzR,GACN+U,QAAQ/U,MAAMA,EAAMgV,a,kBE7I5Btc,EAAOC,QAAU,CAAC,YAAc,iCAAiC,IAAM,yBAAyB,UAAY,+BAA+B,UAAY,+BAA+B,OAAS,4BAA4B,UAAY,+BAA+B,OAAS,4BAA4B,KAAO,0BAA0B,YAAc,iCAAiC,cAAgB,mCAAmC,WAAa,gCAAgC,KAAO,0BAA0B,IAAM,yBAAyB,UAAY,+BAA+B,MAAQ,2BAA2B,OAAS,8B,mBCAlnBD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,uBAAuB,aAAe,6BAA6B,MAAQ,sBAAsB,KAAO,qBAAqB,MAAQ,sBAAsB,YAAc,8B,mBCApOD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,mBCAnKD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,uB,mBCA3ID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,WAAa,6B,mBCArGD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,YAAc,6BAA6B,QAAU,2B,mBCAzID,EAAOC,QAAU,CAAC,UAAY,6BAA6B,OAAS,4B,mBCApED,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,8B,mBCA5DD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,QAAU,4B","file":"static/js/main.ac9f16c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1te52\",\"header\":\"Post_header__3Gzyc\",\"info\":\"Post_info__Xy-Np\",\"name\":\"Post_name__3CpU5\",\"time\":\"Post_time__3_nO7\",\"more\":\"Post_more__14-xe\",\"content\":\"Post_content__22_-o\",\"square\":\"Post_square__1NR8U\",\"image\":\"Post_image__2bHNs\",\"description\":\"Post_description__3kjSL\",\"footer\":\"Post_footer__3xwoU\",\"iconText\":\"Post_iconText__1hpKr\",\"liked\":\"Post_liked__2HS1G\",\"text\":\"Post_text__25F5P\",\"separator\":\"Post_separator__1SbIb\",\"share\":\"Post_share__287j5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textArea\":\"TextArea_textArea__2zwX3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3EuCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"StoriesSlider_slider__4u2ic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileEdit\":\"ProfileEdit_profileEdit__iDLMl\",\"header\":\"ProfileEdit_header__3Idmi\",\"title\":\"ProfileEdit_title__2TGIH\",\"logout\":\"ProfileEdit_logout__2m76b\",\"topBlock\":\"ProfileEdit_topBlock__ETWyG\",\"avatarWrapper\":\"ProfileEdit_avatarWrapper__1XsL3\",\"avatar\":\"ProfileEdit_avatar__1SRbI\",\"avatarText\":\"ProfileEdit_avatarText__2toBy\",\"name\":\"ProfileEdit_name__2mX0L\",\"input\":\"ProfileEdit_input__L2H48\",\"description\":\"ProfileEdit_description__3JWjj\",\"buttons\":\"ProfileEdit_buttons__1p7ap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fCsm\",\"logo\":\"Header_logo__2gAbO\",\"separator\":\"Header_separator__wmxr4\",\"button\":\"Header_button__1JOra\",\"dropdown\":\"Header_dropdown__39YJG\",\"control\":\"Header_control__tUaTp\",\"placeholder\":\"Header_placeholder__20Sp9\",\"menu\":\"Header_menu__1bgN5\",\"option\":\"Header_option__1oXVO\",\"reserver\":\"Header_reserver__iHJu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__ouCTB\",\"content\":\"Login_content__3YGvZ\",\"presentation\":\"Login_presentation__145vV\",\"authPane\":\"Login_authPane__IHzBx\",\"title\":\"Login_title__3VCx7\",\"input\":\"Login_input__2gh-1\",\"button\":\"Login_button__2Vpm8\",\"error\":\"Login_error__3SyBg\",\"mobileSeparator\":\"Login_mobileSeparator___RmK7\",\"switch\":\"Login_switch__4MshC\",\"inlineSwitch\":\"Login_inlineSwitch__1ywMx\"};","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"./Button.module.scss\";\n\ninterface ButtonParameters extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n    color?: \"blue\" | \"black\" | \"white\"\n    lightBorder?: boolean\n    square?: boolean\n    smallPadding?: boolean\n    className?: string\n    to?: string\n    [key: string]: any\n}\n\nexport const Button: FC<ButtonParameters> = (\n    {\n        color = \"white\",\n        lightBorder = false,\n        square = false, \n        to,\n        className,\n        children,\n        smallPadding = false,\n        onClick,\n        ...otherArgs\n    }) => {\n    const history = useHistory();\n\n    return (\n        <button className={classNames({\n            [styles.button]: true,\n            [styles[color]]: true,\n            [styles.square]: square,\n            [styles.lightBorder]: lightBorder,\n            [styles.smallPadding]: smallPadding\n        }, className)}\n            onClick={ev => {\n                onClick?.(ev);\n                if (to) history.push(to);\n            }}\n            {...otherArgs}>\n            {children}\n        </button>\n    )\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { LanguageValue } from \"../types\";\n\nexport const LANGUAGE_FOLDER = \"language\";\n\nexport const VALID_LANGUAGES: { [key: string]: string } = {\n    \"uk\": \"UA\",\n    \"en\": \"EN\"\n}\n\nexport interface StringsMap {\n    [key: string]: string | LanguageValue\n}\n\nexport interface LocalizationState {\n    strings: StringsMap\n    code: string\n    status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: LocalizationState = {\n    strings: {},\n    code: localStorage.getItem(\"langCode\") || \"en\",\n    status: \"idle\",\n}\n\nexport const setLanguage = createAsyncThunk(\n    \"localization/setLanguage\",\n    async (code: string, thunkAPI) => {\n        if (code in VALID_LANGUAGES) {\n            const state = thunkAPI.getState() as RootState;\n            const strings = selectTranslationStrings(state);\n            if(Object.keys(strings).length && code === selectLanguageCode(state)) {\n                return strings; // don't make request to fetch active language\n            }\n            \n            return fetch(`${LANGUAGE_FOLDER}/${code}.json`)\n                .then(res => res.json())\n                .then(json => {\n                    let strings: StringsMap = {};\n                    for (let key in json) {\n                        strings[key] = json[key];\n                    }\n\n                    localStorage.setItem(\"langCode\", code);\n                    thunkAPI.dispatch(setLanguageCode(code));\n\n                    return strings;\n                });\n        } else {\n            throw new Error(\"Not a valid language!\");\n        }\n    }\n);\n\nconst localizationSlice = createSlice({\n    name: \"localization\",\n    initialState,\n    reducers: {\n        setLanguageCode(state, action: PayloadAction<string>) {\n            state.code = action.payload\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(setLanguage.pending, (state) => {\n            state.status = \"loading\";\n        }).addCase(setLanguage.fulfilled, (state, action) => {\n            state.status = \"idle\";\n            state.strings = action.payload;\n        })\n    },\n})\n\n// Reducer\nexport default localizationSlice.reducer;\n\n// Actions\nconst { setLanguageCode } = localizationSlice.actions;\n\n//Selectors\n\nexport const selectLanguageCode = (state: RootState) => state.localization.code;\nexport const selectTranslationStrings = (state: RootState) => state.localization.strings;","import { IComment, IImage, IPhotosAttribute, IPost, IProfile } from \"../types\";\n\nexport const API_BASE = \"https://linkstagram-api.ga\";\n\n// API-SPECIFIC TYPES\n\nexport interface ILoginError {\n    \"field-error\": string[],\n    error: string\n}\n\nexport interface ISuccess {\n    success: string\n}\n\nexport interface IError {\n    error: string\n}\n\nexport interface IRegistrationParameters {\n    username: string;\n    login: string;\n    password: string;\n}\n\nexport interface ILoginParameters {\n    login: string;\n    password: string;\n}\n\nexport interface IPostCreationParameters {\n    description?: string;\n    photos_attributes: IPhotosAttribute[];\n}\n\nexport interface IProfileUpdateParameters {\n    username?: string;\n    description?: string;\n    first_name?: string;\n    job_title?: string;\n    last_name?: string;\n    profile_photo?: IImage;\n}\n\n// AUTH\n\nexport const createAccount = (data: IRegistrationParameters): Promise<ILoginError | ISuccess> => {\n    return fetch(`${API_BASE}/create-account`, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: new Headers({\n            \"Content-Type\": \"application/json\"\n        })\n    }).then(res => {\n        const headers = res.headers;\n        const auth = headers.get(\"authorization\");\n        if (auth) {\n            localStorage.setItem(\"auth\", auth);\n        } else {\n            localStorage.removeItem(\"auth\"); // login error, clear previous auth\n        }\n        return res.json();\n    });\n}\n\nexport const login = (data: ILoginParameters): Promise<ILoginError | ISuccess> => {\n    return fetch(`${API_BASE}/login`, {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: new Headers({\n            \"Content-Type\": \"application/json\"\n        })\n    }).then(res => {\n        const headers = res.headers;\n        const auth = headers.get(\"authorization\");\n        if (auth) {\n            localStorage.setItem(\"auth\", auth);\n        } else {\n            localStorage.removeItem(\"auth\"); // login error, clear previous auth\n        }\n        return res.json();\n    });\n}\n\n// COMMENTS\n\nexport const leaveComment = (post_id: number, message: string): Promise<IComment> => {\n    return request(`${API_BASE}/posts/${post_id}/comments`, \"POST\", { message });\n}\n\nexport const fetchComments = (post_id: number): Promise<IComment[]> => {\n    return request(`${API_BASE}/posts/${post_id}/comments`);\n}\n\n// ACCOUNT\n\nexport const fetchAccount = (): Promise<IProfile | IError> => {\n    return request(`${API_BASE}/account`);\n}\n\nexport const editAccount = (account: IProfileUpdateParameters): Promise<IProfile | IError> => {\n    return request(`${API_BASE}/account`, \"PATCH\", { account });\n}\n\n// LIKES\n\nexport const removeLike = (post_id: number): Promise<{} | IError> => {\n    return request(`${API_BASE}/posts/${post_id}/like`, \"DELETE\");\n}\n\nexport const setLike = (post_id: number): Promise<{} | IError> => {\n    return request(`${API_BASE}/posts/${post_id}/like`, \"POST\");\n}\n\n// POSTS\n\nexport const createPost = (post: IPostCreationParameters): Promise<IPost> => {\n    return request(`${API_BASE}/posts`, \"POST\", { post });\n}\n\nexport const deletePost = (id: number): Promise<ISuccess | IError> => {\n    return request(`${API_BASE}/posts/${id}`, \"DELETE\");\n}\n\nexport const fetchPost = (id: number): Promise<IPost> => {\n    return request(`${API_BASE}/posts/${id}`);\n}\n\nexport const fetchPosts = (page: number = 1): Promise<IPost[]> => {\n    return request(`${API_BASE}/posts?page=${page}`);\n}\n\nexport const fetchUserPosts = (username: string, page: number = 1): Promise<IPost[]> => {\n    return request(`${API_BASE}/profiles/${username}/posts?page=${page}`);\n}\n\n// PROFILES\n\nexport const fetchProfiles = (page: number = 1): Promise<IProfile[]> => {\n    return request(`${API_BASE}/profiles?page=${page}`);\n}\n\nexport const fetchProfile = (username: string): Promise<IProfile> => {\n    return request(`${API_BASE}/profiles/${username}`);\n}\n\n// UTIL\n\nconst request = (url: string, method: \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\" = \"GET\", data: any = null): Promise<any> => {\n    let options: RequestInit = {\n        method\n    };\n\n    options.headers = new Headers({\n        \"Content-Type\": \"application/json\"\n    })\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    const auth = localStorage.getItem(\"auth\");\n    if (auth) {\n        options.headers.set(\"Authorization\", \"Bearer \" + auth);\n    }\n    return fetch(url, options).then(res => {\n        if(!res.ok) throw Error();\n        return res.text()\n    }).then(text => {\n        if (text.length === 0) return {}\n        return JSON.parse(text);\n    });\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { IPost } from \"../types\";\nimport { createPost, deletePost, fetchPost, fetchPosts, fetchUserPosts, IPostCreationParameters, removeLike, setLike } from \"../util/api\";\n\nexport interface PostsState {\n    loadedPosts: IPost[];\n    currentPostsUsername: string | null;\n    status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: PostsState = {\n    loadedPosts: [],\n    currentPostsUsername: null,\n    status: \"idle\",\n}\n\nexport const fetchAllPosts = createAsyncThunk(\n    \"posts/fetchAllPosts\",\n    async (username: string | null | undefined, thunkAPI) => {\n        thunkAPI.dispatch(setCurrentPostsUsername(username || null));\n        // DANGER! Possibly, a lot of requests if Linkstagram decides to get several million new posts\n        let notEnd = true;\n        let posts: IPost[] = [];\n        let currentPage = 1;\n        while(notEnd) {\n            const downloaded = await (!!username ? fetchUserPosts(username, currentPage) : fetchPosts(currentPage));\n            if(downloaded.length && !posts.find(post => post.id === downloaded[0].id)) {\n                posts.push(...downloaded);\n            } else {\n                notEnd = false;\n            }\n            currentPage++;\n        }\n        return posts;  \n\n    }\n);\n\nexport const refetchPost = createAsyncThunk(\n    \"posts/fetchPost\",\n    async (post_id: number, thunkAPI) => {\n        return fetchPost(post_id);\n    }\n);\n\nexport const likePost = createAsyncThunk(\n    \"posts/like\",\n    async (post_id: number, thunkAPI) => {\n        await setLike(post_id)\n        thunkAPI.dispatch(refetchPost(post_id));\n    }\n);\n\nexport const dislikePost = createAsyncThunk(\n    \"posts/dislike\",\n    async (post_id: number, thunkAPI) => {\n        await removeLike(post_id);\n        thunkAPI.dispatch(refetchPost(post_id));\n    }\n);\n\nexport const deleteOwnPost = createAsyncThunk(\n    \"posts/delete\",\n    async (post_id: number, thunkAPI) => {\n        await deletePost(post_id);\n        thunkAPI.dispatch(removePost(post_id));\n    }\n);\n\nexport const createOwnPost = createAsyncThunk(\n    \"posts/post\",\n    async (params: IPostCreationParameters, thunkAPI) => {\n        await createPost(params);\n\n        // TODO: refractor?\n        thunkAPI.dispatch(fetchAllPosts(selectCurrentPostsUsername(thunkAPI.getState() as RootState)));\n    }\n);\n\nconst postsSlice = createSlice({\n    name: \"posts\",\n    initialState,\n    reducers: {\n        setCurrentPostsUsername(state, action: PayloadAction<string | null>) {\n            state.currentPostsUsername = action.payload\n        },\n        removePost(state, action: PayloadAction<number>) {\n            state.loadedPosts = state.loadedPosts.filter(post => post.id !== action.payload);\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n        .addCase(fetchAllPosts.pending, (state) => {\n            state.status = \"loading\";\n            state.loadedPosts = [];\n        }).addCase(fetchAllPosts.fulfilled, (state, action) => {\n            state.status = \"idle\";\n            state.loadedPosts = action.payload;\n        }).addCase(fetchAllPosts.rejected, (state) => {\n            state.status = \"failed\";\n        })\n        .addCase(refetchPost.fulfilled, (state, action) => {\n            const id = state.loadedPosts.findIndex(post => post.id === action.payload.id);\n            if(id !== -1) { // post is currently in state\n                state.loadedPosts[id] = action.payload;\n            }\n        })\n    },\n})\n\n// Reducer\nexport default postsSlice.reducer;\n\n// Actions\nconst { setCurrentPostsUsername, removePost } = postsSlice.actions;\n\n//Selectors\n\nexport const selectLoadedPosts = (state: RootState) => state.posts.loadedPosts;\nexport const selectPostsStatus = (state: RootState) => state.posts.status;\nexport const selectCurrentPostsUsername = (state: RootState) => state.posts.currentPostsUsername;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { IProfile } from \"../types\";\nimport { editAccount, fetchAccount, fetchProfiles, IError, IProfileUpdateParameters } from \"../util/api\";\nimport { fetchAllPosts, selectCurrentPostsUsername } from \"./postsSlice\";\n\nexport interface ProfileState {\n    account: IProfile | null;\n    allProfiles: IProfile[]\n    profilesFetchStatus: \"idle\" | \"loading\" | \"failed\";\n    accountFetchStatus: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: ProfileState = {\n    account: null,\n    allProfiles: [],\n    profilesFetchStatus: \"idle\",\n    accountFetchStatus: \"idle\"\n}\n\nexport const fetchAllProfiles = createAsyncThunk(\n    \"profile/fetchAllProfiles\",\n    async () => {\n        // DANGER! Possibly, a lot of requests if Linkstagram decides to get several million new users\n        let notEnd = true;\n        let profiles: IProfile[] = [];\n        let currentPage = 1;\n        while(notEnd) {\n            const downloaded = await fetchProfiles(currentPage);\n\n            if(downloaded.length && !profiles.find(profile => profile.username === downloaded[0].username)) {\n                profiles.push(...downloaded);\n            } else {\n                notEnd = false;\n            }\n            currentPage++;\n        }\n        return profiles;\n    }\n);\n\nexport const fetchCurrentAccount = createAsyncThunk(\n    \"profile/fetchAccount\",\n    async () => {\n        const account = await fetchAccount();\n        if(isError(account)) {\n            return null;\n        } else {\n            return account;\n        }\n    }\n);\n\nexport const updateAccount = createAsyncThunk(\n    \"profile/updateAccount\",\n    async (newInfo: IProfileUpdateParameters, thunkAPI) => {\n        const res = await editAccount(newInfo);\n        if(\"error\" in res) {\n            throw Error(\"Failed to update account\")\n        } else {\n            thunkAPI.dispatch(fetchAllPosts(selectCurrentPostsUsername(thunkAPI.getState() as RootState)));\n            return res;\n        }\n    }\n);\n\nexport const logout = createAsyncThunk(\n    \"profile/logount\",\n    async (arg, thunkAPI) => {\n        localStorage.removeItem(\"auth\");\n        thunkAPI.dispatch(clearCurrentAccount());\n        thunkAPI.dispatch(fetchAllPosts()); // refetch posts to remove likes\n    }\n);\n\nfunction isError(res: any): res is IError {\n    return !!(res as IError).error;\n}\n\nconst profileSlice = createSlice({\n    name: \"profile\",\n    initialState,\n    reducers: {\n        clearCurrentAccount(state) {\n            state.account = null;\n        },\n\n        resetAccountFetchStatus(state) {\n            state.accountFetchStatus = \"idle\";\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n        // profiles\n        .addCase(fetchAllProfiles.pending, (state) => {\n            state.profilesFetchStatus = \"loading\";\n        }).addCase(fetchAllProfiles.fulfilled, (state, action) => {\n            state.profilesFetchStatus = \"idle\";\n            state.allProfiles = action.payload;\n        }).addCase(fetchAllProfiles.rejected, (state) => {\n            state.profilesFetchStatus = \"failed\";\n            state.allProfiles = [];\n        })\n        // account\n        .addCase(fetchCurrentAccount.pending, (state) => {\n            state.accountFetchStatus = \"loading\";\n        }).addCase(fetchCurrentAccount.fulfilled, (state, action) => {\n            state.accountFetchStatus = \"idle\";\n            state.account = action.payload;\n        }).addCase(fetchCurrentAccount.rejected, (state) => {\n            state.accountFetchStatus = \"failed\";\n            state.account = null;\n            localStorage.removeItem(\"auth\"); // Should I do this here? IDK what place is better\n        })\n        .addCase(updateAccount.fulfilled, (state, action) => {\n            state.account = action.payload\n        })\n    },\n})\n\n// Reducer\nexport default profileSlice.reducer;\n\n// Actions\nexport const { clearCurrentAccount, resetAccountFetchStatus } = profileSlice.actions;\n\n// Selectors\nexport const selectProfiles = (state: RootState) => state.profile.allProfiles;\nexport const selectProfilesFetchStatus = (state: RootState) => state.profile.profilesFetchStatus;\nexport const selectAccount = (state: RootState) => state.profile.account;\nexport const selectAccountFetchStatus = (state: RootState) => state.profile.accountFetchStatus;\nexport const selectIsLoggedIn = (state: RootState) => !!state.profile.account;\nexport const selectIsLoggingIn = (state: RootState) => state.profile.accountFetchStatus === \"loading\";\n","import { en, PluralCategory, uk } from \"make-plural\";\nimport { EffectCallback, useEffect, useState } from \"react\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from \"react-router-dom\";\nimport { selectLanguageCode, selectTranslationStrings } from '../slices/localizationSlice';\nimport { selectIsLoggedIn, selectIsLoggingIn } from \"../slices/profileSlice\";\nimport type { AppDispatch, RootState } from '../store';\nimport { LanguageValue, LocalizationParameters } from '../types';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\n// eslint-disable-next-line react-hooks/exhaustive-deps\nexport const useMountEffect = (fun: EffectCallback) => useEffect(fun, []);\n\nexport const useAuthorization = () => {\n    const loggedIn = useAppSelector(selectIsLoggedIn);\n    const loggingIn = useAppSelector(selectIsLoggingIn);\n    const history = useHistory();\n\n    return (func?: Function) => {\n        if (loggingIn) return; // no account is available at this moment\n        if (loggedIn) {\n            func?.()\n        } else {\n            history.push(\"/login\");\n        }\n    }\n}\n\nexport const useWindowSize = () => {\n    const [windowSize, setWindowSize] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    });\n    useEffect(() => {\n        function handleResize() {\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n        }\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    return windowSize;\n}\n\nexport const useLocalization = () => {\n    const strings = useAppSelector(selectTranslationStrings);\n    const code = useAppSelector(selectLanguageCode);\n\n    const lp = (key: LocalizationParameters | string = \"NO_TRANSLATION_KEY_PROVIDED\", replaces: { [key: string]: string } = {}, count: number = 1, defaultValue: string | undefined = undefined): string => {\n        if (isLocalizationParameters(key)) return lp(key.key, key.replaces, key.count, key.defaultValue);\n        let value = strings[key];\n        if (!value) {\n            return defaultValue || key;\n        }\n\n        let found = key;\n        if (isLanguageValue(value)) {\n            found = value[countToPluralCode(code, count)] || value.other;\n        } else {\n            found = value;\n        }\n\n        for (let replace in replaces) {\n            let replacement = replaces[replace];\n            found = found.replaceAll(`{${replace}}`, replacement);\n        }\n        return found;\n    }\n\n    return lp;\n}\n\nconst countToPluralCode = (code: string, count: number): PluralCategory => {\n    const plurals: { [key: string]: (n: number | string, ord?: boolean) => PluralCategory } = {\n        \"uk\": uk,\n        \"en\": en\n    }\n    return plurals[code](count);\n}\n\nexport const isLocalizationParameters = (key: LocalizationParameters | string): key is LocalizationParameters => {\n    return (key as string).length === undefined;\n}\n\nexport const isLanguageValue = (value: LanguageValue | string): value is LanguageValue => {\n    return (value as string).length === undefined;\n}","import { FC } from \"react\";\nimport { useLocalization } from \"../../util/hooks\";\nimport styles from \"./Footer.module.scss\";\n\nconst CURRENT_YEAR = 2021;\n\nexport const Footer: FC = () => {\n    const lp = useLocalization();\n\n    return (\n        <footer className={styles.footer}>\n            <div className={styles.buttonRow}>\n                <GreyButton text={lp(\"footer_about\")}/>\n                <GreyButton text={lp(\"footer_help\")}/>\n                <GreyButton text={lp(\"footer_privacy\")}/>\n                <GreyButton text={lp(\"footer_terms\")}/>\n                <GreyButton text={lp(\"footer_locations\")}/>\n                <GreyButton text={lp(\"footer_language\")}/>\n            </div>\n            <div className={styles.buttonRow}>\n                <GreyButton text={lp(\"footer_copyright\", {year: CURRENT_YEAR.toString()})}/>\n            </div>\n        </footer>\n    )\n}\n\nconst GreyButton: FC<{text: string}> = ({text}) => {\n    return <div className={styles.greyButton}>{text}</div>\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"./Avatar.module.scss\";\n\ninterface AvatarParameters extends React.HTMLAttributes<HTMLDivElement> {\n    url?: string,\n    size?: string,\n    border?: boolean\n    className?: string\n    to?: string\n    clickable?: boolean\n}\n\nconst PLACEHOLDER = \"images/placeholder.png\";\n\nexport const Avatar: FC<AvatarParameters> = ({url, size = \"4em\", border = false, clickable, to, className, onClick, ...otherArgs}) => {\n    url = url || PLACEHOLDER; // url can be null\n    clickable = clickable || !!to || !!onClick;\n    const history = useHistory();\n    return (\n        <div className={classNames({\n            [styles.square]: true,\n            [styles.clickable]: clickable\n        })} style={{width: size}} onClick={ev => {\n            onClick?.(ev);\n            if (to) history.push(to);\n        }} {...otherArgs}>\n            <div className={classNames({\n                [styles.border]: true,\n                [styles.visible]: border\n            }, className)}>\n                <img src={url} className={styles.avatar} alt=\"Avatar\"/>\n            </div>\n        </div>\n    )\n}","import { FC } from \"react\";\nimport Dropdown from 'react-dropdown';\nimport { Link } from \"react-router-dom\";\nimport { selectLanguageCode, setLanguage, VALID_LANGUAGES } from \"../../slices/localizationSlice\";\nimport { selectAccount, selectIsLoggedIn } from \"../../slices/profileSlice\";\nimport { IProfile } from \"../../types\";\nimport { useAppDispatch, useAppSelector, useLocalization } from \"../../util/hooks\";\nimport { Avatar } from \"./../basic/avatar/Avatar\";\nimport { Button } from \"./../basic/button/Button\";\nimport styles from \"./Header.module.scss\";\n\ntype HeaderParameters = {\n    home?: boolean\n    profile?: boolean\n    login?: boolean\n}\n\nexport const Header: FC<HeaderParameters> = ({home = false, profile = false, login = false}) => {\n    const dispatch = useAppDispatch();\n    const lp = useLocalization();\n\n    const isLoggedIn = useAppSelector(selectIsLoggedIn);\n    const account = useAppSelector(selectAccount) as IProfile;\n    const langCode = useAppSelector(selectLanguageCode);\n\n    const dropdownOptions = Object.entries(VALID_LANGUAGES).map(([key, value]) => ({value: key, label: value, className: styles.option}));\n\n    return (\n        <>\n        <header className={styles.header}>\n            <Link to=\"/\" className={styles.logo}>Linkstagram</Link>\n            <div className={styles.separator}/>\n            {home && <Button color=\"black\" className={styles.button} to=\"/\">{lp(\"header_home\")}</Button>}\n            <Dropdown \n                options={dropdownOptions} \n                value={VALID_LANGUAGES[langCode]} \n                onChange={option => dispatch(setLanguage(option.value))}\n                className={styles.dropdown}\n                controlClassName={styles.control}\n                placeholderClassName={styles.placeholder}\n                menuClassName={styles.menu}\n            />\n            {login && !isLoggedIn && <Button color=\"black\" className={styles.button} to=\"/login\">{lp(\"general_login\")}</Button>}\n            {profile && isLoggedIn && <Avatar url={account.profile_photo_url} size=\"2.5em\" to=\"/profile\"/>}\n        </header>\n        <div className={styles.reserver}/>\n        </>\n    )\n}","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\nimport { IComment } from \"../types\";\nimport { fetchComments } from \"../util/api\";\n\nexport interface CommentsState {\n    loadedComments: IComment[];\n    currentPostId: number\n    status: \"idle\" | \"loading\" | \"failed\";\n}\n\nconst initialState: CommentsState = {\n    loadedComments: [],\n    currentPostId: -1,\n    status: \"idle\",\n}\n\nexport const fetchAllComments = createAsyncThunk(\n    \"comments/fetchAllPosts\",\n    async (post_id: number, thunkAPI) => {\n        thunkAPI.dispatch(setCurrentPostId(post_id));\n        return fetchComments(post_id);\n    }\n  );\n\nconst commentsSlice = createSlice({\n    name: \"comments\",\n    initialState,\n    reducers: {\n        setCurrentPostId(state, action: PayloadAction<number>) {\n            state.currentPostId = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchAllComments.pending, (state) => {\n            state.status = \"loading\";\n            state.loadedComments = [];\n        }).addCase(fetchAllComments.fulfilled, (state, action) => {\n            state.status = \"idle\";\n            state.loadedComments = action.payload;\n        }).addCase(fetchAllComments.rejected, (state) => {\n            state.status = \"failed\";\n        });\n    },\n})\n\n// Reducer\nexport default commentsSlice.reducer;\n\n// Actions\nconst { setCurrentPostId } = commentsSlice.actions;\n\n//Selectors\n\nexport const selectLoadedComments = (state: RootState) => state.comments.loadedComments;\nexport const selectCommentsStatus = (state: RootState) => state.comments.status;\nexport const selectCurrentCommentsPostId = (state: RootState) => state.comments.currentPostId;","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\nimport commentsReducer from \"./slices/commentsSlice\";\nimport localizationReducer from \"./slices/localizationSlice\";\nimport postsReducer from \"./slices/postsSlice\";\nimport profileReducer from \"./slices/profileSlice\";\n\nconst store = configureStore({\n    reducer: {\n        posts: postsReducer,\n        profile: profileReducer,\n        comments: commentsReducer,\n        localization: localizationReducer,\n    },\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nexport default store;","import { selectLanguageCode } from \"../slices/localizationSlice\";\nimport store from \"../store\";\nimport { LocalizationParameters } from \"../types\";\n\nexport const getRelativeDateKey = (timestamp: number | string, now: number): LocalizationParameters => {\n    if(typeof timestamp === \"string\") timestamp = new Date(timestamp.replace(/-/g, \"/\")).getTime()/1000; // Safari can't read standard format\n    const diff = Math.abs(now - timestamp)\n\n    if (diff < 60) {\n        return {\n            key: \"date_now\"\n        }\n    }\n\n    if (diff < 3600) {\n        const minutes = Math.floor(diff / 60);\n\n        return {\n            key: \"date_minutes\",\n            count: minutes,\n            replaces: {\n                count: minutes.toString()\n            }\n        }\n    }\n\n    if (diff < 86400) {\n        const hours = Math.floor(diff / 3600);\n        return {\n            key: \"date_hours\",\n            count: hours,\n            replaces: {\n                count: hours.toString()\n            }\n        }\n    }\n\n    let date = new Date(timestamp*1000).toLocaleDateString(selectLanguageCode(store.getState()), {year: \"numeric\", month: \"long\", day: \"2-digit\"});\n    return {\n        key: \"date_date\",\n        replaces: {\n            date: date\n        }\n    }\n\n}\n","\nexport const insertNewlines = (text: string): (string | JSX.Element)[] => {\n    const arr = text.split(\"\\n\").map((e, i) => [e, <br key={i}/>]).flat(1);\n    arr.pop(); // remove last br\n    return arr;\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport { deleteOwnPost, dislikePost, likePost } from \"../../../slices/postsSlice\";\nimport { selectAccount } from \"../../../slices/profileSlice\";\nimport { IPost } from \"../../../types\";\nimport { getRelativeDateKey } from \"../../../util/date\";\nimport { useAppDispatch, useAppSelector, useAuthorization, useLocalization } from \"../../../util/hooks\";\nimport { insertNewlines } from \"../../../util/jsx\";\nimport { Avatar } from \"../../basic/avatar/Avatar\";\nimport styles from \"./Post.module.scss\";\n\ntype PostProps = {\n    post: IPost\n}\n\nexport const Post: FC<PostProps> = ({post}) => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n\n    const account = useAppSelector(selectAccount);\n    const requireAuth = useAuthorization();\n\n    return (\n        <div className={styles.post}>\n            <div className={styles.header}>\n                <Avatar url={post.author.profile_photo_url} size={\"2.5em\"} to={`/profile/${post.author.username}`}/>\n                <div className={styles.info}>\n                    <div className={styles.name}>\n                        { `${post.author.first_name || \"\"} ${post.author.last_name || \"\"}`}\n                    </div>\n                    <div className={styles.time}>\n                        {lp(getRelativeDateKey(post.created_at, Date.now()))}\n                    </div>\n                </div>\n                <div className={styles.more}  onClick={() => {\n                    if(account?.username === post.author.username) {\n                        dispatch(deleteOwnPost(post.id));\n                    }\n                }}>\n                    <i className=\"icon icon-more\"/>\n                </div>\n            </div>\n            <div className={styles.content}>\n                {!!post.photos.length && <div className={styles.square}>\n                    <img src={post.photos[0].url} className={styles.image} alt=\"Post content\"/>\n                </div>}\n                {post.description && <div className={styles.description}>{insertNewlines(post.description)}</div>}\n            </div>\n            <div className={styles.footer}>\n                <IconText icon=\"like\" text={post.likes_count.toString()} liked={post.is_liked} onClick={() => requireAuth(() => dispatch(post.is_liked ? dislikePost(post.id) : likePost(post.id)))}/>\n                <IconText icon=\"comments\" text=\"0\"/>\n                <div className={styles.separator}/>\n                <div className={styles.share}>{lp(\"post_share\")} <i className=\"icon icon-arrow\"/></div>\n            </div>\n        </div>\n    )\n}\n\ntype IconTextParameters = {\n    icon: string\n    text: string\n    liked?: boolean\n    onClick?: React.MouseEventHandler<HTMLSpanElement>\n}\n\nconst IconText: FC<IconTextParameters> = ({icon, text, liked = false, onClick}) => {\n    return (\n        <span className={styles.iconText} onClick={onClick}>\n            <i className={classNames({\n                \"icon\": true,\n                [`icon-${icon}`]: true,\n                [styles.liked]: liked\n            })\n            }/>\n            <span className={styles.text}>{text}</span>\n        </span>\n    )\n}","import { FC, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetchAllPosts, selectLoadedPosts, selectPostsStatus } from \"../../../slices/postsSlice\";\nimport { useAppDispatch, useLocalization } from \"../../../util/hooks\";\nimport { Post } from \"../post/Post\";\nimport styles from \"./Feed.module.scss\";\n\ntype FeedParameters = {\n    username?: string\n}\n\nexport const Feed: FC<FeedParameters> = ({ username }) => {\n    const dispatch = useAppDispatch();\n    const lp = useLocalization();\n\n    useEffect(() => {\n        dispatch(fetchAllPosts(username));\n    }, [username, dispatch]);\n\n    const posts = useSelector(selectLoadedPosts);\n    const status = useSelector(selectPostsStatus);\n\n    let content;\n\n    if (status === \"idle\") {\n        if(posts.length) {\n            content = posts.map(post => <Post key={post.id} post={post} />);\n        } else {\n            content = <div className={styles.text}>{lp(\"feed_no_posts\")}</div>;\n        }\n    } else if (status === \"loading\") {\n        content = <div className={styles.text}>{lp(\"general_loading\")}</div>;\n    } else {\n        content = <div className={styles.text}>{lp(\"general_error_loading\")}</div>;\n    }\n\n    return (\n        <div className={styles.feed}>\n            <div className={styles.postList}>\n                {content}\n            </div>\n        </div>\n    )\n}","import AwsS3 from \"@uppy/aws-s3\"\nimport Uppy from \"@uppy/core\"\nimport { IImage } from \"../types\"\nimport { API_BASE } from \"./api\"\n\nexport const getUppy = () => {\n    const uppy = Uppy<Uppy.StrictTypes>({\n        restrictions: {\n            maxNumberOfFiles: 1,\n            allowedFileTypes: [\"image/png\", \"image/jpg\", \"image/jpeg\"],\n            maxFileSize: 5 * 1024 * 1024 // 5MB\n        },\n    })\n\n    uppy.use(AwsS3, {\n        companionUrl: API_BASE,\n    });\n\n    return uppy;\n}\n\nexport const addFile = (uppy: Uppy.Uppy, file: File) => {\n    return uppy.addFile({\n        name: file.name,\n        type: file.type,\n        data: file,\n        source: 'Local'\n    })\n}\n\nexport const uploadFiles = async (files: File[]) => {\n    const uppy = getUppy();\n    files.forEach(file => addFile(uppy, file));\n\n    const result = await uppy.upload();\n    if(result.failed.length) {\n        return result.failed;\n    }\n    if(result.successful.length) {\n        return transformFileData(result.successful);\n    }\n    return [];\n}\n\nexport const transformFileData = (files: Uppy.UploadedUppyFile<any, any>[]): IImage[] => {\n    return files.map(file => {\n        const key: string = (file.meta as any).key;\n        const [storage, id] = key.split(\"/\");\n        const params: IImage = {\n            id: id,\n            storage: storage,\n            metadata: {\n                filename: file.meta.name,\n                size: file.data.size,\n                mime_type: file.data.type\n            }\n        }\n        return params;\n    });\n}","import Uppy from \"@uppy/core\";\nimport classNames from \"classnames\";\nimport React, { FC, SyntheticEvent, useEffect, useRef, useState } from \"react\";\nimport { addFile } from \"../../../util/uppy\";\nimport styles from \"./ImageInput.module.scss\";\n\ninterface ImageInputProps {\n    uppy: Uppy.Uppy\n    accept?: string[]\n    text?: string\n    className?: string\n    getFiles?: Function\n    defaultPreviewUrl?: string\n}\n\nexport const ImageInput: FC<ImageInputProps> = ({ uppy, accept = [], text, defaultPreviewUrl, className }) => {\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [files, setFiles] = useState<File[]>([]);\n\n    useEffect(() => {\n        // clear and re-add files on change\n        uppy.getFiles().forEach(file => uppy.removeFile(file.id));\n        files.forEach(file => addFile(uppy, file));\n    }, [files, uppy]);\n\n    const preventEvent = (ev: SyntheticEvent) => {\n        ev.preventDefault();\n        ev.stopPropagation();\n    }\n\n    return (\n        <div className={classNames({\n            [styles.file]: true\n        }, className)}\n            onClick={() => inputRef.current?.click()}\n            onDragOver={preventEvent}\n            onDragEnter={preventEvent}\n            onDragLeave={preventEvent}\n            onDrop={ev => {\n                ev.preventDefault();\n                setFiles(Array.from(ev.dataTransfer.files))\n            }}\n        >\n            <div className={styles.preview}>\n                {files.length ? \n                    files.map(file => <img src={URL.createObjectURL(file)} alt=\"Preview\"/>) \n                    : defaultPreviewUrl ? \n                        <img src={defaultPreviewUrl} alt=\"Preview\"/> \n                            : text}\n            </div>\n            <input type=\"file\" accept={accept.join(\",\")} ref={inputRef} hidden onChange={ev => {\n                if (ev.target.files?.length) {\n                    setFiles(Array.from(ev.target.files))\n                }\n            }\n            } />\n        </div>\n    )\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport ReactModal from \"react-modal\";\nimport styles from \"./Modal.module.scss\";\n\ntype ModalParameters = {\n    isOpen: boolean\n    className?: string\n    onRequestClose?(event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>): void\n}\n\nexport const Modal: FC<ModalParameters> = ({isOpen, onRequestClose, className, children}) => {\n    return (\n        <ReactModal className={classNames(styles.modal, className)} overlayClassName={styles.overlay} isOpen={isOpen} onRequestClose={onRequestClose}>\n            {children}\n        </ReactModal>\n    )\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport TextareaAutosize, { TextareaAutosizeProps } from 'react-textarea-autosize';\nimport styles from \"./TextArea.module.scss\";\n\ninterface TextAreaParameters extends TextareaAutosizeProps{\n    label?: string\n    placeholder?: string\n    className?: string\n    [key: string]: any\n}\n\nexport const TextArea: FC<TextAreaParameters> = ({label, placeholder, className, ...otherParams}) => {\n    return (\n        <label className={classNames({\n            [styles.textArea]: true\n            }, className)}\n        >\n            {label}\n            <TextareaAutosize placeholder={placeholder} {...otherParams}/>\n        </label>\n    )\n}","import { FC, useEffect, useState } from \"react\";\nimport { createOwnPost } from '../../../slices/postsSlice';\nimport { useAppDispatch, useLocalization } from \"../../../util/hooks\";\nimport { getUppy, transformFileData } from '../../../util/uppy';\nimport { Button } from \"../../basic/button/Button\";\nimport { ImageInput } from \"../../basic/file/ImageInput\";\nimport { Modal } from '../../basic/modal/Modal';\nimport { TextArea } from \"../../basic/textarea/TextArea\";\nimport styles from \"./NewPost.module.scss\";\n\ntype NewPostParameters = {\n    opened?: boolean\n    onRequestClose?(event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>): void\n}\n\nconst uppy = getUppy();\n\nexport const NewPost: FC<NewPostParameters> = ({ opened = false, onRequestClose }) => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n\n    const [description, setDescription] = useState(\"\");\n\n    useEffect(() => {\n        if (!opened) {\n            setDescription(\"\");\n        }\n    }, [opened])\n\n    return (\n        <Modal className={styles.newPost} isOpen={opened} onRequestClose={onRequestClose}>\n            <ImageInput text={lp(\"post_new_file\")} className={styles.input} uppy={uppy} />\n            <TextArea\n                className={styles.description}\n                minRows={5}\n                placeholder={lp(\"post_new_description_placeholder\")}\n                label={lp(\"post_new_description\")}\n                onChange={ev => setDescription(ev.currentTarget.value)}\n                value={description}\n            />\n            <div className={styles.buttons}>\n                <Button lightBorder onClick={onRequestClose}>{lp(\"general_cancel\")}</Button>\n                <Button color=\"blue\" onClick={async ev => {\n                    const result = await uppy.upload()\n                    // TODO handle errors, move this code into util\n                    if (result.successful.length) {\n                        const images = transformFileData(result.successful);\n                        dispatch(createOwnPost({\n                            description,\n                            photos_attributes: images.map(image => ({ image }))\n                        }))\n                        onRequestClose?.(ev);\n                    } else if (result.successful.length === 0 && result.failed.length === 0) {\n                        if (description) {\n                            dispatch(createOwnPost({\n                                description,\n                                photos_attributes: []\n                            }))\n                            onRequestClose?.(ev);\n                        }\n                    }\n                }}>{lp(\"post_new_post\")}</Button>\n            </div>\n        </Modal>\n    )\n}","import classNames from \"classnames\";\nimport { FC } from \"react\";\nimport styles from \"./Input.module.scss\";\n\nexport interface InputParameters extends React.InputHTMLAttributes<HTMLInputElement> {\n    label?: string\n    placeholder?: string\n    icon?: string\n    iconColor?: string\n    className?: string\n    [key: string]: any\n}\n\nexport const Input: FC<InputParameters> = ({label, placeholder, icon, iconColor, className, ...otherParams}) => {\n    return (\n        <label className={classNames({\n            [styles.input]: true\n            }, className)}>\n            {label}\n            <input placeholder={placeholder} {...otherParams}/>\n        </label>\n    )\n}","import classNames from \"classnames\";\nimport { FC, useState } from \"react\";\nimport { logout, selectAccount, updateAccount } from \"../../../slices/profileSlice\";\nimport { IProfileUpdateParameters } from \"../../../util/api\";\nimport { useAppDispatch, useAppSelector, useLocalization } from \"../../../util/hooks\";\nimport { getUppy, transformFileData } from \"../../../util/uppy\";\nimport { Button } from \"../../basic/button/Button\";\nimport { ImageInput } from \"../../basic/file/ImageInput\";\nimport { Input } from \"../../basic/input/Input\";\nimport { Modal } from \"../../basic/modal/Modal\";\nimport { TextArea } from \"../../basic/textarea/TextArea\";\nimport styles from \"./ProfileEdit.module.scss\";\n\ntype ProfileEditParameters = {\n    opened?: boolean\n    onRequestClose?(event: React.MouseEvent<Element, MouseEvent> | React.KeyboardEvent<Element>): void\n}\n\nconst uppy = getUppy();\n\nexport const ProfileEdit: FC<ProfileEditParameters> = ({ opened = false, onRequestClose }) => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n\n    const account = useAppSelector(selectAccount);\n\n    const [firstName, setFirstName] = useState(account?.first_name);\n    const [secondName, setSecondName] = useState(account?.last_name);\n    const [jobTitle, setJobTitle] = useState(account?.job_title);\n    const [description, setDescription] = useState(account?.description);\n\n    if (!account) {\n        return (\n            <Modal className={styles.profileEdit} isOpen={opened} onRequestClose={onRequestClose}>\n                NO ACCOUNT!!!\n            </Modal>\n        )\n    }\n\n    return (\n        <Modal className={styles.profileEdit} isOpen={opened} onRequestClose={onRequestClose}>\n            <div className={styles.header}>\n                <div className={styles.title}>\n                    {lp(\"profile_edit_title\")}\n                </div>\n                <div className={styles.logout} onClick={ev => {\n                    dispatch(logout());\n                    onRequestClose?.(ev);\n                }}>\n                    {lp(\"general_logout\")}\n                </div>\n            </div>\n            <div className={styles.topBlock}>\n                <div className={styles.avatarWrapper}>\n                    <ImageInput className={styles.avatar} uppy={uppy} defaultPreviewUrl={account.profile_photo_url}/>\n                    <div className={styles.avatarText}>{lp(\"profile_edit_photo\")}</div>\n                </div>\n                <div className={styles.name}>\n                    <Input\n                        className={styles.input}\n                        label={lp(\"profile_edit_first_name\")}\n                        placeholder={lp(\"profile_edit_first_name_placeholder\")}\n                        value={firstName}\n                        onChange={ev => setFirstName(ev.currentTarget.value)}\n                    />\n                    <Input\n                        className={styles.input}\n                        label={lp(\"profile_edit_second_name\")}\n                        placeholder={lp(\"profile_edit_second_name_placeholder\")}\n                        value={secondName}\n                        onChange={ev => setSecondName(ev.currentTarget.value)}\n                    />\n                </div>\n            </div>\n            <Input\n                className={styles.input}\n                label={lp(\"profile_edit_job_title\")}\n                placeholder={lp(\"profile_edit_job_title_placeholder\")}\n                value={jobTitle}\n                onChange={ev => setJobTitle(ev.currentTarget.value)}\n            />\n            <TextArea\n                className={classNames(styles.input, styles.description)}\n                label={lp(\"profile_edit_description\")}\n                placeholder={lp(\"profile_edit_description_placeholder\")}\n                value={description}\n                onChange={ev => setDescription(ev.currentTarget.value)}\n            />\n\n            <div className={styles.buttons}>\n                <Button lightBorder onClick={onRequestClose}>{lp(\"general_cancel\")}</Button>\n                <Button color=\"blue\" onClick={async ev => {\n                    const params: IProfileUpdateParameters = {...account};\n                    params.first_name = firstName;\n                    params.last_name = secondName;\n                    params.job_title = jobTitle;\n                    params.description = description;\n                    \n                    if(uppy.getFiles().length) {\n                        const result = await uppy.upload();\n                        if(result.successful.length) {\n                            params.profile_photo = transformFileData(result.successful)[0]\n                        }\n\n                        // TODO handle errors\n                    }\n\n                    dispatch(updateAccount(params));\n                    onRequestClose?.(ev);\n                }}>{lp(\"general_save\")}</Button>\n            </div>\n        </Modal>\n    )\n}","import classNames from \"classnames\";\nimport { FC, useState } from \"react\";\nimport { IProfile } from \"../../../types\";\nimport { useAuthorization, useLocalization } from \"../../../util/hooks\";\nimport { insertNewlines } from \"../../../util/jsx\";\nimport { Avatar } from \"../../basic/avatar/Avatar\";\nimport { Button } from \"../../basic/button/Button\";\nimport { NewPost } from \"../../posts/new/NewPost\";\nimport { ProfileEdit } from \"../edit/ProfileEdit\";\nimport styles from \"./ProfileInfo.module.scss\";\n\ntype ProfileInfoProps = {\n    profile: IProfile\n    own?: boolean\n    horizontal?: boolean\n}\n\nexport const ProfileInfo: FC<ProfileInfoProps> = ({profile, own = false, horizontal = false}) => {\n    const lp = useLocalization();\n    const requireAuth = useAuthorization();\n\n    const [isNewPostOpened, setNewPostOpened] = useState(false);\n    const [isProfileEditOpened, setProfileEditOpened] = useState(false);\n\n    const nameString = `${profile.first_name || \"\"} ${profile.last_name || \"\"}`;\n    if(horizontal) {\n        return (\n        <div className={classNames([styles.profileInfo, styles.horizontal])}>\n            <Avatar url={profile.profile_photo_url} border size=\"7.25em\"/>\n            <div className={styles.info}>\n                <div className={styles.name}>\n                    {nameString}\n                </div>\n                <div className={styles.job}>\n                    {profile.job_title || \"\"}\n                </div>\n                <div className={styles.description}>\n                    {insertNewlines(profile.description || \"\")}\n                </div>\n            </div>\n            <div className={styles.separator}/>\n            <div className={styles.right}>\n                <div className={styles.social}>\n                    <div className={styles.followers}>\n                        <div className={styles.number}>{profile.followers}</div>\n                        <div className={styles.smallText}>{lp(\"profile_followers\", {}, profile.followers)}</div>\n                    </div>\n                    \n                    <div className={styles.following}>\n                        <div className={styles.number}>{profile.following}</div>\n                        <div className={styles.smallText}>{lp(\"profile_following\")}</div>\n                    </div>\n                </div>\n                {own && <div className={styles.actionButtons}>\n                    <Button smallPadding lightBorder onClick={() => requireAuth(() => setProfileEditOpened(true))}>{lp(\"profile_edit\")}</Button>\n                    <Button smallPadding color=\"blue\" onClick={() => requireAuth(() => setNewPostOpened(true))}>{lp(\"post_new\")}</Button>\n                </div>}\n            </div>\n            <NewPost opened={isNewPostOpened} onRequestClose={() => setNewPostOpened(false)}/>\n            <ProfileEdit opened={isProfileEditOpened} onRequestClose={() => setProfileEditOpened(false)} />\n        </div>\n        )\n    }\n\n    return (\n        <div className={styles.profileInfo}>\n            <div className={styles.top}>\n                <div className={styles.followers}>\n                    <div className={styles.number}>{profile.followers}</div>\n                    <div className={styles.smallText}>{lp(\"profile_followers\", {}, profile.followers)}</div>\n                </div>\n                <Avatar url={profile.profile_photo_url} border size=\"5em\"/>\n                <div className={styles.following}>\n                    <div className={styles.number}>{profile.following}</div>\n                    <div className={styles.smallText}>{lp(\"profile_following\")}</div>\n                </div>\n            </div>\n            <div className={styles.bottom}>\n                <div className={styles.info}>\n                    {nameString} {profile.job_title ? `- ${profile.job_title || \"\"}` : \"\"}\n                </div>\n                <div className={styles.description}>\n                    {insertNewlines(profile.description || \"\")}\n                </div>\n                {own && <div className={styles.actionButtons}>\n                    <Button smallPadding onClick={() => requireAuth(() => setProfileEditOpened(true))}>{lp(\"profile_edit\")}</Button>\n                    <Button smallPadding color=\"blue\" onClick={() => requireAuth(() => setNewPostOpened(true))}>{lp(\"post_new\")}</Button>\n                </div>}\n            </div>\n            <NewPost opened={isNewPostOpened} onRequestClose={() => setNewPostOpened(false)}/>\n            <ProfileEdit opened={isProfileEditOpened} onRequestClose={() => setProfileEditOpened(false)} />\n        </div>\n    )\n}","import { FC, useEffect } from \"react\";\nimport { fetchAllProfiles, selectProfiles } from \"../../slices/profileSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../util/hooks\";\nimport { Avatar } from \"./../basic/avatar/Avatar\";\nimport styles from \"./StoriesSlider.module.scss\";\n\nexport const StoriesSlider: FC = () => {\n\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        dispatch(fetchAllProfiles());\n    }, [dispatch]);\n\n    const profiles = useAppSelector(selectProfiles);\n\n    return (\n        <div className={styles.slider}>\n            {profiles.filter(profile => profile.profile_photo_url).map(profile => <Avatar \n                                        key={profile.username} \n                                        url={profile.profile_photo_url} \n                                        size={\"4em\"} \n                                        to={`/profile/${profile.username}`} \n                                        border/>)}\n        </div>\n    )\n} ","import { FC } from \"react\";\nimport { Button } from \"../../components/basic/button/Button\";\nimport { Footer } from \"../../components/footer/Footer\";\nimport { Header } from \"../../components/header/Header\";\nimport { Feed } from \"../../components/posts/feed/Feed\";\nimport { ProfileInfo } from \"../../components/profile/info/ProfileInfo\";\nimport { StoriesSlider } from \"../../components/stories/StoriesSlider\";\nimport { selectAccount, selectIsLoggedIn } from \"../../slices/profileSlice\";\nimport { IProfile } from \"../../types\";\nimport { useAppSelector, useLocalization } from \"../../util/hooks\";\nimport styles from \"./Home.module.scss\";\n\nconst Home: FC = () => {\n    const lp = useLocalization();\n\n    const isLoggedIn = useAppSelector(selectIsLoggedIn);\n    const account = useAppSelector(selectAccount) as IProfile;\n    return (\n        <div className={styles.home}>\n            <Header profile login/>\n            <div className={styles.content}>\n                <div className={styles.left}>\n                    <StoriesSlider/>\n                    <Feed/>\n                </div>\n                <div className={styles.right}>\n                    <div className={styles.sticky}>\n                        { isLoggedIn ? <ProfileInfo profile={account} own/> :<Button color=\"black\" to=\"/login\">{lp(\"general_login\")}</Button>}\n                        <Footer/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","\nexport const TABLET_WIDTH = 512;\nexport const DESKTOP_WIDTH = 1014;\n\nexport const IS_DESKTOP = () => window.innerWidth >= DESKTOP_WIDTH;\nexport const IS_TABLET = () => window.innerWidth >= TABLET_WIDTH && window.innerWidth < DESKTOP_WIDTH;\nexport const IS_MOBILE = () => window.innerWidth < TABLET_WIDTH;\n\nexport const IS_SAFARI = /^((?!chrome|android).)*safari/i.test(navigator.userAgent); //browsers usually don't change at runtime","import { Field, FieldProps, Form, Formik } from \"formik\";\nimport { FC, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Button } from \"../../components/basic/button/Button\";\nimport { Input, InputParameters } from \"../../components/basic/input/Input\";\nimport { Header } from \"../../components/header/Header\";\nimport { fetchCurrentAccount, selectIsLoggedIn } from \"../../slices/profileSlice\";\nimport { createAccount, fetchProfile, login } from \"../../util/api\";\nimport { IS_DESKTOP } from \"../../util/contants\";\nimport { useAppDispatch, useAppSelector, useLocalization } from \"../../util/hooks\";\nimport styles from \"./Login.module.scss\";\n\ntype FormValues = {\n    email: string\n    username: string\n    password: string\n}\n\nconst Login: FC = () => {\n    const lp = useLocalization();\n    const dispatch = useAppDispatch();\n\n    const isLoggedIn = useAppSelector(selectIsLoggedIn);\n\n    const [signUp, setSignUp] = useState(false);\n\n    const schema = Yup.object().shape({\n        email: Yup.string()\n                    .email(lp(\"login_validation_email_invalid\"))\n                    .required(lp(\"login_validation_required\")),\n        username: signUp ? Yup.string()\n                    .min(3, lp(\"login_validation_min_length\", {count: \"3\"}, 3))\n                    .max(20, lp(\"login_validation_max_length\", {count: \"20\"}, 20))\n                    .matches(/^[a-zA-Z0-9._-]*$/, \"Use alphabet, numbers and _ -\")\n                    .test(\"isTaken\", lp(\"login_validation_username_taken\"), value => { // test if username is taken\n                        if(!value) return true;\n                        return new Promise((resolve, reject) => {\n                            fetchProfile(value).then((json) => {\n                                resolve(false)\n                            }).catch(() => {\n                                resolve(true)\n                            })\n                        })\n                    })\n                    .required(lp(\"login_validation_required\")): Yup.string(),\n        password: Yup.string()\n                    .min(6, lp(\"login_validation_min_length\", {count: \"6\"}, 6))\n                    .required(lp(\"login_validation_required\"))\n    });\n\n    if(isLoggedIn) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div className={styles.login}>\n            <Header />\n            <div className={styles.content}>\n                <div className={styles.presentation}>\n                    Photos go wroom\n                </div>\n                <div className={styles.authPane}>\n                    <div className={styles.title}>{lp(signUp ? \"login_sign_up\" : \"login_login\")}</div>\n\n                    <Formik\n                        initialValues={{\n                            email: \"\",\n                            username: \"\",\n                            password: \"\"\n                        }}\n                        onSubmit={async (values: FormValues) => {\n                            if(signUp) {\n                                createAccount({login: values.email, password: values.password, username: values.username})\n                                    .then(() => dispatch(fetchCurrentAccount()))\n                            } else {\n                                login({login: values.email, password: values.password})\n                                    .then(() => dispatch(fetchCurrentAccount()))\n                            }\n                        }}\n                        validationSchema={schema}\n                    >\n                        <Form>\n                            <Field\n                                name=\"email\"\n                                type=\"email\"\n                                component={FormikWrapperInput}\n                                label={lp(\"login_field_email_label\")}\n                                placeholder={lp(\"login_field_email_placeholder\")}\n                            />\n                            {signUp && <Field\n                                name=\"username\"\n                                component={FormikWrapperInput}\n                                label={lp(\"login_field_username_label\")}\n                                placeholder={lp(\"login_field_username_placeholder\")}\n                            />}\n                            <Field\n                                name=\"password\"\n                                component={FormikWrapperInput}\n                                type=\"password\"\n                                label={lp(\"login_field_password_label\")}\n                                placeholder={lp(\"login_field_password_placeholder\")}\n                            />\n                            <div className={styles.mobileSeparator}/>\n                            {/* Designer is shuffling buttons */}\n                            {IS_DESKTOP() && <SubmitButton signUp={signUp}/>}\n                            <div className={styles.switch}>\n                                {lp(signUp ? \"login_have_account\" : \"login_no_account\")}\n                                <span className={styles.inlineSwitch} onClick={() => setSignUp(!signUp)}>\n                                    {lp(signUp ? \"login_login\" : \"login_sign_up\")}\n                                </span>\n                            </div>\n                            {!IS_DESKTOP() && <SubmitButton signUp={signUp}/>}\n                        </Form>\n                    </Formik>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst SubmitButton: FC<{signUp: boolean}> = ({signUp = false}) => {\n    const lp = useLocalization();\n    return (\n        <Button className={styles.button} color=\"blue\" type=\"submit\">\n            {lp(signUp ? \"login_sign_up_button\" : \"login_login_button\")}\n        </Button>\n    )\n}\n\nconst FormikWrapperInput: FC<InputParameters & FieldProps> = ({ field, form: { touched, errors, setFieldValue, values }, ...otherProps }) => {\n    return (\n        <div className={styles.input}>\n            <Input onChange={e => setFieldValue(field.name, e.currentTarget.value)} name={field.name} value={values[field.name]} {...otherProps} />\n            {touched[field.name] && errors[field.name] && <div className={styles.error}>{errors[field.name]}</div>}\n        </div>\n    )\n}\n\nexport default Login;","import { FC, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetchAllPosts, selectLoadedPosts, selectPostsStatus } from \"../../../slices/postsSlice\";\nimport { useAppDispatch, useLocalization } from \"../../../util/hooks\";\nimport styles from \"./PhotoFeed.module.scss\";\n\ntype PhotoFeedParameters = {\n    username?: string\n}\n\nexport const PhotoFeed: FC<PhotoFeedParameters> = ({username}) => {\n    const dispatch = useAppDispatch();\n    const lp = useLocalization();\n\n    useEffect(() => {\n        dispatch(fetchAllPosts(username));\n    }, [username, dispatch]);\n\n    const posts = useSelector(selectLoadedPosts);\n    const status = useSelector(selectPostsStatus);\n\n    let content;\n    if (status === \"idle\") {\n        if(posts.length) {\n            content = posts.map(post => post.photos).flat(1).map(photo => <ImageSquare key={photo.id} url={photo.url}/>);\n        } else {\n            content = <div className={styles.text}>{lp(\"feed_no_posts\")}</div>;\n        }\n    } else if (status === \"loading\") {\n        content = lp(\"general_loading\");\n    } else {\n        content = lp(\"general_error_loading\");\n    }\n\n    return (\n        <div className={styles.photoFeed}>\n            {content}\n        </div>\n    )\n}\n\nconst ImageSquare: FC<{url: string}> = ({url}) => {\n    return <div className={styles.square} style={{backgroundImage: `url(${url})`}}/>\n}","import { FC, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { useParams } from \"react-router-dom\";\nimport { Header } from \"../../components/header/Header\";\nimport { PhotoFeed } from \"../../components/posts/feed/PhotoFeed\";\nimport { ProfileInfo } from \"../../components/profile/info/ProfileInfo\";\nimport { selectAccount } from \"../../slices/profileSlice\";\nimport { IProfile } from \"../../types\";\nimport { fetchProfile } from \"../../util/api\";\nimport { IS_DESKTOP } from \"../../util/contants\";\nimport { useAppSelector, useWindowSize } from \"../../util/hooks\";\nimport styles from \"./Profile.module.scss\";\n\nconst OwnProfile: FC = () => {\n    let { username } = useParams<{username: string}>();\n    const account = useAppSelector(selectAccount) as IProfile;\n    useWindowSize(); //update on resize\n\n    const [profile, setProfile] = useState<IProfile | null>(null);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        if (username) {\n            if(!profile || profile.username !== username) fetchProfile(username).then(json => setProfile(json)).catch(ex => setError(\"Failed to get profile\"));\n        } else {\n            setProfile(account);\n        }\n    }, [username, account, profile]);\n\n    if (!username && !localStorage.getItem(\"auth\")) {\n        return <Redirect to=\"/login\" />\n    }\n\n    const own = !!profile && account?.username === profile.username;\n\n    return (\n        <div className={styles.ownProfile}>\n            <Header home profile={!own}/>\n            <div className={styles.content}>\n                {error ? error : !profile ? \"Failed to load profile\" :\n                    <>\n                        <ProfileInfo profile={profile} own={own} horizontal={IS_DESKTOP()} />\n                        <PhotoFeed username={profile.username} />\n                    </>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default OwnProfile;","import { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"./routes/home/Home\";\nimport Login from \"./routes/login/Login\";\nimport Profile from \"./routes/profile/Profile\";\nimport { selectLanguageCode, setLanguage } from \"./slices/localizationSlice\";\nimport { fetchCurrentAccount } from \"./slices/profileSlice\";\nimport { useAppDispatch, useAppSelector, useMountEffect } from \"./util/hooks\";\n\n\nfunction App() {\n    const dispatch = useAppDispatch();\n    const code = useAppSelector(selectLanguageCode);\n\n    // on first render\n    useMountEffect(() => {\n        dispatch(setLanguage(code));\n\n        if(localStorage.getItem(\"auth\")) dispatch(fetchCurrentAccount());\n    });\n\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/login\">\n                    <Login />\n                </Route>\n                <Route exact path=\"/profile/:username\">\n                    <Profile />\n                </Route>\n                <Route exact path=\"/profile\">\n                    <Profile />\n                </Route>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n                <Route>\n                    <Redirect to=\"/\" />\n                </Route>\n            </Switch>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport \"./css/global.scss\";\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { IS_SAFARI } from './util/contants';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('app')\n);\n\nModal.setAppElement('#app');\n\n// vh on mobile is kinda funky\nsetVH();\nwindow.addEventListener('resize', () => {\n    setVH();\n});\n\nfunction setVH() {\n    const vh = IS_SAFARI ? window.visualViewport.height :  window.innerHeight;\n    document.documentElement.style.setProperty('--vh100', `${vh-1}px`);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__cLKJa\",\"top\":\"ProfileInfo_top__3o043\",\"followers\":\"ProfileInfo_followers__2Nu_-\",\"following\":\"ProfileInfo_following__2ttTb\",\"number\":\"ProfileInfo_number__Lj_2R\",\"smallText\":\"ProfileInfo_smallText__XuTrR\",\"bottom\":\"ProfileInfo_bottom__1S_qc\",\"info\":\"ProfileInfo_info__3zEMb\",\"description\":\"ProfileInfo_description__1hzwZ\",\"actionButtons\":\"ProfileInfo_actionButtons__1207A\",\"horizontal\":\"ProfileInfo_horizontal__1TlCv\",\"name\":\"ProfileInfo_name__2Nwq-\",\"job\":\"ProfileInfo_job__b60_r\",\"separator\":\"ProfileInfo_separator__2VEdK\",\"right\":\"ProfileInfo_right__1dEse\",\"social\":\"ProfileInfo_social__17pXh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__Iv7O1\",\"square\":\"Button_square__24Qg9\",\"smallPadding\":\"Button_smallPadding__1s_AW\",\"white\":\"Button_white__E8Wbq\",\"blue\":\"Button_blue__1Yy1O\",\"black\":\"Button_black__obrtp\",\"lightBorder\":\"Button_lightBorder__pQOr6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Avatar_square__BGVCN\",\"clickable\":\"Avatar_clickable__9RUE4\",\"border\":\"Avatar_border__1fx0F\",\"visible\":\"Avatar_visible__2JtjS\",\"avatar\":\"Avatar_avatar__JOSFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"Feed_feed__3hto0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__8bgC6\",\"content\":\"Home_content__3Qx40\",\"left\":\"Home_left__2wJ4m\",\"right\":\"Home_right__3Vd87\",\"sticky\":\"Home_sticky__2N9Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__miWNG\",\"buttonRow\":\"Footer_buttonRow__eb9fI\",\"greyButton\":\"Footer_greyButton__1OzgT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPost\":\"NewPost_newPost__2t2ka\",\"input\":\"NewPost_input__O7B-h\",\"description\":\"NewPost_description__1_5So\",\"buttons\":\"NewPost_buttons__2rXn9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoFeed\":\"PhotoFeed_photoFeed__1hn3a\",\"square\":\"PhotoFeed_square__1VW1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"file\":\"ImageInput_file__2jY1F\",\"preview\":\"ImageInput_preview__3egAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__pTwNa\",\"modal\":\"Modal_modal__16s7U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ownProfile\":\"Profile_ownProfile__2Inxr\",\"content\":\"Profile_content__1JwYV\"};"],"sourceRoot":""}